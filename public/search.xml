<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BUG 日志：宝塔 CentOS 安装 Docker 失败（2022.9.13）</title>
    <url>/SongXJ01/2022/BUG%E6%97%A5%E5%BF%97%EF%BC%9A%E5%AE%9D%E5%A1%94CentOS%E5%AE%89%E8%A3%85Docker%E5%A4%B1%E8%B4%A5%EF%BC%882022.9.13%EF%BC%89/</url>
    <content><![CDATA[<p> 报错内容 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;class/panelPlugin.py&quot;</span>, line 2788, <span class="keyword">in</span> a</span><br><span class="line">    <span class="built_in">return</span> p.exec_fun(get)</span><br><span class="line">  File <span class="string">&quot;class/pluginAuth.py&quot;</span>, line 67, <span class="keyword">in</span> exec_fun</span><br><span class="line">    raise public.PanelError(res[<span class="string">&#x27;msg&#x27;</span>])</span><br><span class="line">public.PanelError: 面板运行时发生错误: Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;/www/server/panel/plugin/docker/docker_main.py&quot;</span>, line 57, <span class="keyword">in</span> GetConList</span><br><span class="line">    <span class="keyword">for</span> con <span class="keyword">in</span> self.__docker.containers.list(all=True):</span><br><span class="line">AttributeError: <span class="string">&#x27;NoneType&#x27;</span> object has no attribute <span class="string">&#x27;containers&#x27;</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<hr>
<h2 id="解决方式"> 解决方式 </h2>
<h3 id="1- 卸载已经安装的 -docker">1. 卸载已经安装的 Docker</h3>
<p> 如果已经安装了未运行成功的 Docker，错误如下图所示，那么请将这个 Docker 卸载。</p>
<p><img src="/images/BUG%E6%97%A5%E5%BF%97_%E5%AE%9D%E5%A1%94CentOS%E5%AE%89%E8%A3%85Docker%E5%A4%B1%E8%B4%A5/bug_docker_1.png" alt="错误页面"></p>
<h3 id="2- 在 -etc-docker- 路径下创建 -daemon- 配置文件">2. 在 <code>/etc/docker</code> 路径下创建 daemon 配置文件 </h3>
<p><img src="/images/BUG%E6%97%A5%E5%BF%97_%E5%AE%9D%E5%A1%94CentOS%E5%AE%89%E8%A3%85Docker%E5%A4%B1%E8%B4%A5/bug_docker_2.png" alt="daemon 配置文件"></p>
<p> 在 <code>daemon.json</code> 文件中提前配置好 Docker 的镜像源，即将下面这段代码粘贴到 <code>daemon.json</code> 文件中。 <code>daemon.conf</code> 文件此时保持空即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>]&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3- 重新安装 -docker">3. 重新安装 Docker</h3>
<p> 我安装的是宝塔软件商店中的 3.9.1 的版本。</p>
<hr>
<h2 id="bug 原因分析">BUG 原因分析 </h2>
<p> 可能是因为宝塔提供的镜像源和 CentOS 的版本不匹配，因为 CentOS 基于 Python2.7 运行的，Docker 3.9.1 的运行环境好像是 Python3，所以要更新一下镜像源。</p>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>BUG日志</category>
      </categories>
      <tags>
        <tag>BUG</tag>
        <tag>CentOS</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>CUDA 学习笔记</title>
    <url>/SongXJ01/2024/CUDA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>  本篇学习笔记将从 CUDA 的编译开始，逐步深入到程序的运行与调试。同时，还将触及 CUDA 的底层机制，包括内存操作、线程管理，以及如何通过代码优化提升程序的执行效率。</p>
<span id="more"></span>
<br/>
<hr>
<br/>
<h2 id="基本操作">基本操作</h2>
<h3 id="编译">编译</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvcc add.cu -o add_cuda</span><br></pre></td></tr></table></figure>
<p>nvcc 编译时输出核函数寄存器使用情况 <code>-res-usage</code>（或<code>-Xptxas -v</code>）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvcc add.cu -o add_cuda -res-usage -w</span><br></pre></td></tr></table></figure>
<p>输出说明</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvcc thread_fence.cu -o thread_fence -res-usage -w</span><br><span class="line"></span><br><span class="line">ptxas info: 35 bytes gmem</span><br><span class="line">ptxas info: Compiling entry <span class="keyword">function</span> <span class="string">&#x27;_Z6kernelPi&#x27;</span> <span class="keyword">for</span> <span class="string">&#x27;sm_52&#x27;</span></span><br><span class="line">ptxas info: Function properties <span class="keyword">for</span> _Z6kernelPi</span><br><span class="line">    16 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads</span><br><span class="line">ptxas info: Used 10 registers, 328 bytes cmem[0]</span><br></pre></td></tr></table></figure>
<ul>
<li><code>-res-usage</code>：显示资源使用情况的选项。它告诉编译器在编译过程中显示有关资源（如全局内存、常量内存、纹理内存等）使用情况的信息。</li>
<li><code>-w</code>：禁用警告信息的选项。</li>
</ul>
<p><strong>输出信息</strong>：</p>
<ul>
<li><code>35 bytes gmem</code>：表示使用了 35 字节的 <strong> 全局内存</strong>。</li>
<li><code>Compiling entry function '_Z6**kernel**Pi' for 'sm_52'</code>：表示正在为名为 kernel 的入口函数编译为计算能力为 sm_52 的设备。</li>
<li><code>16 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads</code>：表示函数使用了 16 字节的堆栈帧，并没有 spill 存储或加载操作。</li>
<li><code>Used 10 registers, 328 bytes cmem[0]</code>：表示函数使用了 10 个寄存器，328 字节的常量内存，0 字节的共享内存。</li>
</ul>
<p><strong>【注意】</strong>：</p>
<blockquote>
<ul>
<li>一个空的核函数会占用 <code>2 registers，32bytes cmem[0]</code></li>
<li><strong>例子</strong>：每个 Thread 占用 0 个寄存器，每个 Block 有个 128 线程，且每个 Block 占用 48KB 共享内存。由于 SM 内共享内存大小限制，此时一个 SM 只能并发 2 个 Block，即可并发 2*128/32=8 个 Warp，该情况下的 SM Occupany = 8/64 = 12.5%，可见 SM 的利用率极低。对于 Tesla M6，为了将 SM 利用率达到 100%，在块数够多的情况下，则：
<ul>
<li>每个 Block 有 1024 个 Thread 时，每个 Block 占用共享内存需小于等于 48KB</li>
<li>每个 Block 有 512 个 Thread 时，每个 Block 占用共享内存需小于等于 24KB</li>
<li>每个 Block 有 256 个 Thread 时，每个 Block 占用共享内存需小于等于 12KB</li>
<li>每个 Block 有 128 个 Thread 时，每个 Block 占用共享内存需小于等于 6KB</li>
</ul>
</li>
</ul>
</blockquote>
<p>从以上信息可以看出，对于同一个 GPU 而言，Block 内的 Thread 数越多，每个 Block 可占用的共享内存上限越大。</p>
<h3 id="运行">运行</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./add_cuda</span><br></pre></td></tr></table></figure>
<p>快速检查</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvprof ./myApp</span><br></pre></td></tr></table></figure>
<h3 id="调试">调试</h3>
<p>官方调试方案：<a href="https://developer.nvidia.cn/debugging-solutions">Debugging Solutions</a></p>
<h4 id="cuda-gdb">CUDA-GDB</h4>
<p>官网链接：<a href="https://developer.nvidia.cn/cuda-gdb">CUDA-GDB</a><br>
编译成可调试版本：<code>-g</code> 表示将 CPU 代码编译成可调试版本，<code>-G</code> 表示将 GPU 代码编译成可调试版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvcc -g -G main.cu -o main</span><br></pre></td></tr></table></figure>
<p>运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cuda-gdb main</span><br></pre></td></tr></table></figure>
<p>开始</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">start</span><br></pre></td></tr></table></figure>
<p>在 53 行设置断点，<code>c</code>是 continue</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">b <span class="number">53</span></span><br><span class="line">c</span><br></pre></td></tr></table></figure>
<p>查看变量值</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">p val_num</span><br></pre></td></tr></table></figure>
<p>变换 threads：跳到 threadsIdx.x=0, threadsIdx.y=7 的线程</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">cuda <span class="title">thread</span> <span class="params">(<span class="number">0</span>,<span class="number">7</span>,<span class="number">0</span>)</span></span></span><br></pre></td></tr></table></figure>
<p><img src="/images/CUDA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%B0%83%E8%AF%95%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0.png" alt="调试常用参数"></p>
<h4 id="nvidia-nsight-systems"><strong>NVIDIA Nsight Systems</strong></h4>
<p>官网链接：<a href="https://developer.nvidia.cn/zh-cn/nsight-systems">NVIDIA Nsight Systems</a></p>
<p>  NVIDIA Nsight Systems 是一款低开销性能分析工具，旨在为开发人员提供优化软件所需的洞察力。无偏差的活动数据可在工具中可视化，可帮助用户调查瓶颈，避免推断误报，并以更高的性能提升概率实现优化。</p>
<p><img src="/images/CUDA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NVIDIANsightSystems.png" alt="NVIDIA Nsight Systems"></p>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="内存操作">内存操作</h2>
<h3 id="内存层次结构">内存层次结构</h3>
<p>  在 GPU 内存层次结构中，最主要的两种内存是 <strong> 全局内存 </strong> 和<strong>共享内存</strong>。全局内存类似于 CPU 的系统内存，而共享内存类似于 CPU 的缓存，GPU 的共享内存可以由 CUDA C 的内核直接控制。</p>
<p><img src="/images/CUDA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/GPU%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84.png" alt="GPU 内存结构"></p>
<h4 id="共享内存">共享内存</h4>
<p>  共享内存是较小的片上内存，具有相对较低的延迟，并且共享内存可以提供比全局内存高得多的带宽。共享内存相较于全局内存而言，延迟要低大约 20~30 倍，而带宽高其大约 10 倍。共享内存可以当作一个可编程管理的缓存。共享内存通常的用途有:</p>
<ul>
<li>块内线程通信的通道；</li>
<li>用于全局内存数据的可编程管理的缓存；</li>
<li>高速暂存存储器，用于转换数据以优化全局内存访问模式；</li>
</ul>
<p>   <strong>共享内存变量可以被静态或动态地分配。</strong> 在 CUDA 的源代码文件中，共享内存可以被声明为一个本地的 CUDA 核函数或是一个全局的 CUDA 核函数。如果在核函数中进行声明，那么这个变量的作用域就局限在该内核中。如果在文件的任何核函数外进行声明，那么这个变量的作用域对所有核函数来说都是全局的。CUDA 支持一维、二维和三维共享内存数组的声明。<br>
  如果共享内存的大小在编译时是未知的，那么可以用 <code>extern</code> 关键字声明一个未知大小的数组（仅限一维）。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">extern __shared__ int arr [];</span><br></pre></td></tr></table></figure>
<p>  因为这个数组的大小在编译时是未知的，所以在每个核函数被调用时，需要动态分配共享内存，如下所示：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">kernel&lt;&lt;&lt;grid, block, <span class="function">isize * <span class="title">sizeof</span><span class="params">(<span class="type">int</span>)</span>&gt;&gt;&gt;<span class="params">(...)</span></span></span><br></pre></td></tr></table></figure>
<p><strong>小结：</strong></p>
<ul>
<li><strong>位置</strong>：设备内存</li>
<li><strong>形式 </strong>：关键字<code>__shared__</code> 添加到变量声明中。如<code>__shared__ float cache[10]</code>。</li>
<li><strong>目的</strong>：对于 GPU 上启动的每个线程块，CUDA C 编译器都将创建该共享变量的一个副本。线程块中的每个线程都共享这块内存，但线程却无法看到也不能修改其他线程块的变量副本。这样使得一个线程块中的多个线程能够在计算上通信和协作。</li>
</ul>
<h4 id="常量内存">常量内存</h4>
<ul>
<li><strong>位置</strong>：设备内存</li>
<li><strong>形式</strong>：关键字 <code>__constant__</code> 添加到变量声明中。如<code>__constant__ float s[10];</code>。</li>
<li><strong>目的</strong>：为了提升性能。常量内存采取了不同于标准全局内存的处理方式。在某些情况下，用常量内存替换全局内存能有效地减少内存带宽。</li>
<li><strong>特点 </strong>：常量内存用于保存在核函数执行期间不会发生变化的数据。变量的访问限制为只读。NVIDIA 硬件提供了 64KB 的常量内存。不再需要<code>cudaMalloc()</code> 或者<code>cudaFree()</code>，而是在编译时，静态地分配空间。</li>
<li><strong>要求</strong>：当我们需要拷贝数据到常量内存中应该使用 <code>cudaMemcpyToSymbol()</code>，而 <code>cudaMemcpy()</code> 会复制到全局内存。</li>
<li>性能提升的原因：<br>
  对常量内存的单次读操作可以广播到其他的“邻近”线程。这将节约 15 次读取操作。（为什么是 15，因为“邻近”指半个线程束，一个线程束包含 32 个线程的集合。）常量内存的数据将缓存起来，因此对相同地址的连续读操作将不会产生额外的内存通信量。</li>
</ul>
<h4 id="纹理内存 -texture-cache">纹理内存（Texture Cache）</h4>
<ul>
<li><strong>位置</strong>：设备内存</li>
<li><strong>目的</strong>：能够减少对内存的请求并提供高效的内存带宽。是专门为那些在内存访问模式中存在大量空间局部性的图形应用程序设计，意味着一个线程读取的位置可能与邻近线程读取的位置“非常接近”。</li>
<li>纹理变量（引用）必须声明为文件作用域内的全局变量。</li>
<li><strong>形式</strong>：分为一维纹理内存 和 二维纹理内存。</li>
</ul>
<p><img src="/images/CUDA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%BA%B9%E7%90%86%E5%86%85%E5%AD%98.png" alt="纹理内存"></p>
<h3 id="同步">同步</h3>
<h4 id="障碍点">障碍点</h4>
<p>  <code>__syncthreads()</code>用于协调同一 block 中线程间的通信。它要求块中的线程必须等待直到所有线程都到达该点。</p>
<h4 id="内存栅栏">内存栅栏</h4>
<p>  内存栅栏确保栅栏前的任何内存写操作对栅栏后的其他线程都是可见的。memory fence 不能保证所有线程运行到同一位置，只保证执行 memory fence 函数的线程生产的数据能够安全地被其他线程消费。根据所需范围，有 3 种内存栅栏：Block、Grid 或 System。</p>
<ul>
<li><code>__threadfence()</code>：一个线程调用 <code>__threadfence</code> 后，该线程在该语句前对全局存储器或共享存储器的访问已经全部完成，执行结果对 <strong>grid 中</strong> 的所有线程可见。</li>
<li><code>__threadfence_block()</code>：一个线程调用__threadfence_block 后，该线程在该语句前对全局存储器或者共享存储器的访问已经全部完成，执行结果对 <strong>block 中</strong> 的所有线程可见。</li>
<li><code>__threadfence_system()</code>：可以跨系统 (包括主机和设备) 设置内存栅栏。<code>__threadfence_system</code> 挂起调用的线程，以确保该线程对全局内存、锁页主机内存和其他设备内存中的所有写操作对全部设备中的线程和主机线程都是可见的。</li>
</ul>
<p>注意：<strong>threadfence 不是保证所有线程都完成同一操作，而只保证正在进行 fence 的线程本身的操作能够对所有线程安全可见，fence 不要求线程运行到同一指令。</strong></p>
<p>（参考：<a href="https://blog.csdn.net/yutianzuijin/article/details/8507355">https://blog.csdn.net/yutianzuijin/article/details/8507355</a>）</p>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="线程管理">线程管理</h2>
<h3 id="硬件层面">硬件层面</h3>
<p><img src="/images/CUDA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/CUDA%E8%BD%AF%E4%BB%B6%E5%92%8C%E7%A1%AC%E4%BB%B6%E7%BB%93%E6%9E%84.png" alt="CUDA 软件和硬件结构"></p>
<h3 id="软件层面">软件层面</h3>
<p>  一个 SM（Streaming MultiProcessor）由多个 CUDA core 组成，每个 SM 根据 GPU 架构不同有不同数量的 CUDA core。SM 还包括特殊运算单元（SFU），共享内存（shared memory），寄存器文件（Register File）和调度器（Warp Scheduler）等。register 和 shared memory 是稀缺资源，<strong>这些有限的资源就使每个 SM 中 active warps 有非常严格的限制，也就限制了并行能力。</strong></p>
<p><img src="/images/CUDA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/CUDA%E8%BD%AF%E4%BB%B6%E7%BB%93%E6%9E%84.png" alt="CUDA 软件结构"></p>
<p>  由一个内核启动所产生的所有线程统称为一个 <strong> 网格（Grid）</strong>。同一 Grid 中的所有线程共享相同的全局内存空间。一个网格由多个 <strong> 线程块（Block）<strong>构成，其包含一组 </strong> 线程（Thread）</strong>，同一个 block 中的 thread 可以同步，也可以通过 shared memory 进行通信，不同块内的线程不能协作。</p>
<h3 id="warp- 线程束">Warp 线程束</h3>
<p>  SM 采用的 SIMT（Single-Instruction, Multiple-Thread，单指令多线程）架构，warp 是最基本的执行单元，一个 warp 包含 32 个并行 thread，这些 thread <strong>以不同数据资源执行相同的指令 </strong>。当一个 kernel 被执行时，grid 中的线程块被分配到 SM 上，<strong> 一个 Block 中的 thread 只能在一个 SM 上调度</strong>，SM 一般可以调度多个线程块。每个 thread 拥有它自己的程序计数器和状态寄存器，并且用该线程自己的数据执行指令，这就是所谓的单指令多线程。</p>
<p>  一个 CUDA core 可以执行一个 thread，一个 SM 的 CUDA core 会分成几个 warp（即 CUDA core 在 SM 中分组），由 warp scheduler 负责调度。<strong>一个 SM 同时并发的 warp 是有限的</strong>，因为资源限制，SM 要为每个线程块分配共享内存，而也要为每个线程束中的线程分配独立的寄存器，所以 SM 的配置会影响其所支持的线程块和 warp 并发数量。</p>
<p>  一个 warp 中的线程必然在同一个 block 中，如果 block 所含线程数目不是 warp 大小的整数倍，那么多出的那些 thread 所在的 warp 中，会剩余一些 inactive 的 thread。<strong>由于 warp 的大小一般为 32，所以 block 所含的 thread 的大小一般要设置为 32 的倍数。</strong></p>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="cuda- 优化">CUDA 优化</h2>
<h3 id="cuda 核函数中的 printf 原理">CUDA 核函数中的 printf 原理</h3>
<p>  <code>printf</code> 就是 GPU 往 CPU 回传数据，然后显示在终端窗口里。由 CUDA 负责安排多个线程之间的都有哪些数据需要被准备，又是什么格式的，当前 kernel 运行期间因为不能暂停，临时性的又将数据放到哪里。kernel 结束后，检查是否又有需要回传的东西，回传，然后调用 host 上的<code>printf</code>。</p>
<h3 id="优化 -host- 和 -gpu- 之间的内存传输">优化 Host 和 GPU 之间的内存传输</h3>
<h4 id="常规传输方式 -cudamemcpy">常规传输方式 cudaMemcpy</h4>
<p>  在很多情况下都是最慢的方式，但他近乎适用于所有情况，所以也可能是被使用最多的方式。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cudaMemcpy</span> (<span class="type">void</span>* dst, <span class="type">const</span> <span class="type">void</span>* src, <span class="type">size_t</span> count, cudaMemcpyKind kind )</span><br></pre></td></tr></table></figure>
<h4 id="高维矩阵传输 -cudamemcpy2d-cudamalloc3d">高维矩阵传输 cudaMemcpy2D / cudaMalloc3D</h4>
<p>  以二维矩阵为例，可以用 <code>cudaMalloc</code> 来分配一维数组来存储一张图像数据，但这不是效率最快的方案，推荐的方式是使用 <code>cudaMallocPitch</code> 来分配一个二维数组，存取效率更快。<code>cudaMallocPitch</code>有一个非常好的特性是二维矩阵的每一行是内存对齐的，访问效率比一维数组更高。而通过 <code>cudaMallocPitch</code> 分配的内存必须配套使用 <code>cudaMemcpy2D</code> 完成数据传输。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cudaMallocPitch</span> (<span class="type">void</span>** devPtr, <span class="type">size_t</span>* pitch, <span class="type">size_t</span> width, <span class="type">size_t</span> height )</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cudaMemcpy2D</span> (<span class="type">void</span>* dst, <span class="type">size_t</span> dpitch, <span class="type">const</span> <span class="type">void</span>* src, <span class="type">size_t</span> spitch, <span class="type">size_t</span> width, <span class="type">size_t</span> height, cudaMemcpyKind kind )</span><br></pre></td></tr></table></figure>
<p>  相比于普通的 <code>cudaMemcpy</code>，<code>cudaMemcpy2D</code> 多了两个参数 <code>dpitch</code> 和<code>spitch</code>，他们是每一行的实际字节数，是对齐分配 <code>cudaMallocPitch</code> 返回的值。</p>
<h4 id="异步传输 -cudamemcpyasync-cudamemcpy2dasync-cudamemcpy3dasync">异步传输 cudaMemcpyAsync / cudaMemcpy2DAsync / cudaMemcpy3DAsync</h4>
<p><img src="/images/CUDA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%BC%82%E6%AD%A5%E4%BC%A0%E8%BE%93.png" alt="异步传输"></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cudaMemsetAsync</span> (<span class="type">void</span>* devPtr, <span class="type">int</span>  value, <span class="type">size_t</span> count, cudaStream_t stream = <span class="number">0</span> )</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cudaMemcpy2DAsync</span> (<span class="type">void</span>* dst, <span class="type">size_t</span> dpitch, <span class="type">const</span> <span class="type">void</span>* src, <span class="type">size_t</span> spitch, <span class="type">size_t</span> width, <span class="type">size_t</span> height, cudaMemcpyKind kind, cudaStream_t stream = <span class="number">0</span> )</span><br></pre></td></tr></table></figure>
<h4 id="锁页内存">锁页内存</h4>
<p>  <strong>当从可分页内存传输数据到设备内存时，CUDA 驱动程序首先分配临时页面锁定的主机内存，将“可分页内存”复制到“锁页内存”中 [copy 1]，然后再从“锁页内存”传输到“设备内存”[copy 2]</strong>。为了让传输只有一次，我们可以在主机端分配 <strong> 锁页内存 </strong>。锁页内存是主机端一块固定的物理内存，它不能被操作系统移动，不参与虚拟内存相关的交换操作。简而言之，分配之后，地址就固定了，被释放之前不会再变化。GPU 知道锁页内存的物理地址，可以通过“<strong> 直接内存访问（Direct Memory Access，DMA）</strong>”技术直接在主机和 GPU 之间复制数据，传输仅一次，效率更高。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cudaMallocHost</span> (<span class="type">void</span>** ptr, <span class="type">size_t</span> size )</span><br></pre></td></tr></table></figure>
<p><code>ptr</code>为分配的锁页内存地址，<code>size</code>为分配的字节数。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cudaHostAlloc</span> (<span class="type">void</span>** pHost, <span class="type">size_t</span> size, <span class="type">unsigned</span> <span class="type">int</span> flags )</span><br></pre></td></tr></table></figure>
<p><code>pHost</code>为分配的锁页内存地址，<code>size</code>为分配的字节数，<code>flags</code>为内存分配类型，取值如下：</p>
<ul>
<li><code>cudaHostAllocDefault</code>：默认值，等同于 cudaMallocHost</li>
<li><code>cudaHostAllocPortable</code>：分配所有 GPU 都可使用的锁页内存</li>
<li><code>cudaHostAllocMapped</code>：分配的锁页内存可实现零拷贝功能，主机端和设备端各维护一个地址，通过地址直接访问该块内存，无需传输。</li>
<li><code>cudaHostAllocWriteCombined</code>：将分配的锁页内存声明为 write-combined 写联合内存，此类内存不使用 L1 和 L2 cache。</li>
</ul>
<p>   <strong>分配的锁页内存必须使用 <code>cudaFreeHost</code> 接口释放。</strong> 对于一个已存在的可分页内存，可使用 <code>cudaHostRegister() </code> 函数将其注册为锁页内存：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cudaHostRegister</span> (<span class="type">void</span>* ptr, <span class="type">size_t</span> size, <span class="type">unsigned</span> <span class="type">int</span> flags )</span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong> 锁页内存相比可分页内存可减少一次传输过程，显著提高传输效率，但过多的分配会影响操作系统性能。对于图像这类小内存应用还是比较合适的。</p>
<h4 id="零拷贝内存">零拷贝内存</h4>
<p>  使用零拷贝内存时不需要 <code>cudaMemcpy</code> 之类的显式拷贝操作，直接通过指针取值，所以对调用者来说似乎是没有拷贝操作。但实际上是在引用内存中某个值时隐式走 PCIe 总线拷贝，这样的方式有几个优点：</p>
<ul>
<li>无需所有数据一次性显式拷贝到设备端，而是引用某个数据时即时隐式拷贝</li>
<li>隐式拷贝是 <strong> 异步 </strong> 的，可以和计算并行，隐藏内存传输延时</li>
</ul>
<p>  零拷贝内存是一块主机端和设备端共享的内存区域，是锁页内存，使用 <code>cudaHostAlloc</code> 接口分配，分配标志是<code>cudaHostAllocMapped</code>。避免显式的数据传输，适用于数据量少且数据使用次数少的情况</p>
<p>参考：<br>
<a href="https://developer.nvidia.com/blog/how-optimize-data-transfers-cuda-cc/">https://developer.nvidia.com/blog/how-optimize-data-transfers-cuda-cc/</a><br>
<a href="https://zhuanlan.zhihu.com/p/188246455">https://zhuanlan.zhihu.com/p/188246455</a></p>
<h3 id="多卡 cuda 编程">多卡 CUDA 编程</h3>
<h4 id="多卡通信框架 nccl">多卡通信框架 NCCL</h4>
<p><a href="https://www.zhihu.com/question/63219175">如何理解 Nvidia 英伟达的 Multi-GPU 多卡通信框架 NCCL？ - 知乎</a></p>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="cuda-toolkit">CUDA Toolkit</h2>
<p><a href="https://docs.nvidia.com/cuda/archive/11.2.0/index.html">CUDA Toolkit Documentation-11.2</a></p>
<h3 id="thrust">Thrust</h3>
<p><a href="https://docs.nvidia.com/cuda/archive/11.2.0/thrust/index.html#abstract">Thrust :: CUDA Toolkit Documentation</a></p>
<p>   Thrust 是基于 STL 的 CUDA C++ 模板库。安装 CUDA 工具包会将 Thrust 头文件复制到系统的标准 CUDA 包含目录，无需进一步安装即可使用。</p>
<h3 id="cublas">cuBLAS</h3>
<p><a href="https://docs.nvidia.com/cuda/archive/11.2.0/cublas/index.html">cuBLAS :: CUDA Toolkit Documentation</a></p>
<p>   cuBLAS 是 CUDA 基本线性代数子程序库，它允许用户访问 NVIDIA 图形处理单元（GPU）的计算资源。</p>
<h3 id="cusolver">cuSOLVER</h3>
<p><a href="https://docs.nvidia.com/cuda/cusolver/index.html">https://docs.nvidia.com/cuda/cusolver/index.html</a></p>
<p>  cuSolver 库是基于 cuBLAS 和 cuSPARSE 库的高级包。它由对应于两组 API 的两个模块组成：</p>
<ul>
<li>单个 GPU 上的 cuSolver API</li>
<li>单节点多 GPU 上的 cuSolverMG API</li>
</ul>
<p>  cuSolver 的目的是提供有用的类似 LAPACK （<a href="https://netlib.org/lapack/">https://netlib.org/lapack/</a>）的功能，例如：矩阵分解、密集矩阵的三角求解、稀疏最小二乘求解器和特征值求解器。 此外，cuSolver 还提供了一个新的重构库，可用于求解矩阵序列稀疏模式。<br>
cuSolver 将三个独立的组件组合在一起。</p>
<ul>
<li><strong>cuSolverDN</strong>，处理密集矩阵分解和求解，诸如 LU、QR、SVD 和 LDLT 等，以及矩阵和矢量排列等实用程序。</li>
<li><strong>cuSolverSP</strong> 提供了一组基于稀疏矩阵的 QR 分解。 并非所有矩阵在因式分解中都具有良好的并行性稀疏模式，因此 cuSolverSP 库还提供了处理这些类似顺序矩阵的 CPU 路径。 对于那些具有丰富并行性的矩阵，GPU 路径将提供更高的性能。</li>
<li><strong>cuSolverRF</strong>，是一个稀疏重构包，可以提供非常好的求解矩阵序列时的性能，其中仅更改系数但稀疏模式保持不变。</li>
</ul>
<h3 id="cusparse">cuSPARSE</h3>
<p><a href="https://docs.nvidia.com/cuda/cusparse/index.html">https://docs.nvidia.com/cuda/cusparse/index.html</a></p>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="cuda- 的版本敏感性">CUDA 的版本敏感性</h2>
<p>  版本冲突记录（10.1、11.2、11.4）：<code>cusparseScsrmv</code>、<code>cusparseDcsrmv</code> 替换成 <code>cusparseSpMV</code>，参考链接：<br>
<a href="https://docs.nvidia.com/cuda/archive/11.2.0/index.html">CUDA Toolkit Documentation-11.2</a><br>
<a href="https://docs.nvidia.com/cuda/archive/10.1/index.html">CUDA Toolkit Documentation-10.1（POGS）</a><br>
<a href="https://github.com/NVIDIA/CUDALibrarySamples/blob/master/cuSPARSE/spmv_csr/spmv_csr_example.c">CUDALibrarySamples/cuSPARSE/spmv_csr/spmv_csr_example.c at master · NVIDIA/CUDALibrarySamples</a></p>
<ul>
<li><code>cusparseScsr2csc</code> (10.1) ➡️ <code>cusparseCsr2cscEx2</code> (11.2)</li>
<li><code>cusparseDcsrmv</code> (10.1) ➡️ <code>cusparseSpMV</code> (11.2)</li>
<li>在 11.3 或更高版本中，NVIDIA 使用 <code>_CUSPARSE_SPMV_ALG_DEFAULT_</code> 作为稀疏矩阵乘法标志；但在 11.2 或更早版本中，它们使用 <code>_CUSPARSE_MV_ALG_DEFAULT_</code> 作为标志。</li>
</ul>
<p><br/><br/></p>
<h2 id="cuda- 常用参考网站">CUDA 常用参考网站</h2>
<ul>
<li>不同版本的说明文档：<a href="https://developer.nvidia.cn/cuda-toolkit-archive">CUDA Toolkit Archive</a></li>
<li><a href="https://docs.nvidia.com/cuda/archive/11.2.0/index.html">CUDA Toolkit Documentation-11.2</a></li>
<li><a href="https://docs.nvidia.com/cuda/archive/10.1/index.html">CUDA Toolkit Documentation-10.1（POGS）</a></li>
</ul>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>CUDA</category>
      </categories>
      <tags>
        <tag>CUDA</tag>
        <tag>GPU</tag>
        <tag>并行计算</tag>
      </tags>
  </entry>
  <entry>
    <title>H100 结构与 CUDA 编程</title>
    <url>/SongXJ01/2024/H100%E7%BB%93%E6%9E%84%E4%B8%8ECUDA%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<p>  满配的 H100 有 8 个 GPC（图形处理集群，Graphics Processor Cluster），每个 GPC 有 9 个 TPC（纹理处理集群，Texture Processor Cluster），每个 TPC 内有 2 个 SM（Streaming MultiProcessor），总共有 144 个 SM。基于 SXM5（Server PCI Express Module） 的 H100 砍掉了 6 个 TPC，只有 66 个 TPC，总计 132 个 SM。</p>
<span id="more"></span>
<p><img src="/images/H100%E7%BB%93%E6%9E%84%E4%B8%8ECUDA%E7%BC%96%E7%A8%8B/%E7%AE%80%E5%8C%96%E7%9A%84H100%E7%BB%93%E6%9E%84.png" alt="简化的 H100 结构"></p>
<ul>
<li>对于每一个 GPU，通过 GPC 和 TPC 的层级可以划分为很多的 SM</li>
<li>SM 进一步可以划分为 4 组，每组都有自己的 64KB Register File 和很多的计算核心，</li>
<li>同一个 SM 中所有运行的 thread 共享 256KB 的 Shared Memory 和 L1 Data Cache</li>
<li>同一个 GPU 内的所有 SM 共享 50MB L2 Cache 和 80GB HBM3 Memory</li>
<li>进一步向外看，同一个节点上的 GPU 通过 NVLink/NVSwitch 连接在一起</li>
</ul>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="h100 结构与 cuda 编程">H100 结构与 CUDA 编程</h2>
<p>  为了实现 GPU 并行加速计算，我们需要在 Host  上执行  <code>kernel launch</code>，让核函数在  Device 上的多个线程并发执行。CUDA 将核函数所定义的运算称为 <strong> 线程（Thread）</strong>，多个线程组成一个 <strong> 块（Block）</strong>，多个块组成 <strong> 网格（Grid）</strong>。具体的方式就是在调用核函数的时候通过<code>&lt;&lt;&lt;grid, block&gt;&gt;&gt;</code> 来指定核函数要执行的线程数量 N，之后 GPU 上的 N 个 Core 会并行执行核函数，并且每个线程会分配一个唯一的线程号 <code>threadID</code>，这个 ID 值可以通过核函数的内置变量 <code>threadIdx</code> 来获得。</p>
<p>  一个线程需要两个内置的坐标变量 <code>（blockIdx，threadIdx）</code> 来唯一标识，它们都是 <code>dim3</code> 类型变量，其中 <code>blockIdx</code> 指明线程所在 grid 中的位置，而 <code>threaIdx</code> 指明线程所在 block 中的位置。下面即是一个典型的矩阵乘法的 CUDA 程序示例，定义 block 大小为 16 x 16，也就是每个 block 有 256 个 threads。grid 的值则根据矩阵大小算出来需要多少个 block。</p>
<p>  为了进一步理解这里的 CUDA 编程模型概念与硬件结构，我们继续聊聊刚才没有提到的 WARP Scheduler。NVIDIA SM 采用 SIMT（Single Instruction Multiple Thread，单指令多线程）架构，线程束 warp 是最基本的执行和调度单元，一个 warp 一般包含 32 threads，这些 threads 以不同的数据资源执行相同的指令。</p>
<p><img src="/images/H100%E7%BB%93%E6%9E%84%E4%B8%8ECUDA%E7%BC%96%E7%A8%8B/%E4%B8%89%E6%AC%BE%E6%98%BE%E5%8D%A1%E7%9A%84%E8%AE%A1%E7%AE%97%E8%83%BD%E5%8A%9B%E6%AF%94%E8%BE%83.png" alt="三款显卡的计算能力比较"></p>
<h2 id="cluster">Cluster</h2>
<p>  前面介绍的 CUDA 编程模型实际上都是在 Hopper 架构以前的抽象，也就是 grid/block 两级调度，block 映射到 SM 上。随着 Cooperative Groups 的引入和异步编程的支持，多个 Kernel 之间以生产者和消费者的方式通信，SM 到 SM 之间的通信带宽也在增加。在 Hopper 架构中，新增了 Distributed Shared Memory (DSMEM) 的概念，在一个 GPC 内部的 SM 有了专用的通信带宽，因此 CUDA 上新增了一层 Cluster 的调度层次。</p>
<p><img src="/images/H100%E7%BB%93%E6%9E%84%E4%B8%8ECUDA%E7%BC%96%E7%A8%8B/%E6%9C%AA%E5%8A%A0Cluster%E5%89%8D%E7%9A%84GPU%E6%9E%B6%E6%9E%84.png" alt="未加 Cluster 前的 GPU 架构"></p>
<p><img src="/images/H100%E7%BB%93%E6%9E%84%E4%B8%8ECUDA%E7%BC%96%E7%A8%8B/%E5%B8%A6%E6%9C%89Cluster%E7%9A%84GPU%E6%9E%B6%E6%9E%84.png" alt="带有 Cluster 的 GPU 架构"></p>
<p><img src="/images/H100%E7%BB%93%E6%9E%84%E4%B8%8ECUDA%E7%BC%96%E7%A8%8B/threads_cluster.png" alt="threads cluster"></p>
<p>  有了 cluster 这一层抽象之后，类似于同一个 block 的 threads 都会被调度到同一个 SM，<strong>同一个 cluster 的 thread blocks 都会被调度到同一个 GPC 中</strong>。</p>
<p><img src="/images/H100%E7%BB%93%E6%9E%84%E4%B8%8ECUDA%E7%BC%96%E7%A8%8B/ClusterGPC.png" alt="Cluster 和 GPC"></p>
<p>  这样同一个 cluster 中不同 block 的 threads 可以通过 SM to SM Network 访问另一个 block 的 DSMEM（Distributed Shared Memory）。这样在一个 GPC 内部实现多个 SM 的 Load/Store，Atomic，Reduce 和异步 DMA（Direct Memory Access，通过锁页内存直接访问） 操作都变得非常的简洁。</p>
<p><img src="/images/H100%E7%BB%93%E6%9E%84%E4%B8%8ECUDA%E7%BC%96%E7%A8%8B/block%E4%B9%8B%E9%97%B4%E7%9A%84%E4%BA%A4%E4%BA%92.png" alt="block 之间的交互"></p>
<p><strong>CUDA 编程模型的内存模型也就变成了下图所示：</strong><br>
<img src="/images/H100%E7%BB%93%E6%9E%84%E4%B8%8ECUDA%E7%BC%96%E7%A8%8B/%E6%96%B0%E7%9A%84CUDA%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B.png" alt="新的 CUDA 内存模型"></p>
<p>  本质上看，CUDA 引入 block 和 cluster 的抽象，都是为了更好地利用空间局部性原理。Block 可以让所有的 threads 调度到同一个 SM，让 threads 可以通过 fast barriers 快速同步，并且通过 SM 的 Shared Memory 交换数据。<strong>随着 GPU 的 SM 越来越多，仅仅使用 Block 这一层抽象已经不能够更好地利用局部性原理，因此 Hopper 引入了 Cluster 这层抽象，让所有的 threads 运行在同一个 GPC 内部。</strong></p>
<p><strong>参考链接：</strong><br>
<a href="https://mp.weixin.qq.com/s/ccSHfgus5GvG6OleeOfglw">疯狂的 H100：现代 GPU 体系结构浅析，从算力焦虑开始聊起</a><br>
<a href="https://loop.houmin.site/context/gpu-arch/">In The Loop | 疯狂的 H100：现代 GPU 体系结构浅析，从算力焦虑开始聊起</a></p>
<h2 id="pci- 和 -sxm">PCI 和 SXM</h2>
<p>V100 有两种总线规格：<strong>PCIe</strong> 和 <strong>SXM2</strong>。</p>
<p><img src="/images/H100%E7%BB%93%E6%9E%84%E4%B8%8ECUDA%E7%BC%96%E7%A8%8B/V100%E7%9A%84%E6%80%BB%E7%BA%BF%E8%A7%84%E6%A0%BC.png" alt="V100 的总线规格"></p>
<ul>
<li><strong>PCIe</strong>（Peripheral Component Interconnect express）是一种高速串行计算机扩展总线标准，是英特尔公司在 2001 年提出来的，它的出现主要是为了取代 AGP 接口，优点就是兼容性比较好，数据传输速率高、潜力大。</li>
<li><strong>SXM</strong>（Server PCI Express Module）是英伟达公司设计出来的，它的出现主要是为高性能计算和数据中心提高更强的计算能力和传输速度。SXM 接口的 GPU 通常是存在于 <strong>DGX 系统板</strong> 上，该 DGX 系统板支持 4 张 GPU-SXM 或则 8 张 GPU-SXM，而每个 GPU 之间通过 <strong>NVLink</strong> 进行通信。</li>
</ul>
<p><img src="/images/H100%E7%BB%93%E6%9E%84%E4%B8%8ECUDA%E7%BC%96%E7%A8%8B/SXM5%E6%A8%A1%E5%9D%97.png" alt="这是 H100 GPU 封装在 SXM5 模块中"></p>
<p><img src="/images/H100%E7%BB%93%E6%9E%84%E4%B8%8ECUDA%E7%BC%96%E7%A8%8B/HGX.png" alt="NVIDIA HGX H100，由 8 个 H100 SXM5 模块加上 4 个 NVSwitch Chip 在同一个 system board 上"></p>
<p><img src="/images/H100%E7%BB%93%E6%9E%84%E4%B8%8ECUDA%E7%BC%96%E7%A8%8B/DGX.png" alt="DGX H100 在 HGX 100 的基础上，进一步配置了 CPU、存储与网卡"></p>
<ul>
<li>DGX（Deep-learning GPU Accelerator）：NVIDIA 推出的一系列专门用于加速深度学习工作负载的高性能计算平台
<ul>
<li>DGX 系统板：<a href="https://www.nvidia.cn/data-center/dgx-1/">https://www.nvidia.cn/data-center/dgx-1/</a></li>
<li>DGX-1：8 块 V100 （<a href="https://www.nvidia.cn/content/dam/en-zz/Solutions/Data-Center/dgx-1/dgx-1-rhel-centos-datasheet-update-r2.pdf">技术文档</a>）</li>
</ul>
</li>
</ul>
<p><strong>NVLink 与 NVSwitch ：</strong><br>
NVLink 是一种 GPU 之间的直接互连，可扩展服务器内的多 GPU 输入 / 输出 (IO)。<br>
NVSwitch 可连接多个 NVLink，在单节点内和节点间实现以 NVLink 能够达到的最高速度进行多对多 GPU 通信。</p>
<p><img src="/images/H100%E7%BB%93%E6%9E%84%E4%B8%8ECUDA%E7%BC%96%E7%A8%8B/NVSwitch.png" alt="NVSwitch 使 NVIDIA DGX H100 系统中的 8 个 GPU 能够在一个具有全带宽连接的集群中协同工作。"></p>
<p>参考：</p>
<ul>
<li><a href="https://www.nvidia.cn/data-center/nvlink/">https://www.nvidia.cn/data-center/nvlink/</a></li>
<li><a href="https://www.bilibili.com/read/cv24855760/">https://www.bilibili.com/read/cv24855760/</a></li>
</ul>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>CUDA</category>
      </categories>
      <tags>
        <tag>CUDA</tag>
        <tag>GPU</tag>
        <tag>并行计算</tag>
      </tags>
  </entry>
  <entry>
    <title>NumPy 中的矩阵计算</title>
    <url>/SongXJ01/2023/NumPy%E4%B8%AD%E7%9A%84%E7%9F%A9%E9%98%B5%E8%AE%A1%E7%AE%97/</url>
    <content><![CDATA[<p>  在本篇文章中将深入探讨 NumPy 库中矩阵点乘与叉乘的具体运算法则。</p>
<span id="more"></span>
<p><br/><br/></p>
<h2 id="点乘 -element-wise-multiplication">点乘（Element-wise multiplication）</h2>
<p>  对于两个维度完全一样的矩阵用 multiply 做乘法，那么它们就是进行对应位置元素之间的乘法（Element-Wise Product），得到一个同样维度的矩阵输出，用符号 <code>.*</code> 表示（等价于 <code>numpy</code> 中的 <code>*</code> 符号）。</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>11</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>12</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>13</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>21</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>22</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>23</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>31</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>32</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>33</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mi mathvariant="normal">.</mi><mo>∗</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>11</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>12</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>13</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>21</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>22</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>23</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>31</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>32</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>33</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>11</mn></msub><msub><mi>b</mi><mn>11</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>12</mn></msub><msub><mi>b</mi><mn>12</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>13</mn></msub><msub><mi>b</mi><mn>13</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>21</mn></msub><msub><mi>b</mi><mn>21</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>22</mn></msub><msub><mi>b</mi><mn>22</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>23</mn></msub><msub><mi>b</mi><mn>23</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>31</mn></msub><msub><mi>b</mi><mn>31</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>32</mn></msub><msub><mi>b</mi><mn>32</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>33</mn></msub><msub><mi>b</mi><mn>33</mn></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left[\begin{array}{lll}
    a_{11} &amp; a_{12} &amp; a_{13} \\
    a_{21} &amp; a_{22} &amp; a_{23} \\
    a_{31} &amp; a_{32} &amp; a_{33}
    \end{array}\right] .*\left[\begin{array}{lll}
    b_{11} &amp; b_{12} &amp; b_{13} \\
    b_{21} &amp; b_{22} &amp; b_{23} \\
    b_{31} &amp; b_{32} &amp; b_{33}
    \end{array}\right]=\left[\begin{array}{lll}
    a_{11} b_{11} &amp; a_{12} b_{12} &amp; a_{13} b_{13} \\
    a_{21} b_{21} &amp; a_{22} b_{22} &amp; a_{23} b_{23} \\
    a_{31} b_{31} &amp; a_{32} b_{32} &amp; a_{33} b_{33}
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="标量 - 向量 -or- 矩阵 -scalar-vector-or-matrix">标量 .* 向量 or 矩阵（Scalar .* Vector or Matrix）</h3>
<p>  设有行向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">a=\left[1,2,3\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span>，将其转置得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mi>T</mi></msup><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">a^T=\left[\begin{array}{l}
1 \\
2 \\
3 
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span>, 和矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M=\left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
4 &amp; 5 &amp; 6 \\
7 &amp; 8 &amp; 9
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span>。标量点乘向量或矩阵，则代表标量乘向量或矩阵中的每一个元素，在这种情况下左乘和右乘是等价的。</p>
<p>【例子】</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mi>a</mi><mo>=</mo><mn>2</mn><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mn>2</mn><mo separator="true">,</mo><mn>4</mn><mo separator="true">,</mo><mn>6</mn><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">2 \; .* \; a = 2 \; .* \; \left[1,2,3\right] = \left[2,4,6\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><msup><mi>a</mi><mi>T</mi></msup><mo>=</mo><mn>2</mn><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">2 \; .* \; a^T = 2 \; .* \; \left[\begin{array}{l}
1 \\
2 \\
3 
\end{array}\right]=\left[\begin{array}{l}
2 \\
4 \\
6 
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mi>M</mi><mo>=</mo><mn>2</mn><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>12</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>14</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>16</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>18</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">2 \; .* \; M = 2 \; .* \; \left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
4 &amp; 5 &amp; 6 \\
7 &amp; 8 &amp; 9
\end{array}\right] = \left[\begin{array}{lll}
2 &amp; 4 &amp; 6 \\
8 &amp; 10 &amp; 12 \\
14 &amp; 16 &amp; 18
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="矩阵 - 矩阵 -matrix-matrix">矩阵 .* 矩阵 （Matrix .* Matrix）</h3>
<p>  设有矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M=\left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
4 &amp; 5 &amp; 6 \\
7 &amp; 8 &amp; 9
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span>，矩阵之间的点乘仅支持维度完全相同的两个矩阵相乘，其本质为两个矩阵对应元素相乘，在这种情况下左乘和右乘是等价的。</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mi>M</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>16</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>25</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>36</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>49</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>64</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>81</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M \; .* \; M = \left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
4 &amp; 5 &amp; 6 \\
7 &amp; 8 &amp; 9
\end{array}\right] \; .* \; \left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
4 &amp; 5 &amp; 6 \\
7 &amp; 8 &amp; 9
\end{array}\right] = \left[\begin{array}{lll}
1 &amp; 4 &amp; 9 \\
16 &amp; 25 &amp; 36 \\
49 &amp; 64 &amp; 81
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">6</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span><span class="mord">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mord">6</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="向量 - 向量 -vector-vector">向量 .* 向量 （Vector .* Vector）</h3>
<p>  设有行向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">a=\left[1,2,3\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>=</mo><mrow><mo fence="true">[</mo><mn>4</mn><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>6</mn><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">b=\left[4,5,6\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>=</mo><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">c=\left[1,2\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span>。若两个维度相同的向量点乘，则代表对应位置的元素对应相乘，若两个向量方向不同（一个为行向量，一个为列向量）则对各自长度不做要求，分别补齐成相同形状后对应元素相乘。在这种情况下左乘和右乘是等价的。</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mi>b</mi><mo>=</mo><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mn>4</mn><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>6</mn><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mn>4</mn><mo separator="true">,</mo><mn>10</mn><mo separator="true">,</mo><mn>18</mn><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">a \; .* \; b = \left[1,2,3\right] \; .* \; \left[4,5,6\right] = \left[4,10,18\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">8</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><msup><mi>b</mi><mi>T</mi></msup><mo>=</mo><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>12</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">c \; .* \; b^T = \left[1,2\right] \; .* \; \left[\begin{array}{l}
4 \\
5 \\
6 
\end{array}\right]= \left[\begin{array}{lll}
1 &amp; 2  \\
1 &amp; 2  \\
1 &amp; 2 
\end{array}\right] \; .* \; \left[\begin{array}{lll}
4 &amp; 4  \\
5 &amp; 5  \\
6 &amp; 6 
\end{array}\right]= \left[\begin{array}{lll}
4 &amp; 8  \\
5 &amp; 10  \\
6 &amp; 12 
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>c</mi><mi>T</mi></msup><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mi>b</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mn>4</mn><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>6</mn><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>12</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">c^T \; .* \; b = \left[\begin{array}{l}
1 \\
2 \\
\end{array}\right] \; .* \; \left[4,5,6\right] = \left[\begin{array}{lll}
1 &amp; 1 &amp; 1 \\
2 &amp; 2 &amp; 2 \\
\end{array}\right] \; .* \; \left[\begin{array}{lll}
4 &amp; 5 &amp; 6 \\
4 &amp; 5 &amp; 6 
\end{array}\right]= \left[\begin{array}{lll}
4 &amp; 5 &amp; 6 \\
8 &amp; 10 &amp; 12 
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></p>
<h3 id="向量 - 矩阵 -vector-matrix-or-matrix-vector">向量 .* 矩阵 （Vector .* Matrix or Matrix .* Vector）</h3>
<p>  （这里的沿用数学书写习惯使用“<code>.*</code>”代表 NumPy 中的“<code>*</code>”）<br>
  设有行向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">a=\left[1,2,3\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span>, 和矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M=\left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
4 &amp; 5 &amp; 6 \\
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span>。如果是行向量和矩阵点乘，则其长度必须和矩阵的列数相同，纵向补齐成和矩阵维度相同后对应元素相乘；如果是列向量和矩阵点乘，则其长度必须和矩阵的行数相同，横向补齐成和矩阵维度相同后对应元素相乘。在这种情况下左乘和右乘是等价的。</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mi>M</mi><mo>=</mo><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>18</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">a \; .* \; M = \left[1,2,3\right] \; .* \; \left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
4 &amp; 5 &amp; 6 \\
\end{array}\right]= \left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
1 &amp; 2 &amp; 3 \\
\end{array}\right] \; .* \; \left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
4 &amp; 5 &amp; 6 \\
\end{array}\right]= \left[\begin{array}{lll}
1 &amp; 4 &amp; 9 \\
4 &amp; 10 &amp; 18 \\
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mi>T</mi></msup><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><msup><mi>M</mi><mi>T</mi></msup><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>18</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">a^T \; .* \; M^T = \left[\begin{array}{l}
1 \\
2 \\
3 
\end{array}\right] \; .* \; \left[\begin{array}{lll}
1 &amp; 4  \\
2 &amp; 5  \\
3 &amp; 6
\end{array}\right] = \left[\begin{array}{lll}
1 &amp; 1  \\
2 &amp; 2  \\
3 &amp; 3 
\end{array}\right] \; .* \; \left[\begin{array}{lll}
1 &amp; 4  \\
2 &amp; 5  \\
3 &amp; 6 
\end{array}\right]= \left[\begin{array}{lll}
1 &amp; 4  \\
4 &amp; 10  \\
9 &amp; 18 
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><msup><mi>M</mi><mi>T</mi></msup><mo>=</mo><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mi>I</mi><mi>n</mi><mi>v</mi><mi>a</mi><mi>l</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">a \; .* \; M^T = \left[1,2,3\right] \; .* \; \left[\begin{array}{lll}
1 &amp; 4  \\
2 &amp; 5  \\
3 &amp; 6
\end{array}\right] = Invalid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mi>T</mi></msup><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mi>M</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mi>I</mi><mi>n</mi><mi>v</mi><mi>a</mi><mi>l</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">a^T \; .* \; M = \left[\begin{array}{l}
1 \\
2 \\
3 
\end{array}\right] \; .* \;\left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
4 &amp; 5 &amp; 6 \\
\end{array}\right] = Invalid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mi>a</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>18</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M \; .* \; a = \left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
4 &amp; 5 &amp; 6 \\
\end{array}\right] \; .* \;\left[1,2,3\right] =  \left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
4 &amp; 5 &amp; 6 \\
\end{array}\right]  \; .* \; \left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
1 &amp; 2 &amp; 3 \\
\end{array}\right] = \left[\begin{array}{lll}
1 &amp; 4 &amp; 9 \\
4 &amp; 10 &amp; 18 \\
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mi>T</mi></msup><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><msup><mi>a</mi><mi>T</mi></msup><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>18</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M^T \; .* \; a^T =  \left[\begin{array}{lll}
1 &amp; 4  \\
2 &amp; 5  \\
3 &amp; 6
\end{array}\right]  \; .* \; \left[\begin{array}{l}
1 \\
2 \\
3 
\end{array}\right] = \left[\begin{array}{lll}
1 &amp; 4  \\
2 &amp; 5  \\
3 &amp; 6 
\end{array}\right] \; .* \; \left[\begin{array}{lll}
1 &amp; 1  \\
2 &amp; 2  \\
3 &amp; 3 
\end{array}\right] = \left[\begin{array}{lll}
1 &amp; 4  \\
4 &amp; 10  \\
9 &amp; 18 
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mi>T</mi></msup><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mi>a</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo fence="true">]</mo></mrow><mo>=</mo><mi>I</mi><mi>n</mi><mi>v</mi><mi>a</mi><mi>l</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">M^T  \; .* \; a = \left[\begin{array}{lll}
1 &amp; 4  \\
2 &amp; 5  \\
3 &amp; 6
\end{array}\right] \; .* \; \left[1,2,3\right]  = Invalid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><msup><mi>a</mi><mi>T</mi></msup><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mi mathvariant="normal">.</mi><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mi>I</mi><mi>n</mi><mi>v</mi><mi>a</mi><mi>l</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">M \; .* \; a^T = \left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
4 &amp; 5 &amp; 6 \\
\end{array}\right] \; .* \;  \left[\begin{array}{l}
1 \\
2 \\
3 
\end{array}\right]= Invalid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span></p>
<p><br/><br/></p>
<hr>
<p><br/><br/></p>
<h2 id="叉乘 -dot">叉乘（dot）</h2>
<p>  矩阵叉乘，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">m</mi><mo>×</mo><mi mathvariant="normal">n</mi></mrow><annotation encoding="application/x-tex">\mathrm{m} \times \mathrm{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathrm">m</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">n</span></span></span></span></span>矩阵乘以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">n</mi><mo>×</mo><mi mathvariant="normal">k</mi></mrow><annotation encoding="application/x-tex">\mathrm{n} \times \mathrm{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathrm">n</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">k</span></span></span></span></span>矩阵会得到一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">m</mi><mo>×</mo><mi mathvariant="normal">k</mi></mrow><annotation encoding="application/x-tex">\mathrm{m} \times \mathrm{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathrm">m</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">k</span></span></span></span></span> 的矩阵，用符号 <code>*</code> 表示（等价于 <code>numpy</code> 中的 <code>@</code> 符号）。</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mrow><mi mathvariant="normal">m</mi><mo>×</mo><mi mathvariant="normal">n</mi></mrow></msup><mspace width="1em"/><mo>∗</mo><mspace width="1em"/><msup><mi>B</mi><mrow><mi mathvariant="normal">n</mi><mo>×</mo><mi mathvariant="normal">k</mi></mrow></msup><mspace width="1em"/><mo>=</mo><mspace width="1em"/><msup><mi>C</mi><mrow><mi mathvariant="normal">m</mi><mo>×</mo><mi mathvariant="normal">k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">A^{\mathrm{m} \times \mathrm{n}}  \quad * \quad B^{\mathrm{n} \times \mathrm{k}} \quad=\quad C^{\mathrm{m} \times \mathrm{k}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">m</span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathrm mtight">n</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">n</span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathrm mtight">k</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">m</span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathrm mtight">k</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="标量 - 向量 -or- 矩阵 -scalar-vector-or-matrix">标量 * 向量 or 矩阵（Scalar * Vector or Matrix）</h3>
<p>  标量作为一个维度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\mathrm{1} \times \mathrm{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathrm">1</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">1</span></span></span></span></span> 的矩阵，按照矩阵乘法仅支持右乘行向量，或左乘列向量。设有行向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">a=\left[1,2,3\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span>，将其转置得到列向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mi>T</mi></msup><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">a^T=\left[\begin{array}{l}
1 \\
2 \\
3 
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span>,</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>×</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mtext>  </mtext><mo>∗</mo><mtext>  </mtext><msup><mi>a</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>×</mo><mn>3</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mn>2</mn><mtext>  </mtext><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mn>2</mn><mo separator="true">,</mo><mn>4</mn><mo separator="true">,</mo><mn>6</mn><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">2^{(1\times1)} \; * \; a^{(1\times3)} = 2 \; * \; \left[1,2,3\right] = \left[2,4,6\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mtight">3</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mi>T</mi><mo stretchy="false">(</mo><mn>3</mn><mo>×</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mtext>  </mtext><mo>∗</mo><mtext>  </mtext><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>×</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mo>∗</mo><mtext>  </mtext><mn>2</mn><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">a^{T(3\times1)}\; * \; 2^{(1\times1)} = \left[\begin{array}{l}
1 \\
2 \\
3 
\end{array}\right] \; * \; 2 =\left[\begin{array}{l}
2 \\
4 \\
6 
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mopen mtight">(</span><span class="mord mtight">3</span><span class="mbin mtight">×</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="矩阵 - 矩阵 -matrix-matrix">矩阵 * 矩阵 （Matrix * Matrix）</h3>
<p>  设有矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>1</mn></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M_1=\left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
4 &amp; 5 &amp; 6 \\
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>2</mn></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M_2=\left[\begin{array}{ll}
1 &amp; 2 \\
3 &amp; 4 \\
5 &amp; 6 \\
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span>。这种情况下按照矩阵运算法则进行计算。</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>M</mi><mn>1</mn><mrow><mo stretchy="false">(</mo><mn>2</mn><mo>×</mo><mn>3</mn><mo stretchy="false">)</mo></mrow></msubsup><mtext>  </mtext><mo>∗</mo><mtext>  </mtext><msubsup><mi>M</mi><mn>2</mn><mrow><mo stretchy="false">(</mo><mn>3</mn><mo>×</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msubsup><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>22</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>28</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>49</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>64</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M_1^{(2\times3)} \; * \; M_2^{(3\times2)} = \left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
4 &amp; 5 &amp; 6 \\
\end{array}\right] \; * \; \left[\begin{array}{ll}
1 &amp; 2 \\
3 &amp; 4 \\
5 &amp; 6 \\
\end{array}\right] = \left[\begin{array}{ll}
22 &amp; 28 \\
49 &amp; 64
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.311108em;vertical-align:-0.26630799999999993em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mbin mtight">×</span><span class="mord mtight">3</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.311108em;vertical-align:-0.26630799999999993em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">3</span><span class="mbin mtight">×</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span><span class="mord">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">8</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>M</mi><mn>1</mn><mrow><mi>T</mi><mo stretchy="false">(</mo><mn>3</mn><mo>×</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msubsup><mtext>  </mtext><mo>∗</mo><mtext>  </mtext><msubsup><mi>M</mi><mn>2</mn><mrow><mi>T</mi><mo stretchy="false">(</mo><mn>2</mn><mo>×</mo><mn>3</mn><mo stretchy="false">)</mo></mrow></msubsup><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>19</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>29</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>12</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>26</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>40</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>15</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>33</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>51</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M_1^{T(3\times2)} \; * \; M_2^{T(2\times3)} = \left[\begin{array}{ll}
1 &amp; 4 \\
2 &amp; 5 \\
3 &amp; 6 \\
\end{array}\right] \; * \;   \left[\begin{array}{lll}
1 &amp; 3 &amp; 5 \\
2 &amp; 4 &amp; 6 \\
\end{array}\right] = \left[\begin{array}{lll}
9 &amp; 19 &amp; 29 \\
12 &amp; 26 &amp; 40 \\
15 &amp; 33 &amp; 51
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.311108em;vertical-align:-0.26630799999999993em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mopen mtight">(</span><span class="mord mtight">3</span><span class="mbin mtight">×</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.311108em;vertical-align:-0.26630799999999993em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mbin mtight">×</span><span class="mord mtight">3</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">9</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">6</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">9</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="向量 - 向量 -vector-vector">向量 * 向量 （Vector * Vector）</h3>
<p>  设有行向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">a=\left[1,2,3\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>=</mo><mrow><mo fence="true">[</mo><mn>4</mn><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>6</mn><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">b=\left[4,5,6\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span>。这种情况下按照矩阵运算法则进行计算。</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>×</mo><mn>3</mn><mo stretchy="false">)</mo></mrow></msup><mtext>  </mtext><mo>∗</mo><mtext>  </mtext><msup><mi>b</mi><mrow><mi>T</mi><mo stretchy="false">(</mo><mn>3</mn><mo>×</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo fence="true">]</mo></mrow><mtext>  </mtext><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mn>32</mn></mrow><annotation encoding="application/x-tex">a^{(1\times3)} \; * \; b^{T(3\times1)} = \left[1,2,3\right] \; * \; \left[\begin{array}{l}
4 \\
5 \\
6 
\end{array}\right]= 32</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mtight">3</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mopen mtight">(</span><span class="mord mtight">3</span><span class="mbin mtight">×</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">2</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mi>T</mi><mo stretchy="false">(</mo><mn>3</mn><mo>×</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mtext>  </mtext><mo>∗</mo><mtext>  </mtext><msup><mi>b</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>×</mo><mn>3</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mn>4</mn><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>6</mn><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>12</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>12</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>15</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>18</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">a^{T(3\times1)} \; * \; b^{(1\times3)} = \left[\begin{array}{l}
1 \\
2 \\
3 
\end{array}\right] \; * \; \left[4,5,6\right] = \left[\begin{array}{lll}
4 &amp; 5 &amp; 6 \\
8 &amp; 10 &amp; 12 \\
12 &amp; 15 &amp; 18
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mopen mtight">(</span><span class="mord mtight">3</span><span class="mbin mtight">×</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mtight">3</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="向量 - 矩阵 -vector-matrix-or-matrix-vector">向量 * 矩阵 （Vector * Matrix or Matrix * Vector）</h3>
<p>  设有行向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">a=\left[1,2,3\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span>, 和矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M=\left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
4 &amp; 5 &amp; 6 \\
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span>。这种情况下按照矩阵运算法则进行计算。</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>×</mo><mn>3</mn><mo stretchy="false">)</mo></mrow></msup><mtext>  </mtext><mo>∗</mo><mtext>  </mtext><msup><mi>M</mi><mrow><mi>T</mi><mo stretchy="false">(</mo><mn>3</mn><mo>×</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo fence="true">]</mo></mrow><mtext>  </mtext><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mn>14</mn><mo separator="true">,</mo><mn>32</mn><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">a^{(1\times3)} \; * \; M^{T(3\times2)} = \left[1,2,3\right] \; * \; \left[\begin{array}{ll}
1 &amp; 2 \\
3 &amp; 4 \\
5 &amp; 6 \\
\end{array}\right] = \left[14,32\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mtight">3</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mopen mtight">(</span><span class="mord mtight">3</span><span class="mbin mtight">×</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mord">2</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mrow><mo stretchy="false">(</mo><mn>2</mn><mo>×</mo><mn>3</mn><mo stretchy="false">)</mo></mrow></msup><mtext>  </mtext><mo>∗</mo><mtext>  </mtext><msup><mi>a</mi><mrow><mi>T</mi><mo stretchy="false">(</mo><mn>3</mn><mo>×</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mtext>  </mtext><mo>∗</mo><mtext>  </mtext><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>14</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>32</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M^{(2\times3)} \; * \; a^{T(3\times1)} = \left[\begin{array}{lll}
1 &amp; 2 &amp; 3 \\
4 &amp; 5 &amp; 6 \\
\end{array}\right]  \; * \; \left[\begin{array}{l}
1 \\
2 \\
3 
\end{array}\right] = \left[\begin{array}{l}
14 \\
32
\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mbin mtight">×</span><span class="mord mtight">3</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mopen mtight">(</span><span class="mord mtight">3</span><span class="mbin mtight">×</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">4</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></p>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>矩阵计算</category>
      </categories>
      <tags>
        <tag>矩阵计算</tag>
        <tag>Python</tag>
        <tag>NumPy</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 数据库部署与操作</title>
    <url>/SongXJ01/2023/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p>本次的实验环境是<code>CentOS 7.9</code> 已经安装了宝塔面板，并安装了<code>Docker 管理器 3.9.1</code>。</p>
<span id="more"></span>
<hr>
<h2 id="mysql 的安装与部署">MySQL 的安装与部署</h2>
<h3 id="1- 在 docker 中安装 mysql">1. 在 Docker 中安装 MySQL</h3>
<p><strong>【将 Docker 中 MySQL 数据库挂载到服务器】</strong><br>
将 Docker 中的数据以及配置文件映射到服务器的文件系统上，这样当删除了 Docker 容器后，之前的数据记录依然存在。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run --restart=always --privileged=true -d \</span><br><span class="line">-v /dockerImageFile/mysql/data:/var/lib/mysql \</span><br><span class="line">-v /dockerImageFile/mysql/conf:/etc/mysql/conf.d \</span><br><span class="line">-v /dockerImageFile/mysql/my.cnf:/etc/mysql/my.cnf </span><br><span class="line">-p 3306:3306 \</span><br><span class="line">--name mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">mysql:5.7</span><br></pre></td></tr></table></figure>
<ul>
<li><code>-v</code>：文件挂载（<code>宿主机文件路径</code>:<code>Docker 容器文件路径</code>）；</li>
<li><code>-p</code>：端口映射（<code>对外暴露端口</code>:<code>Docker 容器内部端口</code>）；</li>
<li><code>--name</code>：容器名称；</li>
<li><code>MYSQL_ROOT_PASSWORD=123456</code>：设置 MySQL 数据库的初始 root 密码为<code>123456</code>；</li>
<li><code>mysql:5.7</code>：指定 MySQL 版本为 5.7。</li>
</ul>
<p><strong>【若不需要挂载的话可以正常运行下面的命令】</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</span><br></pre></td></tr></table></figure>
<p><strong>【注意】</strong>：上述指令只适用于 Linux、Windows 系统等 x86 架构芯片的机器，若为 M1 芯片，需要使用如下命令安装较新的 MySQL 版本。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql/mysql-server</span><br></pre></td></tr></table></figure>
<h4 id="可能会遇到的错误">可能会遇到的错误</h4>
<h5 id="数据库管理工具连接错误">※ 数据库管理工具连接错误</h5>
<p><strong>错误提示</strong>：<code>Host '172.17.0.1' is not allowed to connect to this MySQL server</code></p>
<p>说明所连接的用户帐号没有远程连接的权限，只能在本机（localhost）登录，需更改 MySQL 数据库里的 user 表里的 host 项。</p>
<ul>
<li>进入容器：</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">docker <span class="keyword">exec</span> <span class="operator">-</span>it mysql <span class="operator">/</span>bin<span class="operator">/</span>bash</span><br></pre></td></tr></table></figure>
<ul>
<li>登录 MySQL：</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql <span class="operator">-</span>uroot <span class="operator">-</span>p123456</span><br></pre></td></tr></table></figure>
<ul>
<li>修改权限表格</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">use mysql;</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> host <span class="operator">=</span> <span class="string">&#x27;%&#x27;</span> <span class="keyword">where</span> <span class="keyword">user</span> <span class="operator">=</span> &quot;root&quot;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>
<h5 id="无修改权限">※ 无修改权限</h5>
<p><strong>错误提示</strong>：<code>Access denied for user 'dorm'@'%to database'xxx'</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;dorm&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="2- 在 docker 中安装 phpmyadmin">2. 在 Docker 中安装 phpMyAdmin</h3>
<p>phpMyAdmin 是一种 MySQL 图形化 管理工具，该工具是基于 Web 跨平台的管理程序，并且支持简体中文。在宿主机的命令行运行下面的代码即可安装。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run --name phpmyadmin -p 8080:80 --link mysql:db -d phpmyadmin/phpmyadmin:latest</span><br></pre></td></tr></table></figure>
<ul>
<li><code>phpmyadmin</code>：容器名称；</li>
<li><code>8080:80</code>：开放端口 8080 来映射宿主机的 80 端口；</li>
<li><code>mysql</code>：刚才设置的 MySQL 的容器名称，如果刚才修改容器名称的话，一定记得要在这里修改。</li>
</ul>
<p>安装完成后，通过 <code>公网 IP:8080</code> 即可访问如下页面，初始账号为 root，密码为刚才设置的 <code>MYSQL_ROOT_PASSWORD=</code> 后面的内容（<code>123456</code>）<br>
<img src="/images/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%93%8D%E4%BD%9C/PHPMyAdmin.png" alt="PHPMyAdmin"></p>
<h4 id="可能会遇到的问题">可能会遇到的问题</h4>
<h5 id="无法访问 phpmyadmin">※ 无法访问 phpMyAdmin</h5>
<p>这种情况大多数是因为防火墙（或服务器的安全组规则）导致的。因为刚才自定义的 <code>8080</code> 端口在服务器中是默认不开放的，所以要配置服务器的安全组，将其开放。<br>
<img src="/images/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%93%8D%E4%BD%9C/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%BC%80%E6%94%BE%E5%AE%89%E5%85%A8%E7%BB%84.png" alt="腾讯云开放安全组"></p>
<h3 id="3- 创建账户与数据库">3. 创建账户与数据库</h3>
<p>新建一个项目账户（dorm），如下图所示。<br>
<img src="/images/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%93%8D%E4%BD%9C/%E6%96%B0%E5%A2%9E%E9%A1%B9%E7%9B%AE%E7%94%A8%E6%88%B7.png" alt="新增项目用户"></p>
<p><strong>【注意】：在项目中尽量不要使用 root 用户管理项目，而是单独创建以该项目名称为命名的数据库账户，并建立同名的数据库进行管理。</strong></p>
<h3 id="4- 本地 mysql 的安装与操作">4. 本地 MySQL 的安装与操作</h3>
<p>本人使用的是 M1 的 Mac 环境，因此对应安装了 M1 版本的 Docker 和 MySQL，具体步骤和①两步类似，所以这里就不再赘述。<br>
本地是数据库管理软件我使用的的是免费开源的数据库管理软件“Sequel Ace”，它具有数据库管理软件的基本功能，在 AppStore 中就可以搜索到，而且是完全免费的。<br>
<img src="/images/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%93%8D%E4%BD%9C/Sequel_Ace.png" alt="Sequel Ace"></p>
<p><img src="/images/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%93%8D%E4%BD%9C/%E8%AE%BE%E8%AE%A1%E6%95%B0%E6%8D%AE%E5%BA%93.png" alt="设计数据库"></p>
<hr>
<h2 id="springboot- 连接 -mysql">SpringBoot 连接 MySQL</h2>
<h3 id="1-porm-xml- 文件">1. porm.xml 文件</h3>
<p>在 porm.xml 文件中的 <code>&lt;dependencies&gt;</code> 中添加 JDBC 的依赖。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>更新 Maven 依赖。</p>
<h3 id="2-application-yml- 文件">2. application.yml 文件</h3>
<p>修改 SpringBoot 配置文件，application.yml 文件，增加数据库相关信息。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">server:  </span><br><span class="line">  port: <span class="number">8090</span></span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">	## url: jdbc:mysql:<span class="comment">//127.0.0.1:3306/DORM  ## 本地测试环境</span></span><br><span class="line">    url: jdbc:mysql:<span class="comment">//42.194.xxx.xx:3306/dorm	## 服务器环境</span></span><br><span class="line">    username: dorm</span><br><span class="line">    password: dorm</span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br></pre></td></tr></table></figure>
<h3 id="3-java 类文件">3. Java 类文件</h3>
<p>添加 Java 类文件，DormInfo.java。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.songxj.dormitory_system.api;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DormInfo</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/dormInfo&quot;, method = RequestMethod.GET)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">getDormInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from dorm&quot;</span>; <span class="comment">// SQL 查询语句</span></span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.queryForList(sql);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4- 本地测试">4. 本地测试</h3>
<p>本地测试结果如下：<br>
<img src="/images/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%93%8D%E4%BD%9C/%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95.png" alt="本地测试"></p>
<h3 id="5- 打包 -jar- 包">5. 打包 jar 包</h3>
<p><img src="/images/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%93%8D%E4%BD%9C/%E6%89%93jar%E5%8C%85.png" alt="打 jar 包"></p>
<h3 id="6- 本地开发环境连接服务器 docker">6. 本地开发环境连接服务器 Docker</h3>
<p>连接 Docker 宿主机，修改 Docker 服务文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi  /lib/systemd/system/docker.service</span><br></pre></td></tr></table></figure>
<p>将原来的 <code>ExecStart</code> 前面加上 <code>#</code> 号注释掉，然后在下面追加一行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ExecStart=/usr/bin/dockerd    -H tcp://0.0.0.0:2375    -H unix:///var/run/docker.sock</span><br></pre></td></tr></table></figure>
<p>重新加载配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure>
<p>重启 Docker 服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl restart docker.service</span><br></pre></td></tr></table></figure>
<p>开放宿主机安全组中的 2375 端口<br>
<img src="/images/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%93%8D%E4%BD%9C/%E5%BC%80%E6%94%BE%E5%AE%BF%E4%B8%BB%E6%9C%BA%E5%AE%89%E5%85%A8%E7%BB%84%E4%B8%AD%E7%9A%842375%E7%AB%AF%E5%8F%A3.png" alt="开放宿主机安全组中的 2375 端口"></p>
<p>在 IDEA 中安装 Docker 插件。<br>
<img src="/images/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%93%8D%E4%BD%9C/Docker%E6%8F%92%E4%BB%B6.png" alt="Docker 插件"></p>
<p>在 Docker 插件中连接宿主机服务器<br>
<img src="/images/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%93%8D%E4%BD%9C/%E9%85%8D%E7%BD%AEDocker.png" alt="配置 Docker"></p>
<h3 id="7-docker- 在本地创建 -build- 并运行 -run- 镜像">7. Docker 在本地创建（build）并运行（run）镜像</h3>
<ul>
<li>创建镜像</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker build -t dorm_sys:1.0.0 . </span><br></pre></td></tr></table></figure>
<ul>
<li>运行镜像</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d -p 10110:8090 --name dorm_sys dorm_sys:1.0.0</span><br></pre></td></tr></table></figure>
<p><strong>【M1 芯片打包的 jar 包在 Linux 环境无法运行】</strong></p>
<ul>
<li>M1 芯片（arm64）构建 Linux（amd64）可运行的镜像</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker build --platform linux/amd64 -t dorm_sys:1.0.0 . </span><br></pre></td></tr></table></figure>
<h3 id="8- 上传本地镜像到阿里云">8. 上传本地镜像到阿里云</h3>
<p>首先在阿里云免费申请容器镜像服务（<a href="https://cr.console.aliyun.com/repository/">https://cr.console.aliyun.com/repository/</a>）</p>
<ul>
<li>登录阿里云容器镜像服务</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker login --username=songxj01 registry.cn-hangzhou.aliyuncs.com</span><br></pre></td></tr></table></figure>
<ul>
<li>上传镜像</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker tag dorm_sys:1.0.0 registry.cn-hangzhou.aliyuncs.com/songxj01/dorm_sys:1.0.0</span><br><span class="line">docker push registry.cn-hangzhou.aliyuncs.com/songxj01/dorm_sys:1.0.0</span><br></pre></td></tr></table></figure>
<h3 id="9- 在服务器拉取镜像并运行">9. 在服务器拉取镜像并运行</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/songxj01/dorm_sys:1.0.0</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d -p 10110:8090 --name dorm_sys registry.cn-hangzhou.aliyuncs.com/songxj01/dorm_sys:1.0.0</span><br></pre></td></tr></table></figure>
<p>在线测试：<br>
<img src="/images/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%93%8D%E4%BD%9C/%E5%9C%A8%E7%BA%BF%E6%B5%8B%E8%AF%95.png" alt="在线测试"></p>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>互联网应用开发实践</category>
      </categories>
      <tags>
        <tag>互联网应用开发实践</tag>
        <tag>MySQL</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>Python：Matplotlib 绘制 3D 曲面图</title>
    <url>/SongXJ01/2020/Python%EF%BC%9AMatplotlib%20%E7%BB%98%E5%88%B6%203D%E6%9B%B2%E9%9D%A2%E5%9B%BE/</url>
    <content><![CDATA[<p>  Matplotlib 是 Python 的绘图库，它与 NumPy 一起使用，可以基本上实现 MATLAB 的绘图和计算功能，而且效率更高，速度更快。今天主要说一下关于 Matplotlib 绘制三维图像，并实现一个可以多次使用的 <strong> 函数模板</strong>，直接复制调用即可使用。</p>
<span id="more"></span>
<hr>
<h2 id="1- 导入模块包">1. 导入模块包</h2>
<p><code>numpy</code>和 <code>matplotlib</code> 是两个常规的基本模块。因为实现的是三维绘图，所以需要另外一个模块<code>Axes3D</code>，这是是 Matplotlib 里面专门用来画三维图的工具包。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br></pre></td></tr></table></figure>
<h2 id="2- 图像的基本设置">2. 图像的基本设置</h2>
<p>这里包括对图中字体大小、图片长宽比、分辨率的调整，并将其转换为三维格式。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.rcParams.update(&#123;<span class="string">&#x27;font.size&#x27;</span>: <span class="number">32</span>&#125;)  <span class="comment"># 统一设置图中字体大小</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">20</span>, <span class="number">16</span>), dpi=<span class="number">50</span>)  <span class="comment"># 设置图像大小和分辨率</span></span><br><span class="line">ax3 = Axes3D(fig)  <span class="comment"># 将图像转换为 3D 模式</span></span><br></pre></td></tr></table></figure>
<h2 id="3- 处理数据 - 生成坐标矩阵">3. 处理数据，生成坐标矩阵</h2>
<p>这里的 <code>matrix</code> 是一个二维列表，是 Python 的基本数据格式，需要将其先转化为 <code>np.array</code> 的格式，才能进行更多的操作。<br>
另外要根据传入的二维数据 <strong> 创建坐标矩阵</strong>，这一点很重要。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 绘制三维图像</span></span><br><span class="line">matrix = np.array(matrix)</span><br><span class="line"><span class="comment"># 根据二维数据的长宽创建坐标矩阵</span></span><br><span class="line">arrX = np.arange(<span class="number">0</span>, <span class="built_in">len</span>(matrix[<span class="number">0</span>]))</span><br><span class="line">arrY = np.arange(<span class="number">0</span>, <span class="built_in">len</span>(matrix))</span><br><span class="line">X, Y = np.meshgrid(arrX, arrY)  <span class="comment"># 创建坐标矩阵</span></span><br><span class="line"><span class="built_in">print</span>(X.shape, Y.shape, matrix.shape)</span><br><span class="line">ax3.plot_surface(X, Y, matrix, cmap=<span class="string">&#x27;rainbow&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="4- 设置坐标轴刻度 - 稀疏化坐标轴刻度">4. 设置坐标轴刻度，稀疏化坐标轴刻度</h2>
<p>如果我们的数据是 100 X 100 的二维矩阵，如果将所有的刻度都显示在坐标轴上，那么必会变得密密麻麻，所以我们需要将坐标刻度稀疏化，并用自己想要的方式展现出来。<br>
使用 <code>xticks(x, _x)</code> 设置 X 坐标轴刻度（Y 轴同理，但是不能设置 Z 轴）：</p>
<ul>
<li>第一个参数：刻度值列表</li>
<li>第二个参数：需要展示的出来的经过处理的刻度值列表。这里可以对刻度自定义，比如统一扩大 10 倍或缩小十倍（本例中以 0.1 为步长取的数据，所以在刻度上要乘上步长，即缩小为 0.1 倍），同时也可以设置为字符串。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="built_in">len</span>(arrX)))[::<span class="built_in">int</span>(<span class="built_in">len</span>(arrX) / <span class="number">10</span>)]</span><br><span class="line">_x = [<span class="built_in">int</span>(i * stepValue) <span class="keyword">for</span> i <span class="keyword">in</span> x]</span><br><span class="line">plt.xticks(x, _x)</span><br></pre></td></tr></table></figure>
<h2 id="5- 设置图片名称并保存">5. 设置图片名称并保存</h2>
<p>使用 <code>xlabel</code> 设置 X 轴名称（Y 轴同理，但是不能设置 Z 轴）：</p>
<ul>
<li>第一个参数：X 轴名称的字符串</li>
<li>第二个参数（<code>labelpad</code>）：X 轴名称与 X 轴之间的间隔距离</li>
</ul>
<p>使用 <code>savefig</code> 储存图片，这里直接将需要储存的图片格式写在图片名称的字符串中即可。如果在 LaTeX 中 使用推荐 <code>.eps</code> 格式，另外也可以储存为 <code>.jpg</code> 格式和 <code>.png</code> 格式.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.xlabel(keyX, labelpad=<span class="number">30</span>)  <span class="comment"># X 轴名称</span></span><br><span class="line">plt.ylabel(keyY, labelpad=<span class="number">30</span>)  <span class="comment"># Y 轴名称</span></span><br><span class="line">plt.title(<span class="string">&quot;The effect of &#123;&#125; and &#123;&#125; on GJBD&quot;</span>.<span class="built_in">format</span>(keyX, keyY), pad=<span class="number">20</span>)  <span class="comment"># 图形题目</span></span><br><span class="line">plt.savefig(<span class="string">&quot;./change_&#123;&#125;&#123;&#125;.eps&quot;</span>.<span class="built_in">format</span>(keyX, keyY))  <span class="comment"># 保存图片</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="完整代码接口如下">完整代码接口如下</h2>
<p>三个参数如下：</p>
<ul>
<li>matrix : 二维列表格式的数据，形如[[1,2,3], [4,5,6], [7,8,9] ]</li>
<li>keyX : X 轴名称</li>
<li>keyY : Y 轴名称</li>
</ul>
<p>其中 <code>stepValue</code> 是二维数据的采集步长，可以根据实际情况自行修改。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27; 使用二维列表数据绘制三维曲面图</span></span><br><span class="line"><span class="string">--- matrix : 二维数据（普通 Python 二维列表）</span></span><br><span class="line"><span class="string">--- keyX : X 轴名称（string）</span></span><br><span class="line"><span class="string">--- keyY : Y 轴名称（string）</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">figure_3D</span>(<span class="params">matrix, keyX, keyY</span>):</span><br><span class="line">    plt.rcParams.update(&#123;<span class="string">&#x27;font.size&#x27;</span>: <span class="number">32</span>&#125;)  <span class="comment"># 统一设置图中字体大小</span></span><br><span class="line">    fig = plt.figure(figsize=(<span class="number">20</span>, <span class="number">16</span>), dpi=<span class="number">50</span>)  <span class="comment"># 设置图像大小和分辨率</span></span><br><span class="line">    ax3 = Axes3D(fig)  <span class="comment"># 将图像转换为 3D 模式</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制三维图像</span></span><br><span class="line">    matrix = np.array(matrix)</span><br><span class="line">    <span class="comment"># 根据二维数据的长宽创建坐标矩阵</span></span><br><span class="line">    arrX = np.arange(<span class="number">0</span>, <span class="built_in">len</span>(matrix[<span class="number">0</span>]))</span><br><span class="line">    arrY = np.arange(<span class="number">0</span>, <span class="built_in">len</span>(matrix))</span><br><span class="line">    X, Y = np.meshgrid(arrX, arrY)  <span class="comment"># 创建坐标矩阵</span></span><br><span class="line">    <span class="built_in">print</span>(X.shape, Y.shape, matrix.shape)</span><br><span class="line">    ax3.plot_surface(X, Y, matrix, cmap=<span class="string">&#x27;rainbow&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置坐标轴刻度</span></span><br><span class="line">	stepValue = <span class="number">0.1</span>    <span class="comment"># 步长</span></span><br><span class="line">    x = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="built_in">len</span>(arrX)))[::<span class="built_in">int</span>(<span class="built_in">len</span>(arrX) / <span class="number">10</span>)]</span><br><span class="line">    _x = [<span class="built_in">int</span>(i * stepValue) <span class="keyword">for</span> i <span class="keyword">in</span> x]</span><br><span class="line">    plt.xticks(x, _x)</span><br><span class="line">    y = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="built_in">len</span>(arrY)))[::<span class="built_in">int</span>(<span class="built_in">len</span>(arrY) / <span class="number">5</span>)]</span><br><span class="line">    _y = [<span class="built_in">round</span>(i * stepValue, <span class="number">1</span>) <span class="keyword">for</span> i <span class="keyword">in</span> y]</span><br><span class="line">    plt.yticks(y, _y)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置坐标轴名称</span></span><br><span class="line">    plt.xlabel(keyX, labelpad=<span class="number">30</span>)  <span class="comment"># X 轴名称</span></span><br><span class="line">    plt.ylabel(keyY, labelpad=<span class="number">30</span>)  <span class="comment"># Y 轴名称</span></span><br><span class="line">    plt.title(<span class="string">&quot;The effect of &#123;&#125; and &#123;&#125; &quot;</span>.<span class="built_in">format</span>(keyX, keyY), pad=<span class="number">20</span>)  <span class="comment"># 图形题目</span></span><br><span class="line">    plt.savefig(<span class="string">&quot;./change_&#123;&#125;&#123;&#125;.eps&quot;</span>.<span class="built_in">format</span>(keyX, keyY))  <span class="comment"># 保存图片</span></span><br><span class="line">    plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Matplotlib</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 博客技能树</title>
    <url>/SongXJ01/2023/Hexo%E5%8D%9A%E5%AE%A2%E6%8A%80%E8%83%BD%E6%A0%91/</url>
    <content><![CDATA[<p>  Hexo 博客技能树汇总，在本篇文章中将会汇总本网站支持的各种功能，包括动态图表生成和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding="application/x-tex">\LaTeX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.89883em;vertical-align:-0.2155em;"></span><span class="mord text"><span class="mord textrm">L</span><span class="mspace" style="margin-right:-0.36em;"></span><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.68333em;"><span style="top:-2.904999em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord"><span class="mord textrm mtight sizing reset-size6 size3">A</span></span></span></span></span></span><span class="mspace" style="margin-right:-0.15em;"></span><span class="mord text"><span class="mord textrm">T</span><span class="mspace" style="margin-right:-0.1667em;"></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.46782999999999997em;"><span style="top:-2.7845em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord textrm">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2155em;"><span></span></span></span></span><span class="mspace" style="margin-right:-0.125em;"></span><span class="mord textrm">X</span></span></span></span></span></span> 公式表示。</p>
<span id="more"></span>
<h2 id="绘制动态图表"> 绘制动态图表 </h2>
<p> 基于插件 <code>hexo-tag-chart</code> 实现数据图表可视化。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i hexo-tag-chart -S</span><br></pre></td></tr></table></figure>
<div style="width: 90%;margin: 0 auto">
    <canvas id="chart8536" style="height: 300px"></canvas>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script>
<script type="text/javascript">
    var ctx = document.getElementById('chart8536').getContext('2d');
    var options =     {
    type: 'line',
    data: {labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
    datasets: [{
        label: 'My First dataset',
        backgroundColor: 'rgb(255, 99, 132)',
        borderColor: 'rgb(255, 99, 132)',
        data: [0, 10, 5, 2, 20, 30, 45]
        }]
    },
    options: {
        responsive: true,
        title: {
        display: true,
        text: 'Chart.js Line Chart'
        }
    }
};
    new Chart(ctx, options);
</script>
<br/>
<p> 上面这个样例可以通过以下代码来实现：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% chart <span class="number">90</span>% <span class="number">300</span> %&#125;</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">labels</span>: [<span class="string">&#x27;January&#x27;</span>, <span class="string">&#x27;February&#x27;</span>, <span class="string">&#x27;March&#x27;</span>, <span class="string">&#x27;April&#x27;</span>, <span class="string">&#x27;May&#x27;</span>, <span class="string">&#x27;June&#x27;</span>, <span class="string">&#x27;July&#x27;</span>],</span><br><span class="line">    <span class="attr">datasets</span>: [&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;My First dataset&#x27;</span>,</span><br><span class="line">        <span class="attr">backgroundColor</span>: <span class="string">&#x27;rgb(255, 99, 132)&#x27;</span>,</span><br><span class="line">        <span class="attr">borderColor</span>: <span class="string">&#x27;rgb(255, 99, 132)&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: [<span class="number">0</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">45</span>]</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">options</span>: &#123;</span><br><span class="line">        <span class="attr">responsive</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">title</span>: &#123;</span><br><span class="line">        <span class="attr">display</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&#x27;Chart.js Line Chart&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endchart %&#125;</span><br></pre></td></tr></table></figure>
<p><br/><br/></p>
<h2 id="支持 -latex- 数学公式"> 支持 LaTeX 数学公式 </h2>
<p> 本博客平台使用 <code>hexo-renderer-markdown-it-katex</code> 插件实现 Markdown 中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding="application/x-tex">\LaTeX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.89883em;vertical-align:-0.2155em;"></span><span class="mord text"><span class="mord textrm">L</span><span class="mspace" style="margin-right:-0.36em;"></span><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.68333em;"><span style="top:-2.904999em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord"><span class="mord textrm mtight sizing reset-size6 size3">A</span></span></span></span></span></span><span class="mspace" style="margin-right:-0.15em;"></span><span class="mord text"><span class="mord textrm">T</span><span class="mspace" style="margin-right:-0.1667em;"></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.46782999999999997em;"><span style="top:-2.7845em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord textrm">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2155em;"><span></span></span></span></span><span class="mspace" style="margin-right:-0.125em;"></span><span class="mord textrm">X</span></span></span></span></span></span> 公式的渲染。安装方式需要先卸载之前的 Markdown 渲染器，然后替换成新的 Katex 渲染器插件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm un hexo-renderer-marked -S &amp;&amp; npm i hexo-renderer-markdown-it-katex -S</span><br></pre></td></tr></table></figure>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>11</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>12</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>13</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>21</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>22</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>23</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>31</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>32</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>33</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mi mathvariant="normal">.</mi><mo>∗</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>11</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>12</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>13</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>21</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>22</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>23</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>31</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>32</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>33</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>11</mn></msub><msub><mi>b</mi><mn>11</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>12</mn></msub><msub><mi>b</mi><mn>12</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>13</mn></msub><msub><mi>b</mi><mn>13</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>21</mn></msub><msub><mi>b</mi><mn>21</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>22</mn></msub><msub><mi>b</mi><mn>22</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>23</mn></msub><msub><mi>b</mi><mn>23</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>31</mn></msub><msub><mi>b</mi><mn>31</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>32</mn></msub><msub><mi>b</mi><mn>32</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>33</mn></msub><msub><mi>b</mi><mn>33</mn></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left[\begin{array}{lll}
    a_{11} &amp; a_{12} &amp; a_{13} \\
    a_{21} &amp; a_{22} &amp; a_{23} \\
    a_{31} &amp; a_{32} &amp; a_{33}
    \end{array}\right] .*\left[\begin{array}{lll}
    b_{11} &amp; b_{12} &amp; b_{13} \\
    b_{21} &amp; b_{22} &amp; b_{23} \\
    b_{31} &amp; b_{32} &amp; b_{33}
    \end{array}\right]=\left[\begin{array}{lll}
    a_{11} b_{11} &amp; a_{12} b_{12} &amp; a_{13} b_{13} \\
    a_{21} b_{21} &amp; a_{22} b_{22} &amp; a_{23} b_{23} \\
    a_{31} b_{31} &amp; a_{32} b_{32} &amp; a_{33} b_{33}
\end{array}\right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<br/>
<p> 上面这个样例可以通过以下代码来实现：</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\left</span>[<span class="keyword">\begin</span>&#123;array&#125;&#123;lll&#125;</span><br><span class="line">    a<span class="built_in">_</span>&#123;11&#125; <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;12&#125; <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;13&#125; <span class="keyword">\\</span></span><br><span class="line">    a<span class="built_in">_</span>&#123;21&#125; <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;22&#125; <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;23&#125; <span class="keyword">\\</span></span><br><span class="line">    a<span class="built_in">_</span>&#123;31&#125; <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;32&#125; <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;33&#125;</span><br><span class="line">    <span class="keyword">\end</span>&#123;array&#125;<span class="keyword">\right</span>] .*<span class="keyword">\left</span>[<span class="keyword">\begin</span>&#123;array&#125;&#123;lll&#125;</span><br><span class="line">    b<span class="built_in">_</span>&#123;11&#125; <span class="built_in">&amp;</span> b<span class="built_in">_</span>&#123;12&#125; <span class="built_in">&amp;</span> b<span class="built_in">_</span>&#123;13&#125; <span class="keyword">\\</span></span><br><span class="line">    b<span class="built_in">_</span>&#123;21&#125; <span class="built_in">&amp;</span> b<span class="built_in">_</span>&#123;22&#125; <span class="built_in">&amp;</span> b<span class="built_in">_</span>&#123;23&#125; <span class="keyword">\\</span></span><br><span class="line">    b<span class="built_in">_</span>&#123;31&#125; <span class="built_in">&amp;</span> b<span class="built_in">_</span>&#123;32&#125; <span class="built_in">&amp;</span> b<span class="built_in">_</span>&#123;33&#125;</span><br><span class="line">    <span class="keyword">\end</span>&#123;array&#125;<span class="keyword">\right</span>]=<span class="keyword">\left</span>[<span class="keyword">\begin</span>&#123;array&#125;&#123;lll&#125;</span><br><span class="line">    a<span class="built_in">_</span>&#123;11&#125; b<span class="built_in">_</span>&#123;11&#125; <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;12&#125; b<span class="built_in">_</span>&#123;12&#125; <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;13&#125; b<span class="built_in">_</span>&#123;13&#125; <span class="keyword">\\</span></span><br><span class="line">    a<span class="built_in">_</span>&#123;21&#125; b<span class="built_in">_</span>&#123;21&#125; <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;22&#125; b<span class="built_in">_</span>&#123;22&#125; <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;23&#125; b<span class="built_in">_</span>&#123;23&#125; <span class="keyword">\\</span></span><br><span class="line">    a<span class="built_in">_</span>&#123;31&#125; b<span class="built_in">_</span>&#123;31&#125; <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;32&#125; b<span class="built_in">_</span>&#123;32&#125; <span class="built_in">&amp;</span> a<span class="built_in">_</span>&#123;33&#125; b<span class="built_in">_</span>&#123;33&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;array&#125;<span class="keyword">\right</span>]</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure>
<p><br/><br/></p>
<h2 id="支持 -mermaid- 流程图"> 支持 Mermaid 流程图 </h2>
<p>Mermaid 流程图是一款基于 JavaScript 的强大图表和绘图工具，它以其独特的魅力在数据可视化领域脱颖而出。这款工具允许用户通过受 Markdown 启发的简洁文本定义来动态创建和修改图表，为用户提供了极大的便利性和灵活性。</p>
<pre class="mermaid">classDiagram
Class01 <|-- AveryLongClass : Cool
Class03 *-- Class04
Class05 o-- Class06
Class07 .. Class08
Class09 --> C2 : Where am i?
Class09 --* C3
Class09 --|> Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
Class08 <--> C2: Cool label</pre>
<br/>
<p> 上面这个样例可以通过以下代码来实现：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">classDiagram</span><br><span class="line">Class01 &lt;|-- AveryLongClass : Cool</span><br><span class="line">Class03 *-- Class04</span><br><span class="line">Class05 o-- Class06</span><br><span class="line">Class07 .. Class08</span><br><span class="line">Class09 --&gt; C2 : Where am i?</span><br><span class="line">Class09 --* C3</span><br><span class="line">Class09 --|&gt; Class07</span><br><span class="line">Class07 : equals()</span><br><span class="line">Class07 : Object[] elementData</span><br><span class="line">Class01 : size()</span><br><span class="line">Class01 : int chimp</span><br><span class="line">Class01 : int gorilla</span><br><span class="line">Class08 &lt;--&gt; C2: Cool label</span><br></pre></td></tr></table></figure>
<p> 更多的 Mermaid 使用方式可以参考：<a href="https://mermaid.js.org/intro/">https://mermaid.js.org/intro/</a></p>
<p><br/><br/></p>
<h2 id="置顶或隐藏文章"> 置顶或隐藏文章 </h2>
<p> 本博客网站中采用 <code>hexo-generator-index-custom</code> 插件进行博客文章的置顶和隐藏操作。</p>
<p><strong> 置顶文章 </strong>，在文章标题栏增加 <code>top</code> 关键字，其值可以是 <code>true</code> 或数字，数字越大，文章排在越前面：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">top: 100</span><br></pre></td></tr></table></figure>
<p><strong> 隐藏文章 </strong>，在文章标题栏增加 <code>hide</code> 关键字：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hide: true</span><br></pre></td></tr></table></figure>
<p><br/><br/></p>
<h2 id="优化提升访问效率"> 优化提升访问效率 </h2>
<p> 本博客网站中采用 <code>hexo-neat</code> 插件优化提升访问效率。</p>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>前端技术栈</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Hexo</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>STL 库中可能存在的内存溢出与脏数据问题</title>
    <url>/SongXJ01/2023/STL%E5%BA%93%E4%B8%AD%E5%8F%AF%E8%83%BD%E5%AD%98%E5%9C%A8%E7%9A%84%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E4%B8%8E%E8%84%8F%E6%95%B0%E6%8D%AE%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>  STL 库中的 <code>vector</code> 是我们使用最频繁的 STD 容器之一。它具有广泛的应用，并且在性能方面表现出色。然而，其存在一种潜在问题，即 <strong> 溢出</strong>。由于 <code>vector</code> 在使用下标访问元素时不会检查索引是否越界，因此很可能导致溢出错误的出现。这种错误被严格定义为一种内存的<code>&quot;dirty read / dirty write&quot;</code>。</p>
<span id="more"></span>
<p><strong>下面的代码就是模拟这样的一种情况：</strong><br>
  首先在内存中声明一个长度为 16 的 <code>vector</code> 并命名为 <code>tmp</code>，用来在内存中写入藏数据。然后紧跟着声明一个长度为 16 的全 0 <code>vector</code> 。这里构建一个名为 <code>dirty_write</code> 的函数，其中向随机产生的索引中写入值，因为这里产生的索引不一定在 16 以内，所以会随机写入脏数据。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dirty_write</span><span class="params">(std::vector&lt;<span class="type">double</span>&gt; &amp;args)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> r = <span class="built_in">rand</span>() % <span class="number">40</span> - <span class="number">10</span>;</span><br><span class="line">    args[r] = <span class="built_in">rand</span>() % <span class="number">101</span> - <span class="number">50</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">double</span>&gt; <span class="title">tmp</span><span class="params">(<span class="number">16</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">double</span>&gt; <span class="title">zero_vec</span><span class="params">(<span class="number">16</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Before: &quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; zero_vec.<span class="built_in">size</span>(); ++i) &#123;</span><br><span class="line">        cout &lt;&lt; zero_vec[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">dirty_write</span>(tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\nAfter: &quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; zero_vec.<span class="built_in">size</span>(); ++i) &#123;</span><br><span class="line">        cout &lt;&lt; zero_vec[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  上面的代码中的 <code>zero_vec</code> 初始化一个长度为 16 的全 0 数组，但实际运行结果是是这样的:<br>
<img src="/images/STL%E5%BA%93%E4%B8%AD%E5%8F%AF%E8%83%BD%E5%AD%98%E5%9C%A8%E7%9A%84%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E4%B8%8E%E8%84%8F%E6%95%B0%E6%8D%AE%E9%97%AE%E9%A2%98/%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.png" alt="运行结果"></p>
<p>  经过查询发现 STL 中有在运行中检查 <code>index &quot;__n&quot;</code> 是否在范围内的代码，并通过 <code>_LIBCPP_DEBUG</code> 控制，默认时 <code>_LIBCPP_DEBUG</code> 被设置为 0 检查 assert 不开启，但是可以在编译时手动开启这个技能，即在 g++ 编译时加上如下参数：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">g++ -D_LIBCPP_DEBUG=1 ...</span><br></pre></td></tr></table></figure>
<p>参考：<a href="https://mp.weixin.qq.com/s?__biz=MzkxMzQ5NTI2Mg==&amp;mid=2247483878&amp;idx=1&amp;sn=d155daf0a7125c05c44c639711c254a6&amp;chksm=c17d8457f60a0d41e248ebfd6342c89476eaa710178889458d2442ec74561de1ac13b0f0614a&amp;scene=132&amp;exptype=timeline_recommend_article_extendread_samebiz#wechat_redirect">才哥第十四讲 std:set (二）</a></p>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>内存溢出</tag>
        <tag>STL库</tag>
      </tags>
  </entry>
  <entry>
    <title>STL 库中 SET 的原理</title>
    <url>/SongXJ01/2023/STL%E5%BA%93%E4%B8%ADSET%E7%9A%84%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<p>  <code>std::set</code> 是 C++ 标准库中的容器之一，它基于红黑树实现。<code>std::set</code> 利用红黑树的特性来实现有序的插入、查找和删除操作，并且具有较好的平均和最坏情况下的时间复杂度。<br>
当向 <code>std::set</code> 插入元素时，它会按照特定的比较函数（<code>bool less&lt;T&gt;::operator() const(const T &amp;lhs, const T &amp; rhs)</code>）将新元素插入到红黑树的适当位置，以保持树的有序性质。插入操作的平均时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 是 <code>std::set</code> 中元素的数量。查找操作（<code>find()</code>）使用红黑树的性质，通过比较函数在树中进行二分查找，查找操作的平均时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。</p>
<span id="more"></span>
<p>  但是当我们把 struct 放入 <code>std::set</code> 会有什么后果呢？因为 <code>std::set</code> 需要在插入到时候排序，所以需要重载  struct 的比较运算符，这个时候就出现问题了，首先我们定义一个结构体 <code>Person</code> ：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="built_in">Person</span>(<span class="type">int</span> _ID, string _name, <span class="type">int</span> _age) : <span class="built_in">ID</span>(_ID), <span class="built_in">age</span>(_age), <span class="built_in">name</span>(_name) &#123;&#125;</span><br><span class="line">    <span class="type">int</span> ID;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    string name;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>  当我们直接插入到 <code>std::set&lt;Person&gt;</code> 中时，会报 complier error 的错误，因此简单补写一个比较运算符重载，如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> Person &amp;lhs, <span class="type">const</span> Person &amp;rhs) &#123;</span><br><span class="line">    <span class="keyword">return</span> lhs.age &lt; rhs.age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  OK，编译起来没有问题，但是我们运行测试一下下面的 <code>find</code> 操作就会发现问题</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="built_in">Person</span>(<span class="type">int</span> _ID, string _name, <span class="type">int</span> _age) : <span class="built_in">ID</span>(_ID), <span class="built_in">age</span>(_age), <span class="built_in">name</span>(_name) &#123;&#125;</span><br><span class="line">    <span class="type">int</span> ID;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    string name;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> Person &amp;lhs, <span class="type">const</span> Person &amp;rhs) &#123;</span><br><span class="line">    <span class="keyword">return</span> lhs.age &lt; rhs.age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    set&lt;Person&gt; person;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; ++i) &#123;</span><br><span class="line">        <span class="function">Person <span class="title">p_tmp</span><span class="params">(i, <span class="string">&quot;sxj&quot;</span>, <span class="number">10</span>)</span></span>;</span><br><span class="line">        person.<span class="built_in">insert</span>(p_tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">Person <span class="title">p</span><span class="params">(<span class="number">2000</span>, <span class="string">&quot;sxj&quot;</span>, <span class="number">10</span>)</span></span>;</span><br><span class="line">    <span class="keyword">auto</span> it = person.<span class="built_in">find</span>(p);</span><br><span class="line">    <span class="keyword">if</span> (it != person.<span class="built_in">end</span>())</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Find Person --- ID: &quot;</span> &lt;&lt; it-&gt;ID &lt;&lt; <span class="string">&quot;  name: &quot;</span> &lt;&lt; it-&gt;name &lt;&lt; <span class="string">&quot;  age: &quot;</span> &lt;&lt; it-&gt;age;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Can&#x27;t find&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/SongXJ01/images/STL%E5%BA%93%E4%B8%ADSET%E7%9A%84%E5%8E%9F%E7%90%86/%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.png" alt="运行结果"></p>
<p>  明明不在 <code>set</code> 中的 <strong>ID-2000</strong> 的 <code>Person</code> 也可以被找到。造成这个结果的原因是我们所提供的 <code>operator&lt;() </code>，当<code>Person</code> <code>p1</code>、<code>p2</code>，在 <code>p1&lt;p2</code> 与 <code>p2&lt;p2</code> 都不成立时，<code>find</code> 就会判断 <code>p1</code> 和 <code>p2</code> 是同一个 <code>Person</code> ，因此会造成这样的错误结果。</p>
<p>  <strong>解决方案 </strong> 就是补充完整我们的比较运算符重载，<strong>完整代码如下</strong>：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="built_in">Person</span>(<span class="type">int</span> _ID, string _name, <span class="type">int</span> _age) : <span class="built_in">ID</span>(_ID), <span class="built_in">age</span>(_age), <span class="built_in">name</span>(_name) &#123;&#125;</span><br><span class="line">    <span class="type">int</span> ID;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    string name;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> Person &amp;lhs, <span class="type">const</span> Person &amp;rhs) &#123;</span><br><span class="line">    <span class="keyword">if</span> (lhs.ID &lt; rhs.ID) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (lhs.ID &gt; rhs.ID) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (lhs.name &lt; rhs.name) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (lhs.name &gt; rhs.name) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> lhs.age &lt; rhs.age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    set&lt;Person&gt; person;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; ++i) &#123;</span><br><span class="line">        <span class="function">Person <span class="title">p_tmp</span><span class="params">(i, <span class="string">&quot;sxj&quot;</span>, <span class="number">10</span>)</span></span>;</span><br><span class="line">        person.<span class="built_in">insert</span>(p_tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">Person <span class="title">p</span><span class="params">(<span class="number">2000</span>, <span class="string">&quot;sxj&quot;</span>, <span class="number">10</span>)</span></span>;</span><br><span class="line">    <span class="keyword">auto</span> it = person.<span class="built_in">find</span>(p);</span><br><span class="line">    <span class="keyword">if</span> (it != person.<span class="built_in">end</span>())</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Find Person --- ID: &quot;</span> &lt;&lt; it-&gt;ID &lt;&lt; <span class="string">&quot;  name: &quot;</span> &lt;&lt; it-&gt;name &lt;&lt; <span class="string">&quot;  age: &quot;</span> &lt;&lt; it-&gt;age;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Can&#x27;t find&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>参考：<a href="https://mp.weixin.qq.com/s?__biz=MzkxMzQ5NTI2Mg==&amp;mid=2247483878&amp;idx=1&amp;sn=d155daf0a7125c05c44c639711c254a6&amp;chksm=c17d8457f60a0d41e248ebfd6342c89476eaa710178889458d2442ec74561de1ac13b0f0614a&amp;scene=132&amp;exptype=timeline_recommend_article_extendread_samebiz#wechat_redirect">才哥第十四讲 std:set (二）</a></p>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>STL库</tag>
        <tag>集合</tag>
      </tags>
  </entry>
  <entry>
    <title>vLLM 源码学习</title>
    <url>/SongXJ01/2024/vLLM%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>  本文中将学习一个大模型推理加速的工具 VLLM。vLLM 是伯克利大学 LMSYS 组织开源的大语言模型高速推理框架，旨在极大地提升实时场景下的语言模型服务的吞吐与内存使用效率。</p>
<span id="more"></span>
<h2 id="算法基本原理"> 算法基本原理 </h2>
<ul>
<li> 论文：<a href="https://arxiv.org/pdf/2309.06180.pdf">Efficient Memory Management for Large Language Model Serving with PagedAttention</a></li>
<li> 官网：<a href="https://blog.vllm.ai/2023/06/20/vllm.html">vLLM: Easy, Fast, and Cheap LLM Serving with PagedAttention</a></li>
</ul>
<h3 id="paged-attention">Paged Attention</h3>
<ul>
<li><strong> 类似操作系统中的虚拟内存和分页 </strong></li>
</ul>
<p>PagedAttention 是 vLLM 的一个关键技术特性，它通过使用虚拟内存和分页技术来解决大型语言模型服务中的内存瓶颈。传统的注意力机制需要在 GPU 内存中保存所有输入令牌的键值对，这在自回归解码时生成新令牌。PagedAttention 通过将键值对缓存分割成小块存储，提高了内存使用效率，几乎达到了最优化，只浪费少于 4% 的内存。<br>
<img src="/SongXJ01/images/vLLM%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/vLLM%E4%B8%AD%E7%9A%84BlockTable.png" alt="vLLM 中的 Block Table"></p>
<p><img src="/SongXJ01/images/vLLM%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/KV_cache.png" alt="KV cache"></p>
<h3 id="parallel-sampling">Parallel sampling</h3>
<p> 由于两个输出共享相同的提示，vllm 只在提示阶段为提示状态的一个副本保留空间；两个序列的提示的逻辑块被映射到相同的物理块。总结而言，vLLM 能够共享用于跨多个输出样本存储提示的 KV 缓存的大部分空间。通过跨多个样本共享物理块，特别是对于长输入提示，可以大大减少内存使用。<br>
<img src="/SongXJ01/images/vLLM%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/%E5%B9%B6%E8%A1%8C%E9%87%87%E6%A0%B7.png" alt="并行采样"></p>
<h3 id="beam-search">Beam search</h3>
<ul>
<li><strong> 通过使用树状搜索，避免完全局遍历 </strong>。<br>
<img src="/SongXJ01/images/vLLM%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%A0%91%E7%8A%B6%E6%90%9C%E7%B4%A2.png" alt="树状搜索"></li>
</ul>
<h3 id="shared-prefix">Shared prefix</h3>
<ul>
<li><strong> 共享前缀 </strong>：对于许多用户提示语具有相同前缀的情况，在 vLLM 中可以通过提供一组预定义共享前缀保留一组物理块来方便地实现。<br>
<img src="/SongXJ01/images/vLLM%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/%E5%85%B1%E4%BA%AB%E5%89%8D%E7%BC%80.png" alt="共享前缀"></li>
</ul>
<h3 id="continuous-batching">Continuous batching</h3>
<p> 迭代调度处理，当部分序列处理完成，插入新序列。<br>
<img src="/SongXJ01/images/vLLM%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/Continuous_batching.png" alt="Continuous batching"></p>
<h3 id="none"></h3>
<h2 id="在 -vllm- 中增加自己的新模型"> 在 vllm 中增加自己的新模型 </h2>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/680636375"> 如何让 vLLM 适配一个新模型 </a></li>
</ul>
<h3 id="步骤"> 步骤 </h3>
<ol>
<li> 从 vLLM 的代码仓库中把源码下载下来 </li>
<li> 对模型中各模块的 <strong>forward</strong> 代码进行一定的修改 </li>
<li> 实现张量并行及量化方法（可选步骤）</li>
<li> 实现加载模型的方法 </li>
<li> 将新模型注册进 executor 的 init 模块 </li>
</ol>
<p> 可参考：<a href="https://github.com/vllm-project/vllm/pull/2539/files">Support Orion model by dachengai · Pull Request #2539 · vllm-project/vllm</a></p>
<h3 id="核心修改点"> 核心修改点 </h3>
<ol>
<li><strong>Attention 机制的改写 </strong>：attention 机制中的 QKV 矩阵及输出 O 由原来的 nn.Linear 替换成了 vLLM 自带的 QKVParallelLinear 和 RowParallel 模块，方便之后并行处理张量。（此处注意 Attetion Head 的数量需要被 GPU 数量整整除）</li>
<li><strong>Forward 函数的改写 </strong>：因为现在使用的 self.attn 是 PageAttention，所以之前传入的参数通通可以用 kv_cache 来替代，然后 PageAttention 底层来处理相应的分片。</li>
<li><strong> 增加 load_weights 方法 </strong>：这里主要是使用一层循环，从 HuggingFace 的模型文件中加载权重，并将它们分配给模型中对应的层。</li>
</ol>
<h2 id="源码分析"> 源码分析 </h2>
<p><a href="https://zhuanlan.zhihu.com/p/643336063">LLM 推理框架 2：vLLM 源码学习 </a></p>
<h3 id="加载模型"> 加载模型 </h3>
<ul>
<li>
<p>llm 类加载模型时首先根据参数生成 llm_engine 类 <br>
<img src="/SongXJ01/images/vLLM%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/%E7%94%9F%E6%88%90llm_engine%E7%B1%BB.png" alt="生成 llm_engine 类"></p>
</li>
<li>
<p>llm_engine 类在创建时会加载 <code>tokenizer</code>，创建 <code>worker</code>（负责加载模型，执行推理）和 <code>scheduler</code>（负责并行计算），同时预分配内存。</p>
</li>
</ul>
<p><img src="/SongXJ01/images/vLLM%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/llm_engine%E7%B1%BB%E4%B8%AD%E7%9A%84%E6%A0%B8%E5%BF%83%E6%AD%A5%E9%AA%A4.png" alt="llm_engine 类中的核心步骤"></p>
<h3 id="推理生成"> 推理生成 </h3>
<ul>
<li> 推理时，llm 类的 <code>generate()</code> 会调用 <code>_run_engine()</code> 函数，同时设置 sampling 策略。</li>
</ul>
<p><img src="/SongXJ01/images/vLLM%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/run_engine.png" alt="run_engine()"></p>
<ul>
<li>llm_engine 类中的 <code>step()</code> 控制单步迭代 </li>
</ul>
<ol>
<li> 安排下一次要执行的序列，其中的 SG 代表同一个提示生成的一组序列；</li>
<li> 调用 worker 执行模型 </li>
<li> 根据采样参数更新模型输出 </li>
</ol>
<p><img src="/SongXJ01/images/vLLM%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/step.png" alt="step()"></p>
<p><img src="/SongXJ01/images/vLLM%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/step%E7%9A%84%E4%BB%A3%E7%A0%81.png" alt="step() 的代码"></p>
<p><code>step()</code> 中的 <code>_process_model_outputs()</code> 进行后处理 </p>
<p><img src="/SongXJ01/images/vLLM%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/process_model_outputs.png" alt="_process_model_outputs"></p>
<h3 id="架构设计"> 架构设计 </h3>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/681156634">vllm 架构设计 Top-down</a></li>
</ul>
<h4 id="llmengine">LLMEngine</h4>
<p>LLMEngine 是一个处理请求并生成文本的大型语言模型引擎，通过精心设计的内存和调度策略，可以在分布式环境中高效生成文本。LLMEngine 包括：分词器（<strong>tokenizer</strong>）、一个可能分布在多个 GPU 上的语言模型，分配给中间状态的 GPU 内存空间（<strong>KV cache</strong>）。这个类通过迭代级调度和高效的内存管理来最大化服务吞吐量。<br>
LLM 类将此类封装用于离线批量推理，而 AsyncLLMEngine 类封装此类用于在线服务。请注意，配置参数是从 EngineArgs 类派生的。要查看参数的完整列表，请参见 EngineArgs 类。<br>
参数包括：</p>
<ul>
<li>model_config：与 LLM 模型相关的配置。</li>
<li>cache_config：与 KV 缓存内存管理相关的配置。</li>
<li>parallel_config：与分布式执行相关的配置。</li>
<li>scheduler_config：与请求调度器相关的配置。</li>
<li>device_config：与设备相关的配置。</li>
<li>placement_group：用于分布式执行的 Ray 放置组，分布式执行时必需。</li>
<li>log_stats：是否记录统计数据。</li>
</ul>
<h4 id="llm">LLM</h4>
<p> 是对 LLMEngine 类的封装，用于处理离线的批量推理。</p>
<h4 id="worker">Worker</h4>
<p> 在 GPU 上执行模型（或其中部分）的类。<br>
每个 Worker 与单个 GPU 相关联。Worker 负责维护 **KV cache ** 并在 GPU 上执行模型。在分布式推理的情况下，每个 Worker 被分配一个模型的分区。</p>
<p><img src="/SongXJ01/images/vLLM%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%8E%A8%E7%90%86%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%BF%87%E7%A8%8B.png" alt="推理的基本过程"></p>
<p><img src="/SongXJ01/images/vLLM%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%9E%B6%E6%9E%84_1.png" alt=""></p>
<p><img src="/SongXJ01/images/vLLM%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/%E6%9E%B6%E6%9E%84_2.png" alt=""></p>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>LLM</category>
      </categories>
      <tags>
        <tag>LLM</tag>
        <tag>推理加速</tag>
        <tag>vLLM</tag>
      </tags>
  </entry>
  <entry>
    <title>前端技术栈：Vue 双向绑定</title>
    <url>/SongXJ01/2021/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88%EF%BC%9AVue-%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A/</url>
    <content><![CDATA[<h2 id="mvvm 模式">MVVM 模式</h2>
<p>  说到 Vue 的双向绑定首先联系到的就是 MVVM（Model-View-ViewModel）模式了，如下图所示，当视图发生改变的时候传递给 VM，再让数据得到更新，当数据发生改变的时候传给 VM，使得视图发生改变。</p>
<span id="more"></span>
<p>MVVM 模式是通过以下三个核心组件组成：</p>
<ul>
<li><strong>M：</strong> Model - 包含了业务和验证逻辑的数据模型；</li>
<li><strong>V：</strong> View - 定义屏幕中 View 的结构，布局和外观；</li>
<li><strong>VM：</strong> ViewModel - 扮演“View”和“Model”之间的使者，帮忙处理 View 的全部业务逻辑。</li>
</ul>
<p><img src="/images/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88_Vue%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A/vue%E6%95%B0%E6%8D%AE%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A%E5%8E%9F%E7%90%86.png" alt="vue 数据双向绑定原理"></p>
<hr>
<h2 id="vue- 数据双向绑定原理">Vue 数据双向绑定原理</h2>
<p>  Vue 数据双向绑定是通过 <strong> 数据劫持结合发布者 - 订阅者 </strong> 模式的方式来实现的，那么 Vue 是如果进行数据劫持的。我们可以先来看一下通过控制台输出一个定义在 Vue 初始化数据上的对象是个什么东西。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">obj</span>: &#123;</span><br><span class="line">            <span class="attr">a</span>: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">created</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">obj</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>输出：<br>
<img src="/images/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88_Vue%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A/%E8%BE%93%E5%87%BA.png" alt="输出"></p>
<p>可以看到属性 <code>a</code> 有两个相对应的 <code>get</code> 和<code>set</code>方法，为什么会多出这两个方法呢？因为 Vue 是通过 <code>Object.defineProperty()</code> 来实现数据劫持的。</p>
<h3 id="通过一个 - 加 -xxx- 的例子来理解">通过一个“加《XXX》”的例子来理解</h3>
<p>  在平常，很容易就可以打印出一个对象的属性数据：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">Book</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;vue 权威指南 &#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Book</span>.<span class="property">name</span>);  <span class="comment">// vue 权威指南</span></span><br></pre></td></tr></table></figure>
<p>  如果想要在执行 <code>console.log(book.name)</code> 的同时，直接给书名加个书名号，那要怎么处理呢？或者说要通过什么监听对象 <code>Book</code> 的属性值。这时候 <code>Object.defineProperty()</code> 就派上用场了，代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">Book</span> = &#123;&#125;</span><br><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(<span class="title class_">Book</span>, <span class="string">&#x27;name&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">set</span>: <span class="keyword">function</span> (<span class="params">value</span>) &#123;</span><br><span class="line">    name = value;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27; 书名叫做 &#x27;</span> + value);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">get</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;《&#x27;</span> + name + <span class="string">&#x27;》&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="title class_">Book</span>.<span class="property">name</span> = <span class="string">&#x27;vue 权威指南 &#x27;</span>;  <span class="comment">// 书名叫做 vue 权威指南</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Book</span>.<span class="property">name</span>);  <span class="comment">// 《vue 权威指南》</span></span><br></pre></td></tr></table></figure>
<p>  通过 <code>Object.defineProperty()</code> 设置了对象 <code>Book</code> 的 <code>name</code> 属性，对其 <code>get</code> 和 <code>set</code> 进行重写操作，顾名思义，<code>get</code> 就是在读取 <code>name</code> 属性这个值触发的函数，<code>set</code> 就是在设置 <code>name</code> 属性这个值触发的函数，所以当执行 <code>Book.name = 'vue 权威指南'</code> 这个语句时，控制台会打印出 <code>&quot; 书名叫做 vue 权威指南 &quot;</code>，紧接着，当读取这个属性时，就会输出 <code>&quot;《vue 权威指南》&quot;</code>，因为我们在 <code>get</code> 函数里面对该值做了加工。</p>
<h3 id="思路分析">思路分析</h3>
<p>  实现 <strong>MVVM</strong>主要包含两个方面，数据变化更新视图，视图变化更新数据：<br>
<img src="/images/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88_Vue%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A/MVVM.png" alt="MVVM"></p>
<p>  关键点在于 data 如何更新 view，因为 view 更新 data 其实可以通过事件监听即可，比如 input 标签监听 input 事件就可以实现了。</p>
<p>  数据更新视图的重点是如何知道数据变了，只要知道数据变了，那么接下去的事都好处理。如何知道数据变了，其实上文我们已经给出答案了，就是通过 <code>Object.defineProperty()</code> 对属性设置一个 set 函数，当数据改变了就会来触发这个函数，所以我们只要将一些需要更新的方法放在这里面就可以实现 data 更新 view 了。<br>
<img src="/images/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88_Vue%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A/defineProperty.png" alt="defineProperty"></p>
<hr>
<h2 id="实现双向绑定">实现双向绑定</h2>
<p>  首先要对数据进行劫持监听，所以我们需要设置一个 <strong> 监听器 Observer</strong>，用来监听所有属性。如果属性发生变化了，就需要告诉 <strong> 订阅者 Watcher</strong> 看是否需要更新。因为订阅者是有很多个，所以我们需要有一个 <strong> 消息订阅器 Dep</strong> 来专门收集这些订阅者，然后在监听器 Observer 和 订阅者 Watcher 之间进行统一管理的。接着，还需要有一个 <strong> 指令解析器 Compile</strong>，对每个节点元素进行扫描和解析，将相关指令对应初始化成一个订阅者 Watcher，并替换模板数据或者绑定相应的函数，此时当订阅者 Watcher 接收到相应属性的变化，就会执行对应的更新函数，从而更新视图。</p>
<p><strong>双向绑定步骤：</strong></p>
<ol>
<li>
<p>实现一个 <strong> 监听器 Observer</strong>，用来劫持并监听所有属性，如果有变动的，就通知订阅者。</p>
</li>
<li>
<p>实现一个 <strong> 订阅者 Watcher</strong>，可以收到属性的变化通知并执行相应的函数，从而更新视图。</p>
</li>
<li>
<p>实现一个 <strong> 解析器 Compile</strong>，可以扫描和解析每个节点的相关指令，并根据初始化模板数据以及初始化相应的订阅器。</p>
</li>
</ol>
<p><strong>流程图如下：</strong><br>
<img src="/images/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88_Vue%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A/%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="双向绑定流程图"></p>
<hr>
<h2 id="实现最简单的双向绑定">实现最简单的双向绑定</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;inp&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> obj  = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> demo = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#demo&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> inp = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#inp&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(obj, <span class="string">&#x27;name&#x27;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">get</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> val;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">set</span>: <span class="keyword">function</span> (<span class="params">newVal</span>) &#123;<span class="comment">// 当该属性被赋值的时候触发</span></span></span><br><span class="line"><span class="language-javascript">                inp.<span class="property">value</span> = newVal;</span></span><br><span class="line"><span class="language-javascript">                demo.<span class="property">innerHTML</span> = newVal;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        inp.<span class="title function_">addEventListener</span>(<span class="string">&#x27;input&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 给 obj 的 name 属性赋值，进而触发该属性的 set 方法</span></span></span><br><span class="line"><span class="language-javascript">            obj.<span class="property">name</span> = e.<span class="property">target</span>.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">        obj.<span class="property">name</span> = <span class="string">&#x27;fei&#x27;</span>;<span class="comment">// 在给 obj 设置 name 属性的时候，触发了 set 这个方法</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="vue- 代码实现">Vue 代码实现</h2>
<h3 id="1- 实现 -observer">1. 实现 observer</h3>
<p>  主要是给每个 vue 的属性用 Object.defineProperty()，代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">defineReactive</span> (obj, key, val) &#123;</span><br><span class="line">    <span class="keyword">var</span> dep = <span class="keyword">new</span> <span class="title class_">Dep</span>();</span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(obj, key, &#123;</span><br><span class="line">             <span class="attr">get</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="comment">// 添加订阅者 watcher 到主题对象 Dep</span></span><br><span class="line">                    <span class="keyword">if</span>(<span class="title class_">Dep</span>.<span class="property">target</span>) &#123;</span><br><span class="line">                        <span class="comment">// JS 的浏览器单线程特性，保证这个全局变量在同一时间内，只会有同一个监听器使用</span></span><br><span class="line">                        dep.<span class="title function_">addSub</span>(<span class="title class_">Dep</span>.<span class="property">target</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> val;</span><br><span class="line">             &#125;,</span><br><span class="line">             <span class="attr">set</span>: <span class="keyword">function</span> (<span class="params">newVal</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(newVal === val) <span class="keyword">return</span>;</span><br><span class="line">                    val = newVal;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(val);</span><br><span class="line">                    <span class="comment">// 作为发布者发出通知</span></span><br><span class="line">                    dep.<span class="title function_">notify</span>();<span class="comment">// 通知后 dep 会循环调用各自的 update 方法更新视图</span></span><br><span class="line">             &#125;</span><br><span class="line">       &#125;)</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">observe</span>(<span class="params">obj, vm</span>) &#123;</span><br><span class="line">            <span class="title class_">Object</span>.<span class="title function_">keys</span>(obj).<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">key</span>) &#123;</span><br><span class="line">                <span class="title function_">defineReactive</span>(vm, key, obj[key]);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<h3 id="2- 实现 -compile">2. 实现 compile</h3>
<p>  compile 的目的就是解析各种指令称真正的 html。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Compile</span>(<span class="params">node, vm</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(node) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$frag</span> = <span class="variable language_">this</span>.<span class="title function_">nodeToFragment</span>(node, vm);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$frag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Compile</span>.<span class="property"><span class="keyword">prototype</span></span> = &#123;</span><br><span class="line">    <span class="attr">nodeToFragment</span>: <span class="keyword">function</span>(<span class="params">node, vm</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="keyword">var</span> frag = <span class="variable language_">document</span>.<span class="title function_">createDocumentFragment</span>();</span><br><span class="line">        <span class="keyword">var</span> child;</span><br><span class="line">        <span class="keyword">while</span>(child = node.<span class="property">firstChild</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>([child])</span><br><span class="line">            self.<span class="title function_">compileElement</span>(child, vm);</span><br><span class="line">            frag.<span class="title function_">append</span>(child); <span class="comment">// 将所有子节点添加到 fragment 中</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> frag;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">compileElement</span>: <span class="keyword">function</span>(<span class="params">node, vm</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> reg = <span class="regexp">/\&#123;\&#123;(.*)\&#125;\&#125;/</span>;</span><br><span class="line">        <span class="comment">// 节点类型为元素(input 元素这里)</span></span><br><span class="line">        <span class="keyword">if</span>(node.<span class="property">nodeType</span> === <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> attr = node.<span class="property">attributes</span>;</span><br><span class="line">            <span class="comment">// 解析属性</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; attr.<span class="property">length</span>; i++ ) &#123;</span><br><span class="line">                <span class="keyword">if</span>(attr[i].<span class="property">nodeName</span> == <span class="string">&#x27;v-model&#x27;</span>) &#123;<span class="comment">// 遍历属性节点找到 v-model 的属性</span></span><br><span class="line">                    <span class="keyword">var</span> name = attr[i].<span class="property">nodeValue</span>; <span class="comment">// 获取 v-model 绑定的属性名</span></span><br><span class="line">                    node.<span class="title function_">addEventListener</span>(<span class="string">&#x27;input&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">                        <span class="comment">// 给相应的 data 属性赋值，进而触发该属性的 set 方法</span></span><br><span class="line">                        vm[name]= e.<span class="property">target</span>.<span class="property">value</span>;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">Watcher</span>(vm, node, name, <span class="string">&#x27;value&#x27;</span>);<span class="comment">// 创建新的 watcher，会触发函数向对应属性的 dep 数组中添加订阅者，</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 节点类型为 text</span></span><br><span class="line">        <span class="keyword">if</span>(node.<span class="property">nodeType</span> === <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(reg.<span class="title function_">test</span>(node.<span class="property">nodeValue</span>)) &#123;</span><br><span class="line">                <span class="keyword">var</span> name = <span class="title class_">RegExp</span>.<span class="property">$1</span>; <span class="comment">// 获取匹配到的字符串</span></span><br><span class="line">                name = name.<span class="title function_">trim</span>();</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Watcher</span>(vm, node, name, <span class="string">&#x27;nodeValue&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3- 实现 -watcher">3. 实现 watcher</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Watcher</span>(<span class="params">vm, node, name, type</span>) &#123;</span><br><span class="line">    <span class="title class_">Dep</span>.<span class="property">target</span> = <span class="variable language_">this</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">node</span> = node;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">vm</span> = vm;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">type</span> = type;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">update</span>();</span><br><span class="line">    <span class="title class_">Dep</span>.<span class="property">target</span> = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Watcher</span>.<span class="property"><span class="keyword">prototype</span></span> = &#123;</span><br><span class="line">    <span class="attr">update</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">get</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">node</span>[<span class="variable language_">this</span>.<span class="property">type</span>] = <span class="variable language_">this</span>.<span class="property">value</span>; <span class="comment">// 订阅者执行相应操作</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 获取 data 的属性值</span></span><br><span class="line">    <span class="attr">get</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">value</span> = <span class="variable language_">this</span>.<span class="property">vm</span>[<span class="variable language_">this</span>.<span class="property">name</span>]; <span class="comment">// 触发相应属性的 get</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4- 实现 dep 来为每个属性添加订阅者">4. 实现 Dep 来为每个属性添加订阅者</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Dep</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">subs</span> = [];</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Dep</span>.<span class="property"><span class="keyword">prototype</span></span> = &#123;</span><br><span class="line">    <span class="attr">addSub</span>: <span class="keyword">function</span>(<span class="params">sub</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">subs</span>.<span class="title function_">push</span>(sub);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">notify</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">subs</span>.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">sub</span>) &#123;</span><br><span class="line">        sub.<span class="title function_">update</span>();</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="总结">总结</h2>
<p>  首先，为每个 Vue 属性用 <code>Object.defineProperty()</code> 实现数据劫持，为每个属性分配一个订阅者集合的管理数组 dep；然后在编译的时候在该属性的数组 dep 中添加订阅者，<code>v-model</code> 会添加一个订阅者，<code>&#123;&#123;&#125;&#125;</code> 也会，<code>v-bind</code> 也会，只要用到该属性的指令理论上都会，接着为 input 会添加监听事件，修改值就会为该属性赋值，触发该属性的 set 方法，在 set 方法内通知订阅者数组 dep，订阅者数组循环调用各订阅者的 <code>update</code> 方法更新视图。</p>
<h3 id="v-model">v-model</h3>
<p>  v-model 虽然很像使用了双向数据绑定的 Angular 的 ng-model，但是 Vue 是单项数据流，v-model 只是语法糖而已。</p>
<p>  第一行的代码其实只是第二行的语法糖。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;sth&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-bind:value</span>=<span class="string">&quot;sth&quot;</span> <span class="attr">v-on:input</span>=<span class="string">&quot;sth = $event.target.value&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p><br/><br/></p>
<hr>
<p>参考来源：</p>
<ol>
<li><a href="https://www.cnblogs.com/chenhuichao/p/10818396.html">https://www.cnblogs.com/chenhuichao/p/10818396.html</a></li>
<li><a href="https://www.jianshu.com/p/5fe2664ff5f7">https://www.jianshu.com/p/5fe2664ff5f7</a></li>
</ol>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>前端技术栈</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>宿舍秒杀系统的需求分析与数据库设计</title>
    <url>/SongXJ01/2023/%E5%AE%BF%E8%88%8D%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<p>  在本文中将分析一个用于新生开学分配寝室的“<strong>宿舍秒杀 </strong>”系统。从用户故事开始<strong> 探索需求</strong>，进而分析得到系统的主要功能和非功能性需求。最后，根据需求分析设计数据库，数据库的设计原则是尽可能的方便之后的需求拓展和修改。</p>
<span id="more"></span>
<hr>
<p><br/><br/></p>
<h2 id="用户故事">用户故事</h2>
<p>  用户故事一般是产品经理初次描述给自己和开发人员看的，然后产品负责人要依据用户故事设计原型，原型在客户那里通过后，然后再在用户故事里面添加附件。用户故事不会一开始就很清晰，甚至可能不会有特专业术语。</p>
<h3 id="学生">学生</h3>
<ul>
<li>作为 <code> 学生 </code>，我想要<code> 在系统里登录，并获取验证码 </code>，以便于<code> 登录到自己的账号中进行宿舍选取</code>。</li>
<li>作为 <code> 学生 </code>，我想要<code> 查询剩余宿舍的信息 </code>，以便于<code> 及时选择或更换寝室志愿</code>。</li>
<li>作为 <code> 学生 </code>，我想要<code> 查询宿舍的基本信息（楼号、寝室人数、是否为上下铺、寝室朝向）</code>，以便于 <code> 选择自己志愿的寝室</code>。</li>
<li>作为 <code> 学生 </code>，我想要<code> 核对我的个人信息 </code>，以便于<code> 在分寝室的时候不会出现错误</code>。</li>
<li>作为 <code> 学生 </code>，我想要<code> 可以组队抢寝室 </code>，以便于<code> 在分寝室的时候不会出现错误</code>。</li>
<li>作为 <code> 学生 </code>，我想要<code> 可以创建组队 </code> 或<code>加入队伍 </code>，以便于<code> 进行组队抢宿舍</code>。</li>
<li>作为 <code> 学生 </code>，我想要<code> 在系统里预先选择要抢的宿舍，到点提交 </code>，以便于<code> 在第一时间抢宿舍</code>。</li>
<li>作为 <code> 学生 </code>，我想要<code> 查看寝室的选取结果（包括分到的寝室号，室友的相关信息）</code>，以便于 <code> 及时联系到室友</code>。</li>
</ul>
<h3 id="寝管">寝管</h3>
<ul>
<li>作为 <code> 寝管 </code>，我想要<code> 修改每个寝室的床位信息 </code>，以便于<code> 管理寝室信息</code>。</li>
<li>作为 <code> 寝管 </code>，我想要<code> 按照寝室顺序导出名单 </code>，以便于<code> 在报到时让领钥匙的同学签字</code>。</li>
<li>作为 <code> 寝管 </code>，我想要<code> 查询并修改床位的可用状态 </code>，以便于<code> 对损坏的床位进行申请报修</code>。</li>
</ul>
<h3 id="管理员">管理员</h3>
<ul>
<li>作为 <code> 管理员 </code>，我想要<code> 学生核对他们的个人信息 </code>，以便于<code> 在分寝室的时候不会出现错误</code>。</li>
<li>作为 <code> 管理员 </code>，我想要<code> 对学生设置标签 </code>，以便于<code> 后期规定按照某一标签（如班级、专业）进行分寝室</code>。</li>
<li>作为 <code> 管理员 </code>，我想要<code> 系统支持 2000 人左右的同时访问 </code>，以便于<code> 满足学生可以在一个时间点同时抢寝室</code>。</li>
<li>作为 <code> 管理员 </code>，我想要<code> 防止有同学使用脚本去抢寝室 </code>，以便于<code> 保证系统的安全性</code>。</li>
</ul>
<p><br/><br/></p>
<h2 id="需求分析">需求分析</h2>
<h3 id="主要功能">主要功能</h3>
<ul>
<li>学生核对个人基本信息</li>
<li>查询宿舍基本信息（如，宿舍人数等）</li>
<li>查询宿舍空床位信息</li>
<li>学生可以被设置标签（如班级）</li>
<li>根据标签设置可选房间列表（如列表为空，则可选所有满足条件的宿舍）</li>
<li>学生可以组队选宿舍（1-4 人）</li>
<li>查看订单处理结果</li>
<li>管理员可以管理宿舍信息</li>
<li>管理员可以编辑宿舍床位的状态（如床位不可用）</li>
<li>管理员可以导出相关的数据</li>
</ul>
<h3 id="非功能性需求">非功能性需求</h3>
<ul>
<li>支持 2000 人并发</li>
<li>防止脚本</li>
</ul>
<p><br/><br/></p>
<h2 id="数据库设计">数据库设计</h2>
<h3 id="设计思路">设计思路</h3>
<p>  考虑到后期需求可能会发生变动，因此在数据库设计的时候最大程度降低了表与表之间的关联程度。数据库中有两个核心主体——<code>bed</code>（床位信息）、<code>student</code>（学生信息）。</p>
<ul>
<li>与 <strong> 床位信息 </strong> 相关的表有：<code>dorm</code>（宿舍信息）、<code>house</code>（宿舍楼信息）、<code>bed_type</code>（床铺类型信息）。</li>
<li>与 <strong> 学生信息 </strong> 相关的表有：<code>class</code>（班级信息）、<code>major</code>（专业信息）、<code>stu_contact_info</code>（学生联络信息表）。其中年级信息作为一个属性考虑在班级信息内。</li>
</ul>
<p>  对于 <strong> 学生 </strong> 和<strong>床位 </strong> 的关系，单独建立了一个关联表 <code>rel_bed_stu</code>。该表使用“学号 + 时间戳”的方式作为主键，记录学生床位的分配信息。除此之外，还设计了 <code>config</code> 表储存系统相关配置信息，<code>admin</code> 表储存管理员相关信息。</p>
<h3 id="数据库表结构">数据库表结构</h3>
<h4 id="床位信息表：bed">床位信息表：bed</h4>
<p><img src="/images/%E5%AE%BF%E8%88%8D%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/%E5%BA%8A%E4%BD%8D%E4%BF%A1%E6%81%AF%E8%A1%A8.png" alt="床位信息表"></p>
<h4 id="寝室信息表：dorm">寝室信息表：dorm</h4>
<p><img src="/images/%E5%AE%BF%E8%88%8D%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/%E5%AF%9D%E5%AE%A4%E4%BF%A1%E6%81%AF%E8%A1%A8.png" alt="寝室信息表"></p>
<h4 id="楼号信息表：house">楼号信息表：house</h4>
<p><img src="/images/%E5%AE%BF%E8%88%8D%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/%E6%A5%BC%E5%8F%B7%E4%BF%A1%E6%81%AF%E8%A1%A8.png" alt="楼号信息表"></p>
<h4 id="床位类型表：bed-type">床位类型表：bed_type</h4>
<p><img src="/images/%E5%AE%BF%E8%88%8D%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/%E5%BA%8A%E4%BD%8D%E7%B1%BB%E5%9E%8B%E8%A1%A8.png" alt="床位类型表"></p>
<h4 id="学生信息表：student">学生信息表：student</h4>
<p><img src="/images/%E5%AE%BF%E8%88%8D%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E8%A1%A8.png" alt="学生信息表"></p>
<h4 id="学生联系方式表：stu-contact-info">学生联系方式表：stu_contact_info</h4>
<p><img src="/images/%E5%AE%BF%E8%88%8D%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/%E5%AD%A6%E7%94%9F%E8%81%94%E7%B3%BB%E6%96%B9%E5%BC%8F%E8%A1%A8.png" alt="学生联系方式表"></p>
<h4 id="班级信息表：class">班级信息表：class</h4>
<p><img src="/images/%E5%AE%BF%E8%88%8D%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/%E7%8F%AD%E7%BA%A7%E4%BF%A1%E6%81%AF%E8%A1%A8.png" alt="班级信息表"></p>
<h4 id="专业信息表：major">专业信息表：major</h4>
<p><img src="/images/%E5%AE%BF%E8%88%8D%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/%E4%B8%93%E4%B8%9A%E4%BF%A1%E6%81%AF%E8%A1%A8.png" alt="专业信息表"></p>
<h4 id="学生 - 床位关系表：rel-bed-stu">学生 - 床位关系表：rel_bed_stu</h4>
<p><img src="/images/%E5%AE%BF%E8%88%8D%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/%E5%AD%A6%E7%94%9F%E5%BA%8A%E4%BD%8D%E5%85%B3%E7%B3%BB%E8%A1%A8.png" alt="学生床位关系表"></p>
<h4 id="订单表：order">订单表：order</h4>
<p><img src="/images/%E5%AE%BF%E8%88%8D%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/%E8%AE%A2%E5%8D%95%E8%A1%A8.png" alt="订单表"></p>
<h4 id="管理员信息表：admin">管理员信息表：admin</h4>
<p><img src="/images/%E5%AE%BF%E8%88%8D%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/%E7%AE%A1%E7%90%86%E5%91%98%E4%BF%A1%E6%81%AF%E8%A1%A8.png" alt="管理员信息表"></p>
<h4 id="配置表：config">配置表：config</h4>
<p><img src="/images/%E5%AE%BF%E8%88%8D%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/%E9%85%8D%E7%BD%AE%E8%A1%A8.png" alt="配置表"></p>
<h3 id="数据库模型图">数据库模型图</h3>
<p><img src="/images/%E5%AE%BF%E8%88%8D%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A8%A1%E5%9E%8B%E5%9B%BE.png" alt="数据库模型图"></p>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>互联网应用开发实践</category>
      </categories>
      <tags>
        <tag>互联网应用开发实践</tag>
        <tag>需求分析</tag>
        <tag>数据库设计</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Python 中调用 C++ 代码</title>
    <url>/SongXJ01/2023/%E5%9C%A8Python%E4%B8%AD%E8%B0%83%E7%94%A8C++%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<p>  Python 与 C++ 的互操作性为开发者提供了多种灵活的选择，在本篇文章中将会总结一些在 Python 中调用 C++ 代码的方法，包括使用 ctypes 库直接调用 C++ 动态链接库函数，借助 SWIG 或 Boost.Python 自动生成或手动编写接口，以及利用 Cython 和 Pybind11 等现代工具创建 Python 与 C++ 之间的绑定。这些方法简化了在 Python 中调用 C++ 代码的过程，使得开发者能够轻松利用 C++ 的性能优势。本文将着重介绍 <strong>Pybind11</strong> 这一工具。</p>
<span id="more"></span>
<hr>
<h2 id="方案筛选">方案筛选</h2>
<ol>
<li><strong>Ctypes</strong>: Ctypes 是 Python 内置的一个标准库，可以用来调用动态链接库（DLL）中的 C/C++ 函数。通过一套类型映射的方式将 Python 与二进制动态链接库相连接。</li>
<li><strong>SWIG</strong>（Simplified Wrapper and Interface Generator）：SWIG 是一个能够自动生成 C/C++ 程序和其他高级语言（如 Python）之间的包装器的工具。它可以将 C/C++ 代码包装成可以被 Python 直接调用的模块。但由于支持的语言众多，因此在 Python 端性能表现不是太好。</li>
<li><strong>Boost.Python</strong>: Boost.Python 是 C++ Boost 库中的一个子模块，它提供了一组 C++ 类和函数，用于将 C++ 代码包装成 Python 可以直接调用的模块。但最大的缺点是需要依赖庞大的 Boost 库，编译和依赖关系包袱重。</li>
<li><strong>Cython</strong>: Cython 是一个用于将 Python 代码转换为 C/C++ 代码的编译器，可以通过将 C/C++ 代码嵌入到 Python 中。</li>
<li><strong>Pybind11</strong>：Pybind11 是一个轻量级的开源库，可以将 C++ 代码封装成可以被 Python 直接调用的模块。它提供了简洁而直观的语法，使得将 C++ 代码封装成 Python 接口变得更加容易。</li>
</ol>
<h3 id="对比">对比</h3>
<ul>
<li>底层实现：Ctypes 是使用 Python 自带的标准库，通过 <strong> 调用动态链接库 </strong>（DLL）中的 C/C++ 函数来实现。SWIG、Boost.Python、Cython 和 Pybind11 则是通过<strong> 生成封装代码 </strong> 来实现，将 C/C++ 代码封装成可以被 Python 直接调用的模块。</li>
<li>使用难度：Ctypes 的使用相对较简单，只需要导入函数原型并调用即可。SWIG 在配置和使用上较为复杂，需要编写接口文件和配置文件。Boost.Python 和 Pybind11 的使用相对较简单。</li>
</ul>
<h3 id="开源库的选择参考">开源库的选择参考</h3>
<ul>
<li>HiGHS：选择了 Pybind11；</li>
<li>Tensorflow：已于 2019 年将 SIWG 切换为 pybind11；</li>
<li>目前市面上大部分 AI 计算框架，如 TensorFlow、Pytorch、阿里 X-Deep Learning、百度 PaddlePaddle 等，均使用 pybind11 来提供 C++ 到 Python 端接口封装。</li>
</ul>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="pybind11- 使用总结">pybind11 使用总结</h2>
<p>参考：<a href="https://daobook.github.io/pybind11/basics.html">Pybind11 文档</a></p>
<h3 id="模块引入">模块引入</h3>
<p>  pybind11 是一个 header-only 的库，只需要 C++ 项目里直接 include pybind11 的头文件就能使用。可以 <code>git submodule</code> 添加子模块：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git submodule add https://github.com/pybind/pybind11.git pybind11</span><br><span class="line"><span class="built_in">cd</span> pybind11/</span><br><span class="line">git checkout tags/v2.10.0</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">cmake --build . --config Release --target check</span><br><span class="line">make check -j 4</span><br></pre></td></tr></table></figure>
<p>在 CMakeLists.txt 里 <code>add_subdirectory</code> pybind11 的路径，再用其提供的 <code>pybind11_add_module</code> 就能创建 pybind11 的模块了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.25)</span><br><span class="line">project(pybind_test)</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span>(MY_PYBIND <span class="variable">$&#123;MY_CURR&#125;</span>/third_party/pybind11-2.5.0)</span><br><span class="line"></span><br><span class="line">add_subdirectory(<span class="variable">$&#123;MY_PYBIND&#125;</span>)</span><br><span class="line">pybind11_add_module(example_pb example_pb.cpp)</span><br></pre></td></tr></table></figure>
<p>如果想在已有 C++ 动态库上扩展 pybind11 绑定，那么 <code>target_link_libraries</code> 链接该动态库就可以了。<br>
（示例代码：<a href="https://github.com/ikuokuo/start-pybind11">https://github.com/ikuokuo/start-pybind11</a>）</p>
<h3 id="使用 -pybind11- 封装 c">使用 pybind11 封装 C++</h3>
<h4 id="c- 文件">C++ 文件</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;vdot.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">dot</span><span class="params">(std::vector&lt;<span class="type">double</span>&gt; &amp;a, std::vector&lt;<span class="type">double</span>&gt; &amp;b)</span> </span>&#123;</span><br><span class="line">  <span class="type">double</span> res = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; (<span class="type">int</span>)a.<span class="built_in">size</span>(); ++i) &#123;</span><br><span class="line">    res += a[i] * b[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="pybind11- 文件">pybind11 文件</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pybind11/pybind11.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pybind11/stl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;cpp/vdot_cpp/vdot.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> py = pybind11;</span><br><span class="line"><span class="built_in">PYBIND11_MODULE</span>(np, m) &#123; <span class="comment">// (Python 包名为 np, 实例对象)</span></span><br><span class="line">  m.<span class="built_in">doc</span>() = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  m.<span class="built_in">def</span>(<span class="string">&quot;vdot&quot;</span>, &amp;dot); <span class="comment">// m.def(&quot;Python 函数名 &quot;, &amp;C 函数名);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="编写 cmake">编写 CMake</h4>
<h5 id="编译 -c- 的库">编译 C++ 的库</h5>
<p>使用 start-pybind11 提供的宏进行编译 C++ 动态库（静态库也可以）。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># add_my_library(LIB_NAME [SRCS srcs] [LIBS libs] [SHARED] [THREAD])</span></span><br><span class="line">add_my_library(vdotlib  <span class="comment"># C++ 编译后的库名</span></span><br><span class="line">        SRCS vdot.cpp   <span class="comment"># C++ 源文件</span></span><br><span class="line">        SHARED  <span class="comment"># 动态库</span></span><br><span class="line">        THREAD)</span><br></pre></td></tr></table></figure>
<p>在父层文件夹添加该子目录</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">add_subdirectory</span>(<span class="variable">$&#123;MY_CURR&#125;</span>/vdot_cpp)</span><br></pre></td></tr></table></figure>
<h5 id="编译 -pybind11- 的 -so- 库">编译 pybind11 的 .so 库</h5>
<p>使用 start-pybind11 提供的宏进行编译 C++ 动态库（静态库也可以）。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">add_pb_library(np <span class="comment"># 库的名字（ Python 的包名 ）</span></span><br><span class="line">        SRCS vdot_py.cpp  <span class="comment"># binding 文件</span></span><br><span class="line">        LIBS vdotlib			<span class="comment"># C++ 编译后的库名，静态动态均可</span></span><br><span class="line">        SHARED</span><br><span class="line">        THREAD)</span><br></pre></td></tr></table></figure>
<p>在父层文件夹添加该子目录</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">add_subdirectory</span>(<span class="variable">$&#123;MY_CURR&#125;</span>/vdot)</span><br></pre></td></tr></table></figure>
<h4 id="让 -python- 的 -so 库可以找到 c- 库">让 Python 的.so 库可以找到 C++ 库</h4>
<p>把 C++ 编译后的库文件导入动态连接库的搜索路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">p_c=<span class="string">&quot;/Users/sxj/CLionProjects/start-pybind11-new/_output/lib/vdot_cpp&quot;</span></span><br><span class="line"><span class="built_in">export</span> DYLD_LIBRARY_PATH=$p_c<span class="variable">$&#123;DYLD_LIBRARY_PATH:+:<span class="variable">$&#123;DYLD_LIBRARY_PATH&#125;</span>&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$DYLD_LIBRARY_PATH</span> </span><br></pre></td></tr></table></figure>
<p>或者直接移动 .dylib 库（或 .a 库）到 .so 库相同目录。</p>
<h4 id="把 -so 库 - 加入 -python- 的搜索路径">把 .so 库 加入 Python 的搜索路径</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">p_so=<span class="string">&quot;/Users/sxj/CLionProjects/MDecomper0922/_output/lib/pybind&quot;</span></span><br><span class="line"><span class="built_in">export</span> PYTHONPATH=$p_so<span class="variable">$&#123;PYTHONPATH:+:<span class="variable">$&#123;PYTHONPATH&#125;</span>&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PYTHONPATH</span> </span><br></pre></td></tr></table></figure>
<p>然后就可以使用 <code>import</code> 加 .so 的名字来使用了。</p>
<h3 id="支持的数据类型">支持的数据类型</h3>
<p>参考：<a href="https://daobook.github.io/pybind11/advanced/cast/index.html">https://daobook.github.io/pybind11/advanced/cast/index.html</a><br>
  <code>float</code>, <code>double</code>，<code>bool</code>，<code>char</code>，<code>const char *</code>，<code>std::string</code>，<code>std::pair&lt;T1, T2&gt;</code>，<code>std::tuple&lt;...&gt;</code>，<code>std::complex&lt;T&gt;</code>，<code>std::array&lt;T, Size&gt;</code>，<code>std::vector&lt;T&gt;</code>，<code>std::set&lt;T&gt;</code>，<code>std::function&lt;...&gt;</code>，<code>Eigen::Matrix&lt;...&gt;</code>，<code>Eigen::SparseMatrix&lt;...&gt;</code>  ……</p>
<p><strong>STL 容器</strong><br>
pybind11 支持 STL 容器自动转换，当需要处理 STL 容器时，只要额外包括头文件 <code>&lt;pybind11/stl.h&gt;</code> 即可。</p>
<p><strong>bytes、string 类型传递</strong><br>
由于在 Python3 中 string 类型默认为 UTF-8 编码，如果从 C++ 端传输 string 类型的 protobuf 数据到 Python，则会出现 “UnicodeDecodeError” 的报错，所以需要使用 <code>py::bytes</code>。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">m.<span class="built_in">def</span>(<span class="string">&quot;return_bytes&quot;</span>,</span><br><span class="line">    []() &#123;</span><br><span class="line">        std::string <span class="built_in">s</span>(<span class="string">&quot;\xba\xd0\xba\xd0&quot;</span>);  <span class="comment">// Not valid UTF-8</span></span><br><span class="line">        <span class="keyword">return</span> py::<span class="built_in">bytes</span>(s);  <span class="comment">// Return the data without transcoding</span></span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p><strong>智能指针</strong><br>
<a href="https://charlottelive.github.io/pybind11-Chinese-docs/10.%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88.html">智能指针 - pybind11 中文文档</a></p>
<h3 id="函数">函数</h3>
<h4 id="声明函数参数名称和默认值">声明函数参数名称和默认值</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">m.<span class="built_in">def</span>(<span class="string">&quot;add&quot;</span>, &amp;add, <span class="string">&quot;A function which adds two numbers&quot;</span>,</span><br><span class="line">      py::<span class="built_in">arg</span>(<span class="string">&quot;i&quot;</span>) = <span class="number">1</span>, py::<span class="built_in">arg</span>(<span class="string">&quot;j&quot;</span>) = <span class="number">2</span>);</span><br></pre></td></tr></table></figure>
<h4 id="返回指针">返回指针</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">Data *<span class="title">get_data</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> _data; &#125;</span><br><span class="line">m.<span class="built_in">def</span>(<span class="string">&quot;get_data&quot;</span>, &amp;get_data, py::return_value_policy::reference);</span><br></pre></td></tr></table></figure>
<h4 id="运算符重载">运算符重载</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Vector2</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Vector2</span>(<span class="type">float</span> x, <span class="type">float</span> y) : <span class="built_in">x</span>(x), <span class="built_in">y</span>(y) &#123; &#125;</span><br><span class="line"></span><br><span class="line">    Vector2 <span class="keyword">operator</span>+(<span class="type">const</span> Vector2 &amp;v) <span class="type">const</span> &#123; <span class="keyword">return</span> <span class="built_in">Vector2</span>(x + v.x, y + v.y); &#125;</span><br><span class="line">    Vector2 <span class="keyword">operator</span>*(<span class="type">float</span> value) <span class="type">const</span> &#123; <span class="keyword">return</span> <span class="built_in">Vector2</span>(x * value, y * value); &#125;</span><br><span class="line">    Vector2&amp; <span class="keyword">operator</span>+=(<span class="type">const</span> Vector2 &amp;v) &#123; x += v.x; y += v.y; <span class="keyword">return</span> *<span class="keyword">this</span>; &#125;</span><br><span class="line">    Vector2&amp; <span class="keyword">operator</span>*=(<span class="type">float</span> v) &#123; x *= v; y *= v; <span class="keyword">return</span> *<span class="keyword">this</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">friend</span> Vector2 <span class="keyword">operator</span>*(<span class="type">float</span> f, <span class="type">const</span> Vector2 &amp;v) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Vector2</span>(f * v.x, f * v.y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">std::string <span class="title">toString</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;[&quot;</span> + std::<span class="built_in">to_string</span>(x) + <span class="string">&quot;, &quot;</span> + std::<span class="built_in">to_string</span>(y) + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">float</span> x, y;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pybind11/operators.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">PYBIND11_MODULE</span>(example, m) &#123;</span><br><span class="line">    py::<span class="built_in">class_</span>&lt;Vector2&gt;(m, <span class="string">&quot;Vector2&quot;</span>)</span><br><span class="line">        .<span class="built_in">def</span>(py::<span class="built_in">init</span>&lt;<span class="type">float</span>, <span class="type">float</span>&gt;())</span><br><span class="line">        .<span class="built_in">def</span>(py::self + py::self)</span><br><span class="line">        .<span class="built_in">def</span>(py::self += py::self)</span><br><span class="line">        .<span class="built_in">def</span>(py::self *= <span class="built_in">float</span>())</span><br><span class="line">        .<span class="built_in">def</span>(<span class="built_in">float</span>() * py::self)</span><br><span class="line">        .<span class="built_in">def</span>(py::self * <span class="built_in">float</span>())</span><br><span class="line">        .<span class="built_in">def</span>(-py::self)</span><br><span class="line">        .<span class="built_in">def</span>(<span class="string">&quot;__repr__&quot;</span>, &amp;Vector2::toString);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="面向对象">面向对象</h3>
<h4 id="公有变量">公有变量</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">.<span class="built_in">def_readwrite</span>(<span class="string">&quot;name&quot;</span>, &amp;Pet::name)</span><br></pre></td></tr></table></figure>
<h4 id="私有变量">私有变量</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">.<span class="built_in">def_property</span>(<span class="string">&quot;name&quot;</span>, &amp;Pet::getName, &amp;Pet::setName)</span><br></pre></td></tr></table></figure>
<h4 id="继承">继承</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Pet</span> &#123;</span><br><span class="line">    <span class="built_in">Pet</span>(<span class="type">const</span> std::string &amp;name) : <span class="built_in">name</span>(name) &#123; &#125;</span><br><span class="line">    std::string name;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Dog</span> : Pet &#123;</span><br><span class="line">    <span class="built_in">Dog</span>(<span class="type">const</span> std::string &amp;name) : <span class="built_in">Pet</span>(name) &#123; &#125;</span><br><span class="line">    <span class="function">std::string <span class="title">bark</span><span class="params">()</span> <span class="type">const</span> </span>&#123; <span class="keyword">return</span> <span class="string">&quot;woof!&quot;</span>; &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">py::<span class="built_in">class_</span>&lt;Pet&gt;(m, <span class="string">&quot;Pet&quot;</span>)</span><br><span class="line">   .<span class="built_in">def</span>(py::<span class="built_in">init</span>&lt;<span class="type">const</span> std::string &amp;&gt;())</span><br><span class="line">   .<span class="built_in">def_readwrite</span>(<span class="string">&quot;name&quot;</span>, &amp;Pet::name);</span><br><span class="line">py::<span class="built_in">class_</span>&lt;Dog, Pet&gt;(m, <span class="string">&quot;Dog&quot;</span>)</span><br><span class="line">    .<span class="built_in">def</span>(py::<span class="built_in">init</span>&lt;<span class="type">const</span> std::string &amp;&gt;())</span><br><span class="line">    .<span class="built_in">def</span>(<span class="string">&quot;bark&quot;</span>, &amp;Dog::bark);</span><br></pre></td></tr></table></figure>
<h4 id="重载">重载</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Pet</span> &#123;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">set</span><span class="params">(<span class="type">int</span> age_)</span> </span>&#123; age = age_; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">set</span><span class="params">(<span class="type">const</span> std::string &amp;name_)</span> </span>&#123; name = name_; &#125;</span><br><span class="line">&#125;;</span><br><span class="line">py::<span class="built_in">class_</span>&lt;Pet&gt;(m, <span class="string">&quot;Pet&quot;</span>)</span><br><span class="line">    .<span class="built_in">def</span>(<span class="string">&quot;set&quot;</span>, py::<span class="built_in">overload_cast</span>&lt;<span class="type">int</span>&gt;(&amp;Pet::set), <span class="string">&quot;Set the pet&#x27;s age&quot;</span>)</span><br><span class="line">    .<span class="built_in">def</span>(<span class="string">&quot;set&quot;</span>, py::<span class="built_in">overload_cast</span>&lt;<span class="type">const</span> std::string &amp;&gt;(&amp;Pet::set), <span class="string">&quot;Set the pet&#x27;s name&quot;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Widget</span> &#123;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">foo</span><span class="params">(<span class="type">int</span> x, <span class="type">float</span> y)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">foo</span><span class="params">(<span class="type">int</span> x, <span class="type">float</span> y)</span> <span class="type">const</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">py::<span class="built_in">class_</span>&lt;Widget&gt;(m, <span class="string">&quot;Widget&quot;</span>)</span><br><span class="line">   .<span class="built_in">def</span>(<span class="string">&quot;foo&quot;</span>, py::<span class="built_in">overload_cast</span>&lt;<span class="type">int</span>, <span class="type">float</span>&gt;(&amp;Widget::foo))</span><br><span class="line">   .<span class="built_in">def</span>(<span class="string">&quot;foo&quot;</span>,   py::<span class="built_in">overload_cast</span>&lt;<span class="type">int</span>, <span class="type">float</span>&gt;(&amp;Widget::foo, py::const_));</span><br></pre></td></tr></table></figure>
<h4 id="内部类和内部枚举">内部类和内部枚举</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Pet</span> &#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">Attributes</span> &#123;</span><br><span class="line">        <span class="type">float</span> age = <span class="number">0</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">enum</span> <span class="title class_">Kind</span> &#123;</span><br><span class="line">        Dog = <span class="number">0</span>,</span><br><span class="line">        Cat</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">py::class_&lt;Pet&gt; <span class="title">pet</span><span class="params">(m, <span class="string">&quot;Pet&quot;</span>)</span></span>;</span><br><span class="line"><span class="function">py::class_&lt;Pet::Attributes&gt; <span class="title">attributes</span><span class="params">(pet, <span class="string">&quot;Attributes&quot;</span>)</span></span></span><br><span class="line"><span class="function">    .<span class="title">def</span><span class="params">(py::init&lt;&gt;())</span></span></span><br><span class="line"><span class="function">    .<span class="title">def_readwrite</span><span class="params">(<span class="string">&quot;age&quot;</span>, &amp;Pet::Attributes::age)</span></span>;</span><br><span class="line">py::<span class="built_in">enum_</span>&lt;Pet::Kind&gt;(pet, <span class="string">&quot;Kind&quot;</span>)</span><br><span class="line">    .<span class="built_in">value</span>(<span class="string">&quot;Dog&quot;</span>, Pet::Kind::Dog)</span><br><span class="line">    .<span class="built_in">value</span>(<span class="string">&quot;Cat&quot;</span>, Pet::Kind::Cat)</span><br><span class="line">    .<span class="built_in">export_values</span>();</span><br></pre></td></tr></table></figure>
<h3 id="手动编译">手动编译</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">c++ -O3 -Wall -shared -std=c++11 -fPIC $(python3-config --includes) -Iextern/pybind11/include example.cpp -o example$(python3-config --extension-suffix)</span><br></pre></td></tr></table></figure>
<h3 id="py-cast">py::cast</h3>
<p>用于在 C++ 代码中进行 Python 对象类型的转换</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pybind11/pybind11.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> py = pybind11;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    py::<span class="built_in">initialize_interpreter</span>(); <span class="comment">// 初始化 Python 解释器</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将 Python 整数对象转换为 C++ 整数</span></span><br><span class="line">    py::object py_int = py::<span class="built_in">int_</span>(<span class="number">42</span>);</span><br><span class="line">    <span class="type">int</span> cpp_int = py::<span class="built_in">cast</span>&lt;<span class="type">int</span>&gt;(py_int);</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;C++ int: &quot;</span> &lt;&lt; cpp_int &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将 C++ 整数转换为 Python 整数对象</span></span><br><span class="line">    <span class="type">int</span> cpp_int2 = <span class="number">123</span>;</span><br><span class="line">    py::object py_int2 = py::<span class="built_in">cast</span>&lt;py::object&gt;(cpp_int2);</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Python int: &quot;</span> &lt;&lt; py::<span class="built_in">str</span>(py_int2) &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">    py::<span class="built_in">finalize_interpreter</span>(); <span class="comment">// 清理 Python 解释器</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="开源示例">开源示例</h2>
<h3 id="示例 -start-pybind11- 运行命令记录">示例 start-pybind11  运行命令记录</h3>
<p><a href="https://github.com/ikuokuo/start-pybind11">GitHub - ikuokuo/start-pybind11: Start pybind11</a><br>
<strong>【注意】</strong> 切换 Python 的环境为 3.9，首先需要在 CLion 中设置 <code>Python Interpreter</code> 为指定版本的 conda 环境（本地测试成功的为 <code>py39</code>）。完全退出 CLion，在命令行<code>conda activate py39</code> 切换环境后再次打开<code>open CLion.app</code> 后即可更改运行的 Python 环境。</p>
<p><strong>编译</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-DBUILD_PYTHON_BINDINGS=True</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> start-pybind11/</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<p><strong>运行</strong></p>
<p>加入 Python 的环境变量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> setup.bash first_steps</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import first_steps_pb as pb</span><br><span class="line">pb.add(1, 2)</span><br></pre></td></tr></table></figure>
<h3 id="highs- 运行命令记录">HiGHS 运行命令记录</h3>
<p><strong>编译</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-DBUILD_PYTHON=True -DBUILD_DEPS=ON</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">cmake --build .</span><br></pre></td></tr></table></figure>
<p><strong>安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cmake --install .</span><br></pre></td></tr></table></figure>
<p>Python 包安装（cd 到项目根目录，借助 <code>setup.py</code> 进行安装）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install -e ./</span><br></pre></td></tr></table></figure>
<p>同时需要安装依赖</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install pybind11</span><br><span class="line">pip install pyomo</span><br></pre></td></tr></table></figure>
<p>测试 Python 接口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pytest -v ./highspy/tests/</span><br></pre></td></tr></table></figure>
<p><br/><br/></p>
<h2 id="参考网站">参考网站</h2>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/192974017">pybind11 的最佳实践</a></li>
<li><a href="https://charlottelive.github.io/pybind11-Chinese-docs/04.%E9%A6%96%E6%AC%A1%E5%B0%9D%E8%AF%95.html">pybind11 文档</a></li>
</ul>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>C++</tag>
        <tag>pybind11</tag>
      </tags>
  </entry>
  <entry>
    <title>程序人生：“写作”与“写代码”</title>
    <url>/SongXJ01/2021/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F%EF%BC%9A%E2%80%9C%E5%86%99%E4%BD%9C%E2%80%9D%E4%B8%8E%E2%80%9C%E5%86%99%E4%BB%A3%E7%A0%81%E2%80%9D/</url>
    <content><![CDATA[<p>  前不久在网站中读到一篇文章，讲述的是写作与作曲的关系。对于大部分程序员来说，作曲似乎离我们比较遥远，可是写作却始终与我们的工作、生活紧密相连，比如在我们的工作中要编写各种文档、做项目计划，而在生活中，我们也可能会写自己的博客或是日记。</p>
<span id="more"></span>
<hr>
<h2 id="1- 写作很像写代码">1. 写作很像写代码 </h2>
<h3 id="1- 写作和写代码都要遵循一定的逻辑规则">（1）写作和写代码都要遵循一定的逻辑规则 </h3>
<p>  写作和写代码一样，都要求我们去遵循一定的规则和规律，你需要懂得：</p>
<ul>
<li><strong> 语法 </strong>：我们都知道写代码时，需要遵循所使用的编程语言的语法。如果语法不对，那么代码根本无法编译。同样，在写作中，你需要遵循中文语法，包括正确的使用断句、标点、段落等，这些都是写作过程中的最近的要求。</li>
<li><strong> 逻辑 </strong>：没有逻辑的代码，会漏洞百出，甚至造成系统的严重缺陷。同样，文章的前后章节或所写的故事也需要遵循一定的逻辑，没有逻辑的文章会让人觉得不知所云，从而放弃继续阅读。</li>
<li><strong> 装饰 </strong>：文章需要通过一些表达方式（议论、抒情、描写等）或修辞手法（排比、比喻、对比、夸张等）来使文章更加生动有趣，没哟修饰的文章就像没有界面的软件，让人觉得枯燥、乏味，失去阅读的兴趣。</li>
</ul>
<p>  上面所说的三点都是写作中的最基本的要求，如果你都能做到，那么它已经是一篇合格的文章了，如果能加上更吸引人的标题和内容，那么相信那将会是一篇精彩的文章。</p>
<h3 id="2- 都是将细节组合成更美的东西">（2）都是将细节组合成更美的东西 </h3>
<p>  文章是由一个个段落组成的，而每一个段落又由很多词句组成。这很像一个软件由很多模块组成，每个模块又包含了很多代码段一样。它们都是将这些很微小的部分一点点组合起来变成一个完整的作品：一篇文章或一个软件应用。</p>
<h3 id="3- 你需要能够看到全局">（3）你需要能够看到全局 </h3>
<p>  软件开发中有架构师的角色，他会负责整个应用的架构，确定模块间的调用关系，以保证整个应用都能协调高效地工作。同样，在写一篇文章时，你就成了这篇文章的架构师，你需要对文章的段落构成和每个章节进行合理的规划，使整个文章既有清晰的层次，又能突出重点并且完整地表达你的主题。</p>
<h3 id="4- 自我表达非常关键">（4）自我表达非常关键 </h3>
<p>  写作和写代码都需要创造力以及自我表达能力，它们不是与生俱来的，需要你通过不断地练习（写作和写代码），逐渐地去掌握它，并最终创造出属于你自己的风格和表现形式。</p>
<h3 id="5- 考虑你的读者或用户">（5）考虑你的读者或用户 </h3>
<p>  现在的应用变得越来越重视用户了，从 UI（用户界面）设计到 UX（用户体验）设计再到情感设计，软件设计师们越来越重视用户的使用感受。同样，你在写一篇文章时也需要能够站在读者的角度去审视你的文章，并通过一些方法，比如，强调某一个你希望引起读者管制的段落，来引导你的读者更好地阅读和理解你的文章，并且从中获得更好的阅读体验。</p>
<h3 id="6- 每个人都可以写作和学会写代码">（6）每个人都可以写作和学会写代码 </h3>
<p>  我还没有看过一本介绍如何写作的书籍，我既不懂得太多的修辞手法，文笔也不老道，但这些都不会成为我写作的障碍。我所做的只是将我所想的用最简单的语言表达出来，然后通过反复的修改，让它们读起来通顺，仅此而已。同样，你也不需要任何准备就可以开始学习写代码，就像在“技匠”的公众号中的一篇文章中提到，只用 5 分钟就学会了如何写一个能够识别橙子🍊和苹果🍎的人工智能程序一样，你也可以通过自学编程来学会写代码。</p>
<hr>
<h2 id="2- 写作和写代码又是不一样的">2. 写作和写代码又是不一样的 </h2>
<h3 id="1- 写作和写代码的目的不同">（1）写作和写代码的目的不同 </h3>
<p>  我们写代码的目的都是相似的，那就是去解决某一个或者一类问题。写作的目的则宽泛得多，它可以用来叙事，用来说明，用来议论，用来描写，更可以用来抒情。相对写代码而言，写作的目的是如此丰富，这也正是它吸引我的原因。</p>
<h3 id="2- 写作能够表达感情 - 而写代码不能">（2）写作能够表达感情，而写代码不能 </h3>
<p>  我看过很多别人写的代码，可我从来没有从中感受到喜悦、悲伤、激动、以及爱情，我从这一行行代码中完全体会不到情感。但我却能从他人的文章中感受到这些。我喜欢那些富有情感的文章，并且真心喜欢那些文章的作者。或许，能够给文章赋予情感才是写作与写代码的最大区别，也应该是最重要的区别吧！</p>
<p>  我的写作之旅还在继续，我会坚持用那些最简单的文字去表达自己。同样，如果你是一名程序员，那么我也非常鼓励你能够开始写作，因为你会发现写作会给你带来很多好处，而这其中也包括编程能力的提升。</p>
<p><br/><br/></p>
<hr>
<blockquote>
<p> 读《程序员的自我修养》（陈逸鹤）有感，感触至深之处，摘录于此，若有不当之处，联系博主即可删文。</p>
</blockquote>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>程序人生</category>
      </categories>
      <tags>
        <tag>程序人生</tag>
      </tags>
  </entry>
  <entry>
    <title>后端技术栈：优秀的项目代码是怎么分层的</title>
    <url>/SongXJ01/2021/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88%EF%BC%9A%E4%BC%98%E7%A7%80%E7%9A%84%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81%E6%98%AF%E6%80%8E%E4%B9%88%E5%88%86%E5%B1%82%E7%9A%84/</url>
    <content><![CDATA[<h1>阿里手册是怎么约定的</h1>
<p><a href="https://kangroo.gitee.io/ajcg/#/">阿里巴巴 Java 开发手册（https://kangroo.gitee.io/ajcg/#/）</a></p>
<span id="more"></span>
<ul>
<li><strong>开放接口层</strong>：可直接封装 Service 方法暴露成 RPC 接口；通过 Web 封装成 http 接口；进行网关安全控制、流量控制等。</li>
<li><strong>终端显示层</strong>：各个端的模板渲染并执行显示的层。当前主要是 velocity 渲染，JS 渲染， JSP 渲染，移动端展示等。</li>
<li><strong>Web 层</strong>：主要是对访问控制进行转发，各类基本参数校验，或者不复用的业务简单处理等。</li>
<li><strong>Service 层</strong>：相对具体的业务逻辑服务层。</li>
<li><strong>Manager 层</strong>：通用业务处理层，它有如下特征：<br>
对第三方平台封装的层，预处理返回结果及转化异常信息；<br>
对 Service 层通用能力的下沉，如缓存方案、中间件通用处理；<br>
与 DAO 层交互，对多个 DAO 的组合复用。</li>
<li><strong>DAO 层</strong>：数据访问层，与底层 MySQL、Oracle、Hbase 等进行数据交互。</li>
<li><strong>外部接口或第三方平台</strong>：包括其它部门 RPC 开放接口，基础平台，其它公司的 HTTP 接口。</li>
</ul>
<p><img src="/images/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88_%E4%BC%98%E7%A7%80%E7%9A%84%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81%E6%98%AF%E6%80%8E%E4%B9%88%E5%88%86%E5%B1%82%E7%9A%84/%E5%BA%94%E7%94%A8%E5%88%86%E5%B1%82.png" alt="应用分层"></p>
<hr>
<h1>通常的项目结构</h1>
<p>就以当下非常火热的 Spring Boot 典型项目结构为例，创建出来的项目应该总体分为三大层：<br>
<img src="/images/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88_%E4%BC%98%E7%A7%80%E7%9A%84%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81%E6%98%AF%E6%80%8E%E4%B9%88%E5%88%86%E5%B1%82%E7%9A%84/%E5%85%B8%E5%9E%8B%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84.png" alt="典型项目结构"></p>
<ul>
<li>项目根目录<code>/src/main/java</code>：放置项目 Java 源代码</li>
<li>项目根目录<code>/src/main/resources</code>：放置项目静态资源和配置文件</li>
<li>项目根目录<code>/src/test/java</code>：放置项目测试用例代码</li>
</ul>
<p>而位于 <code>/src/main/java</code> 目录下的 Java 源代码的组织结构大家比较关心，这地方也只能给出一个通常典型的结构，毕竟不同项目和团队实践不一样，稍许有区别，但整体安排应该差不多。而且如果是多模块的项目的话，下面的结构应该只对应其中一个模块，其他模块的代码组织也大致差不多。</p>
<p><img src="/images/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88_%E4%BC%98%E7%A7%80%E7%9A%84%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81%E6%98%AF%E6%80%8E%E4%B9%88%E5%88%86%E5%B1%82%E7%9A%84/Java%E6%BA%90%E4%BB%A3%E7%A0%81%E7%9A%84%E7%BB%84%E7%BB%87%E7%BB%93%E6%9E%84.png" alt="Java 源代码的组织结构"></p>
<p>各个目录详细介绍：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">|_annotation：放置项目自定义注解</span><br><span class="line">|_aspect：放置切面代码</span><br><span class="line">|_config：放置配置类</span><br><span class="line">|_constant：放置常量、枚举等定义</span><br><span class="line">   |__constnt：存放常量定义</span><br><span class="line">   |__enums：存放枚举定义</span><br><span class="line">|_controller：放置控制器代码</span><br><span class="line">|_filter：放置一些过滤、拦截相关的代码</span><br><span class="line">|_mapper：放置数据访问层代码接口</span><br><span class="line">|_model：放置数据模型代码</span><br><span class="line">   |__entity：放置数据库实体对象定义</span><br><span class="line">   |__dto：存放数据传输对象定义</span><br><span class="line">   |__vo：存放显示层对象定义</span><br><span class="line">|_service：放置具体的业务逻辑代码（接口和实现分离）</span><br><span class="line">   |__intf：存放业务逻辑接口定义</span><br><span class="line">   |__impl：存放业务逻辑实际实现</span><br><span class="line">|_utils：放置工具类和辅助代码</span><br></pre></td></tr></table></figure>
<p>然后接下来 <code>/src/main/resources</code> 目录，里面主要存放静态配置文件和页面静态资源等东西：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">|_mapper：存放 mybatis 的 XML 映射文件（如果是 mybatis 项目）</span><br><span class="line">|_static：存放网页静态资源，比如下面的 js/css/img</span><br><span class="line">   |__js：</span><br><span class="line">   |__css：</span><br><span class="line">   |__img：</span><br><span class="line">   |__font：</span><br><span class="line">   |__等等</span><br><span class="line">|_template：存放网页模板，比如 thymeleaf/freemarker 模板等</span><br><span class="line">   |__header</span><br><span class="line">   |__sidebar</span><br><span class="line">   |__bottom</span><br><span class="line">   |__XXX.html 等等</span><br><span class="line">|_application.yml       基本配置文件</span><br><span class="line">|_application-dev.yml   开发环境配置文件</span><br><span class="line">|_application-test.yml  测试环境配置文件</span><br><span class="line">|_application-prod.yml  生产环境配置文件</span><br></pre></td></tr></table></figure>
<p>当然，这地方估计有一个很多人都会纠结的关于 DTO/VO/DO 等数据模型定义的区分。这在《阿里巴巴 Java 开发手册》中倒是做了一个所谓的严格区分，那本书上是这样去定义的：</p>
<ul>
<li><strong>DO（Data Object）</strong>：与数据库表结构一一对应，通过 DAO 层向上传输数据源对象。</li>
<li><strong>DTO（Data Transfer Object）</strong>：数据传输对象，Service 或 Manager 向外传输的对象。</li>
<li><strong>BO（Business Object）</strong>：业务对象。由 Service 层输出的封装业务逻辑的对象。</li>
<li><strong>AO（Application Object）</strong>：应用对象。在 Web 层与 Service 层之间抽象的复用对象模型，极为贴近展示层，复用度不高。</li>
<li><strong>VO（View Object）</strong>：显示层对象，通常是 Web 向模板渲染引擎层传输的对象。</li>
<li><strong>Query</strong>：数据查询对象，各层接收上层的查询请求。注意超过 2 个参数的查询封装，禁止使用 Map 类来传输。</li>
</ul>
<p>老实讲，看到这么多对象的定义，我也是很蒙的。实际项目开发时，我觉得没有必要刻意照搬去定义这么多层对象，这样后续做对象转换工作都能烦 skr 人。</p>
<p>出于简单起见，我个人觉得，只要保证业务逻辑层 Service 和数据库 DAO 层的操作对象严格划分出来，确保互相不渗透，不混用，问题应该就不大。比如在上面举例的这个项目的代码结构中，Service 层处理的对象都定义在了 DTO 包里，而 DAO 层处理的对象都放在了 Entity 包里了。</p>
<hr>
<h1>项目结构划分总结</h1>
<p><img src="/images/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88_%E4%BC%98%E7%A7%80%E7%9A%84%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81%E6%98%AF%E6%80%8E%E4%B9%88%E5%88%86%E5%B1%82%E7%9A%84/%E6%80%BB%E7%BB%93.png" alt="总结"></p>
<p>对应代码目录的流转逻辑就是：<br>
<img src="/images/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%A0%88_%E4%BC%98%E7%A7%80%E7%9A%84%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81%E6%98%AF%E6%80%8E%E4%B9%88%E5%88%86%E5%B1%82%E7%9A%84/%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91.png" alt="代码逻辑"></p>
<hr>
<h1>一些注意事项</h1>
<ol>
<li>Contorller 层参数传递建议不要使用 HashMap，建议使用数据模型定义；</li>
<li>Controller 层里可以做参数校验、异常抛出等操作，但建议不要放太多业务逻辑，业务逻辑尽量放到 Service 层代码中去做；</li>
<li>Service 层做实际业务逻辑，可以按照功能模块做好定义和区分，相互可以调用；</li>
<li>功能模块 Service 之间引用时，建议不要渗透到 DAO 层（或者 mapper 层），基于 Service 层进行调用和复用比较合理；</li>
<li>业务逻辑层 Service 和数据库 DAO 层的操作对象不要混用。 Controller 层的数据对象不要直接渗透到 DAO 层（或者 mapper 层）；同理数据表实体对象 Entity 也不要直接传到 Controller 层进行输出或展示。</li>
</ol>
<p><br/><br/></p>
<hr>
<p>参考：</p>
<ol>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzU4ODI1MjA3NQ==&amp;mid=2247504977&amp;idx=2&amp;sn=477e70d58d7d8eaa526fa1cdc06a0f8a&amp;chksm=fddd0295caaa8b8341d4f4b39ec60df44865d9251d6dd77f41dea6c2829d8e075a083ed21ebf&amp;mpshare=1&amp;scene=23&amp;srcid=0831lx40ax2sxK3Qm789P4bj&amp;sharer_sharetime=1630392151403&amp;sharer_shareid=90de416a9fd907a1fb3174e6a5a27440#rd">CodeSheep 的公众号</a></li>
<li><a href="https://kangroo.gitee.io/ajcg/#/">阿里巴巴 Java 开发手册</a></li>
</ol>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>后端技术栈</category>
      </categories>
      <tags>
        <tag>后端</tag>
        <tag>项目架构</tag>
      </tags>
  </entry>
  <entry>
    <title>程序人生：我为什么要编程？</title>
    <url>/SongXJ01/2021/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F%EF%BC%9A%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E7%BC%96%E7%A8%8B%EF%BC%9F/</url>
    <content><![CDATA[<blockquote>
<p><em> 我似乎又一次理解了编程的意义，但我明白未来的某一天，我一定还会问自己同样的问题 —— 为什么要编程，希望到那个时候自己还能是那个热爱编程，有着一颗匠心的“技匠”……</em></p>
</blockquote>
<span id="more"></span>
<hr>
<p>  编程的意义是什么，我又为什么要编程呢？这是一个时不时会浮现在我脑海中的问题，它来得并不频繁，但每次都伴随着我对自己职业生涯或人生自标的质疑而产生，令我感到些许困惑和不安。在这十几年的职业生涯中，我也似乎总能在每个阶段为自己找到一个继续热爱编程的理由，直到它已无法解笞疑惑的再一次产生。就这样一次又一次的循环在复，我似乎渐渐埋解了编程的意义……</p>
<hr>
<h1>1. 编程是一项技能 </h1>
<p>  回想大学毕业刚成为一名程序员时，自己对技术是如此狂热，我不断地购买各类技术书籍，几乎所有的业余时间也都用来钻研技术，提高目己的编程能力。我也因此很快成了同一批入职新人中，编码效率和质量最突出的一个。而在那段时间里所做的技术积累，也成了我日后工作的坚实基础，编程作为一项技能已经深深地嵌入到了我的身体里。</p>
<p>  即使到了今天，我仍非常怀念那段心无旁骛，一心钻研技术的日子。我为能在工作中写出的每一行优秀代码而兴奋，更为每一天能在技术上取得的点滴进步而喜悦，一切都是那么单纯，编程的意义对于那时的我来说就在于技术本身。</p>
<hr>
<h1>2. 编程是去解决问题 </h1>
<p>  “能力越大，责任也也大”，电影《蜘蛛侠》中的这句经典台词同样适用于程序员的职业生涯。随着技术能力的提升及在工作中逐渐获得的认可，我的职位也由原来的初级程序员变为了资深开发工程师，以及后来的架构师。相应的，除了编程之外，我工作中的很大一部分时间需要用来与用户进行沟通，并分析他们提出的需求。对于我来说，这个角色转换的过程是艰难甚至有些痛苦的。我不得不用自己最薄弱的沟通技能去和用户打交道，更要命的是我所习惯使用的那些技术语言有时很难让他们理解。</p>
<p>  我很快意识到自己已不再是那个只需被动接受任务安排，并将自己的编程工作完成好就万事大吉的程序员。除了技术之外，我更需要能够突破程序员思维，去发现用户需求背后所隐含的真正问题。我比以前变得更加务实，不再刻意追求技术的高深，足尽可能从问题本身出发，选择最有效的技术手段去解决它。</p>
<p>  此时，编程的意义也发生了改变，它已不再局限于技术本身，而成了解决问题的理想工具。</p>
<hr>
<h1>3. 编程是在表达，也是在创作 </h1>
<p>  就这样又过了几年，当 “为什么要编程?” 这个问题再次摆在我的面前时，自己也已过了而立之年。对于大多数中国程序员来说，这个年纪已经算是高龄，甚至还有很多人会认为 30 岁还在编程，一定是混得不够好吧。当然，对于这些质疑我也总是一笑了之。其实，在此之前我也有过很多转型的机会，比如，去业务部门，或是转为管理，等等。但最终我还是选择留在了技术岗位上，因为我觉得编程仍是我最喜欢的，或许也是我唯一擅长的吧。</p>
<p>  而这个时期也成了我整个程序员生涯的黄金期，我写了公司的核心框架，以及一些重要业务系统的核心算法。我很享受这段时光，因为我已几乎感受不到那些技术上的牵绊，我更像雕刻师使用手中的刻刀一般，自如地运用编程来实现那些我认为优秀的东西。</p>
<p>  编程对于我来说已不再是一项技能或是工具，我是在通过编程进行着自我表达与创作，这种感受带给了我极大的自由度，而我也从中感受到了前所未有的喜悦与乐趣。</p>
<hr>
<h1>4. 编程是为了留下痕迹 </h1>
<p>  最终我还是走上了管理岗位，这里面存在很多个人很难左右的因素（包括大环境、家庭、经济等等）。但我仍然更乐意被大家称为程序员或者“老”程序员，就像在我博客的自我介绍中，总是把全栈工程师放在那些“头衔”的第一位，并且，我还在利用业余时间做自己喜欢的开源或个人项目。当再次问自己 <code>“为什么要编程”</code> 时，这一次，我获得了与以往不一样的感悟：或许我们编程是为了能够留下一些痕迹吧。</p>
<p>  公司里最近都在为一个老系统的升级问题发愁。这个系统已经运行了将近 20 年时间了，为了升级系统，大家不得不深入到这个系统的梃采中，去读底层代码。我们读到了一位已经退休的美国同事 Bill 所实现的数据库连接池代码。在那个时候 Java 刚开始流行，还没有像 Spring 这样的框架，或是如 Hibernate、MyBatis 这样标准的持久层实现，这个系统中所有的数据库连接池及核心持久层代码都是由这位美国同事写的，这些代码让整个系统稳定运行了将近 20 年，大家都不禁为他高超的技术水平发出由衷的赞叹。</p>
<p>  我还认识一位从事证券交易软件研发的公司 CTO，看年纪他应该已经接近 50 岁了，但他仍然在亲自编写那些证券交易的核心代码。当我问他为什么到了这个年龄和职位，还要坚持写代码时，他告诉我，当他看到自己所写的代码每天在支撑着千亿级的证券交易时，他感到非常兴奋和自豪，并不断希望能够通过自己的努力将它做得更好。</p>
<p>  我的这个美国同事不会听到大家为他十几年前所写代码发出的赞叹，股民们也不会知道这位 CTO 所写的代码正在支撑着他们的日常交易。那些优秀的代码是他们留下的痕迹，虽然我们不能确定这些痕迹能够保留多久，或许几年，或许更短，但它们都曾经在我们的日常生活中产生了重要的价值，并且新的未来也将构建在这些痕迹的基础之上，我想这可能才是编程的意义所在吧。</p>
<p>  我似乎又一次理解了编程的意义，但我明白未来的某一天，我一定还会问自己同样的问题 —— 为什么要编程，希望到那个时候自己还能是那个热爱编程，有着一颗匠心的“技匠”……</p>
<p><br/><br/></p>
<hr>
<blockquote>
<p> 读《程序员的自我修养》（陈逸鹤）有感，感触至深之处，摘录于此，若有不当之处，联系博主即可删文。</p>
</blockquote>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>程序人生</category>
      </categories>
      <tags>
        <tag>程序人生</tag>
      </tags>
  </entry>
  <entry>
    <title>操作系统原理：C 语言 threads 多线程 实现单机聊天系统</title>
    <url>/SongXJ01/2020/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86%EF%BC%9AC%E8%AF%AD%E8%A8%80%20threads%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%AE%9E%E7%8E%B0%E5%8D%95%E6%9C%BA%E8%81%8A%E5%A4%A9%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>  这个实验会建立一个全双工系统（Full-Duplex），实现两个管道同时收发消息。在程序中会涉及到 3 个文件，2 个管道，2 个进程，4 个线程。线程之间的拓扑图如下：</p>
<span id="more"></span>
<p><img src="/SongXJ01/images/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86_C%E8%AF%AD%E8%A8%80threads%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%AE%9E%E7%8E%B0%E5%8D%95%E6%9C%BA%E8%81%8A%E5%A4%A9%E7%B3%BB%E7%BB%9F/%E9%80%9A%E4%BF%A1%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="通信示意图"></p>
<p>【完整代码附在文章最后】</p>
<hr>
<h2 id="创建连通管道">创建连通管道</h2>
<p>  首先创建 <code>fifo_create.c</code> 文件来事先创建 2 个管道，分别为 A 发送 B 接收、A 接收 B 发送。使用 <code>mkfifo()</code> 语句创建管道，分别标识为“A2B”、“B2A”。<br>
访问权限为 <code>0644</code>，第一位 0 不算，从左至右三个数字分别代表<code>rw-</code> <code>r--</code> <code>r--</code> 对应转化为的二进制 <code>110</code> <code>100</code> <code>100</code>。十进制第 1 个数字代表<strong> 文件所有者 </strong> 的权限，十进制第 2 个数字代表 <strong> 同组用户 </strong> 的权限，十进制第 3 个数字代表 <strong> 其他用户 </strong> 的权限。<br>
之后验证 <code>mkfifo()</code> 的返回值，验证管道是否创建成功。如果创建成功，当前目录下回多出来“A2B”、“B2A”两个文件。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> A2B = mkfifo(<span class="string">&quot;A2B&quot;</span>, <span class="number">0644</span>);</span><br><span class="line">	<span class="type">int</span> B2A = mkfifo(<span class="string">&quot;B2A&quot;</span>, <span class="number">0644</span>);</span><br><span class="line">	<span class="keyword">if</span> (A2B == <span class="number">-1</span>)	</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Falled to create the FIFO of A2B!\n&quot;</span>);</span><br><span class="line">	<span class="keyword">if</span> (B2A == <span class="number">-1</span>)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Falled to create the FIFO of B2A!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<hr>
<h2 id="创建 2 个进程 4 个线程">创建 2 个进程 4 个线程</h2>
<h3 id="连接标记符">连接标记符</h3>
<p>  创建 <code>A.c</code> 和<code>B.c</code>两个文件，在两个文件中均创建 <code>send</code> 和<code>receive</code>两个线程。因为两个文件类似，这里以 <code>A.c</code> 为例，<code>B.c</code>同理。<br>
在 <code>A.c</code> 中首先定义一个全局变量，用来标记两个管道是否连接，如果均连接成功，则<code>flag=1</code>，有任意一个管道断开则<code>flag=0</code> 。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 全局变量，标记是否连接，两个管道中有一个断开，则 flag 变为 0</span></span><br><span class="line"><span class="type">int</span> flag = <span class="number">1</span>;	</span><br></pre></td></tr></table></figure>
<h3 id="发送消息">发送消息</h3>
<p>  通过 <code>send</code> 函数实现发送消息。在管道连通之前，即在 <code>open</code> 语句等待管道连通。这里 <code>open</code> 语句使用只写的方式进行打开，如果管道连接成功，程序继续向下运行。<br>
定义一个循环进行消息的多次发送，使用 <code>fgets()</code> 语句从指定的标准输入流 <code>stdin</code> 中读取一行，并把它存储在 <code>buf</code> 所指向的字符串内，多余的长度使用 <code>\0</code> 填充，而且 <code>fgets()</code> 语句包含换行符，所以在之后的 <code>receive</code> 函数中打印的时候不需要再添加换行符。<br>
之后使用 <code>write</code> 语句将储存在 <code>buf</code> 中的全部字符串写入到刚才打开的 <code>A2B</code> 管道中。然后进行判断，如果刚才输入的是“88”则将标识符 <code>flag</code> 变成 0，并打印下线提示，break 出循环。如果输入的不是“88”，则在命令行打印<code>[A]:</code>，等待下一次输入。<br>
最后关闭管道，退出线程。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//A 给 B 发送消息</span></span><br><span class="line"><span class="type">void</span>* <span class="title function_">send</span><span class="params">()</span> &#123;	</span><br><span class="line">	<span class="type">char</span> buf[<span class="number">1024</span>];</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Waiting...\n&quot;</span>);</span><br><span class="line">	<span class="type">int</span> fd = open(<span class="string">&quot;A2B&quot;</span>, O_WRONLY);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Connected!\n===============================================\n&quot;</span>);</span><br><span class="line">	<span class="keyword">if</span> (fd == <span class="number">-1</span>)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Open fifo error!\n&quot;</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;[A]:&quot;</span>);</span><br><span class="line">	<span class="keyword">while</span> (flag == <span class="number">1</span>)&#123;</span><br><span class="line">		fgets(buf, <span class="number">1023</span>, <span class="built_in">stdin</span>);</span><br><span class="line">		write(fd, buf, <span class="number">1023</span>);</span><br><span class="line">		<span class="keyword">if</span> (buf[<span class="number">0</span>] == <span class="string">&#x27;8&#x27;</span> &amp;&amp; buf[<span class="number">0</span>] == <span class="string">&#x27;8&#x27;</span>) &#123;</span><br><span class="line">			flag = <span class="number">0</span>;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;You have been offline.\n&quot;</span>);</span><br><span class="line">			fflush(<span class="built_in">stdout</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">1</span>) </span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;[A]:&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	close(fd);</span><br><span class="line">	pthread_exit(<span class="literal">NULL</span>);	<span class="comment">// 退出线程</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="接收消息">接收消息</h3>
<p>  通过 <code>receive</code> 函数实现接收消息的功能。在管道连通之前，即 <code>open</code> 语句等待管道连通。这里 <code>open</code> 语句使用只读的方式进行打开，如果管道连接成功，程序继续向下运行。因为在本实验中两个通道一定是同时连接的，在 <code>send</code> 函数中已经打印连接成功的提示，所以在 <code>receive</code> 中就没有重复打印。<br>
  定义一个循环进行消息的多次接收，使用 <code>read</code> 语句将管道中的字符串全部储存在 <code>buf</code> 中，之后在末尾加上一个<code>\0</code>，表示字符串的结束。<br>
  然后进行判断，如果刚才接收到的是“88”则将标识符 <code>flag</code> 变成 0，打印对方的最后一句话，同时打印对方已经下线的提示，break 出循环。如果输入的不是“88”，则在命令行打印对方输入的内容后继续打印<code>[A]:</code>，等待下一次输入。<br>
  在打印接收到的对方消息时需要先在前面加上 4 个退格符，删除之前输入的 <code>[A]:</code> 这四个字符。另外要使用 <code>fflush(stdout);</code> 语句强制刷新标准输出缓冲区。<br>
  最后关闭管道，退出线程。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//A 接收 B 发来的消息</span></span><br><span class="line"><span class="type">void</span>* <span class="title function_">receive</span><span class="params">()</span> &#123;	</span><br><span class="line">	<span class="type">char</span> buf[<span class="number">1024</span>];</span><br><span class="line">	<span class="type">int</span> fd = open(<span class="string">&quot;B2A&quot;</span>, O_RDONLY);</span><br><span class="line">	<span class="keyword">if</span> (fd == <span class="number">-1</span>)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Open fifo error!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (flag == <span class="number">1</span>)&#123;</span><br><span class="line">		read(fd, buf, <span class="number">1023</span>);</span><br><span class="line">		<span class="comment">// 如果对方发“88”则断开连接，退出进程</span></span><br><span class="line">		<span class="keyword">if</span> (buf[<span class="number">0</span>] == <span class="string">&#x27;8&#x27;</span> &amp;&amp; buf[<span class="number">0</span>] == <span class="string">&#x27;8&#x27;</span>) &#123;</span><br><span class="line">			flag = <span class="number">0</span>;</span><br><span class="line">			<span class="built_in">memset</span>(buf + <span class="number">1023</span>, <span class="string">&#x27;\0&#x27;</span>, <span class="number">1</span>);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;\b\b\b\b[B]:%s&quot;</span>, buf);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Person B have been offline.\n&quot;</span>);</span><br><span class="line">			fflush(<span class="built_in">stdout</span>);	<span class="comment">// 强制刷新输出缓冲区</span></span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(flag == <span class="number">1</span>)&#123;</span><br><span class="line">			<span class="built_in">memset</span>(buf + <span class="number">1023</span>, <span class="string">&#x27;\0&#x27;</span>, <span class="number">1</span>);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;\b\b\b\b[B]:%s&quot;</span>, buf);<span class="comment">// 删除之前输入的[X]: 这四个字符</span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;[A]:&quot;</span>);</span><br><span class="line">			fflush(<span class="built_in">stdout</span>);	<span class="comment">// 强制刷新输出缓冲区</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	close(fd);</span><br><span class="line">	pthread_exit(<span class="literal">NULL</span>);	<span class="comment">// 退出线程</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="双线程">双线程</h3>
<p>  在主函数中建立两个线程，并分别调用 <code>send</code> 和<code>receive</code>两个函数，并等待它们退出。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">pthread_t</span> tid1, tid2;	<span class="comment">// 线程 ID</span></span><br><span class="line">	<span class="type">pthread_attr_t</span> attr;	<span class="comment">// 线程属性</span></span><br><span class="line">	pthread_attr_init(&amp;attr); <span class="comment">// 设置默认线程属性</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 执行两个线程分别进行收发</span></span><br><span class="line">	pthread_create(&amp;tid1, &amp;attr, send, <span class="literal">NULL</span>);</span><br><span class="line">	pthread_create(&amp;tid2, &amp;attr, receive, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 等待两个线程</span></span><br><span class="line">	pthread_join(tid1, <span class="literal">NULL</span>);</span><br><span class="line">	pthread_join(tid2, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<hr>
<h2 id="程序运行过程">程序运行过程</h2>
<ol>
<li>
<p>等待连接<br>
<img src="/SongXJ01/images/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86_C%E8%AF%AD%E8%A8%80threads%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%AE%9E%E7%8E%B0%E5%8D%95%E6%9C%BA%E8%81%8A%E5%A4%A9%E7%B3%BB%E7%BB%9F/%E7%AD%89%E5%BE%85%E8%BF%9E%E6%8E%A5.png" alt="等待连接"></p>
</li>
<li>
<p>管道连接成功<br>
<img src="/SongXJ01/images/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86_C%E8%AF%AD%E8%A8%80threads%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%AE%9E%E7%8E%B0%E5%8D%95%E6%9C%BA%E8%81%8A%E5%A4%A9%E7%B3%BB%E7%BB%9F/%E7%AE%A1%E9%81%93%E8%BF%9E%E6%8E%A5%E6%88%90%E5%8A%9F.png" alt="管道连接成功"></p>
</li>
<li>
<p>进行全工聊天<br>
<img src="/SongXJ01/images/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86_C%E8%AF%AD%E8%A8%80threads%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%AE%9E%E7%8E%B0%E5%8D%95%E6%9C%BA%E8%81%8A%E5%A4%A9%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E8%A1%8C%E5%85%A8%E5%B7%A5%E8%81%8A%E5%A4%A9.png" alt="进行全工聊天"></p>
</li>
<li>
<p>聊天结束<br>
<img src="/SongXJ01/images/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86_C%E8%AF%AD%E8%A8%80threads%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%AE%9E%E7%8E%B0%E5%8D%95%E6%9C%BA%E8%81%8A%E5%A4%A9%E7%B3%BB%E7%BB%9F/%E8%81%8A%E5%A4%A9%E7%BB%93%E6%9D%9F.png" alt="聊天结束"></p>
</li>
</ol>
<hr>
<h2 id="总结">总结</h2>
<p>  本次实验结合了 <strong> 多线程 </strong> 和<strong>管道连接 </strong> 的知识，实现了一个简单的单机聊天功能。在本次实验中有以下几个需要注意的地方：</p>
<h3 id="fgets- 的特点：">fgets() 的特点：</h3>
<ul>
<li><code>gets()</code>和 <code>fgets()</code> 都可以读取空格。</li>
<li><code>gets()</code>读取一行，不能设定读取容量，这一行有多少便读取多少，有可能会发生内存溢出。然而 <code>fgets()</code> 有三个参数，它是从 stream 流中读取 size 个字符存储到字符指针变量 s 所指向的内存空间。它的返回值是一个指针，指向字符串中第一个字符的地址。</li>
<li>在本实验中 <code>fgets() </code> 函数的读取大小均为 1023，基本上满足了普通聊天的需要。<code>fgets()</code> 函数的 size 参数如果小于字符串的长度，那么字符串将会被截取；如果 size 大于字符串的长度则多余的部分系统会自动用 <code>\0</code> 填充。</li>
<li><code>fgets() </code>函数会读取换行符，所以在 receive 接收后，打印时不需要再添加换行符。</li>
</ul>
<h3 id="fflush- 强制刷新缓冲区：">fflush()强制刷新缓冲区：</h3>
<p>  在本实验中使用 <code>fflush()</code> 和<code>stdout</code>、<code>stdin</code>结合，可以将标准输入输出流中的数据强制刷新在命令行中。特别是在打印完接收的数据后，再次打印 <code>[A]:</code> 等待输入的字符串时，如果不进行强制刷新，这个字符串不会立刻显示在命令行中，而是跟随下一次的输入或输出结果同时显示。</p>
<h3 id="b- 退格：">“\b”退格：</h3>
<p>  因为每次打印完聊天消息后，都需要继续打印 <code>[A]:</code> 等待输入，而如果未进行输入而是接收了对方的消息，那么<code>[A]:</code> 这个字符串就多余了，需要使用 4 个 <code>\b</code> 删除。</p>
<hr>
<h2 id="实验的不足之处">实验的不足之处</h2>
<ul>
<li>本实验在判断字符串是否为“88”时，使用的方法比较笨，同时比较两个字符完成的，其实可以使用 <code>strcmp</code> 函数直接对两个字符串进行比较。</li>
<li>本实验的最后还有一个小 bug，就是在 <code>A</code> 输入“88”之后，两个程序不能立刻退出，而是需要在 <code>B</code> 上输入一个回车后才能退出，<code>B</code>对 <code>A</code> 发送消息情况同样。这个 bug 我试了很多方法都不能很好的解决，希望路过的大佬提供建议。</li>
</ul>
<hr>
<h2 id="代码">代码</h2>
<h3 id="fifo-create-c">fifo_create.c</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> A2B = mkfifo(<span class="string">&quot;A2B&quot;</span>, <span class="number">0644</span>);</span><br><span class="line">	<span class="type">int</span> B2A = mkfifo(<span class="string">&quot;B2A&quot;</span>, <span class="number">0644</span>);</span><br><span class="line">	<span class="keyword">if</span> (A2B == <span class="number">-1</span>)	</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Falled to create the FIFO of A2B!\n&quot;</span>);</span><br><span class="line">	<span class="keyword">if</span> (B2A == <span class="number">-1</span>)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Falled to create the FIFO of B2A!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="a-c">A.c</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pthread.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局变量，标记是否连接，两个管道中有一个断开，则 flag 变为 0</span></span><br><span class="line"><span class="type">int</span> flag = <span class="number">1</span>;	</span><br><span class="line"></span><br><span class="line"><span class="comment">//A 给 B 发送消息</span></span><br><span class="line"><span class="type">void</span>* <span class="title function_">send</span><span class="params">()</span> &#123;	</span><br><span class="line">	<span class="type">char</span> buf[<span class="number">1024</span>];</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Waiting...\n&quot;</span>);</span><br><span class="line">	<span class="type">int</span> fd = open(<span class="string">&quot;A2B&quot;</span>, O_WRONLY);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Connected!\n===============================================\n&quot;</span>);</span><br><span class="line">	<span class="keyword">if</span> (fd == <span class="number">-1</span>)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Open fifo error!\n&quot;</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;[A]:&quot;</span>);</span><br><span class="line">	<span class="keyword">while</span> (flag == <span class="number">1</span>)&#123;</span><br><span class="line">		fgets(buf, <span class="number">1023</span>, <span class="built_in">stdin</span>);</span><br><span class="line">		write(fd, buf, <span class="number">1023</span>);</span><br><span class="line">		<span class="keyword">if</span> (buf[<span class="number">0</span>] == <span class="string">&#x27;8&#x27;</span> &amp;&amp; buf[<span class="number">0</span>] == <span class="string">&#x27;8&#x27;</span>) &#123;</span><br><span class="line">			flag = <span class="number">0</span>;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;You have been offline.\n&quot;</span>);</span><br><span class="line">			fflush(<span class="built_in">stdout</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">1</span>) </span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;[A]:&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	close(fd);</span><br><span class="line">	pthread_exit(<span class="literal">NULL</span>);	<span class="comment">// 退出线程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//A 接收 B 发来的消息</span></span><br><span class="line"><span class="type">void</span>* <span class="title function_">receive</span><span class="params">()</span> &#123;	</span><br><span class="line">	<span class="type">char</span> buf[<span class="number">1024</span>];</span><br><span class="line">	<span class="type">int</span> fd = open(<span class="string">&quot;B2A&quot;</span>, O_RDONLY);</span><br><span class="line">	<span class="keyword">if</span> (fd == <span class="number">-1</span>)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Open fifo error!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (flag == <span class="number">1</span>)&#123;</span><br><span class="line">		read(fd, buf, <span class="number">1023</span>);</span><br><span class="line">		<span class="comment">// 如果对方发“88”则断开连接，退出进程</span></span><br><span class="line">		<span class="keyword">if</span> (buf[<span class="number">0</span>] == <span class="string">&#x27;8&#x27;</span> &amp;&amp; buf[<span class="number">0</span>] == <span class="string">&#x27;8&#x27;</span>) &#123;</span><br><span class="line">			flag = <span class="number">0</span>;</span><br><span class="line">			<span class="built_in">memset</span>(buf + <span class="number">1023</span>, <span class="string">&#x27;\0&#x27;</span>, <span class="number">1</span>);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;\b\b\b\b[B]:%s&quot;</span>, buf);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Person B have been offline.\n&quot;</span>);</span><br><span class="line">			fflush(<span class="built_in">stdout</span>);	<span class="comment">// 强制刷新输出缓冲区</span></span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(flag == <span class="number">1</span>)&#123;</span><br><span class="line">			<span class="built_in">memset</span>(buf + <span class="number">1023</span>, <span class="string">&#x27;\0&#x27;</span>, <span class="number">1</span>);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;\b\b\b\b[B]:%s&quot;</span>, buf);<span class="comment">// 删除之前输入的[X]: 这四个字符</span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;[A]:&quot;</span>);</span><br><span class="line">			fflush(<span class="built_in">stdout</span>);	<span class="comment">// 强制刷新输出缓冲区</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	close(fd);</span><br><span class="line">	pthread_exit(<span class="literal">NULL</span>);	<span class="comment">// 退出线程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">pthread_t</span> tid1, tid2;	<span class="comment">// 线程 ID</span></span><br><span class="line">	<span class="type">pthread_attr_t</span> attr;	<span class="comment">// 线程属性</span></span><br><span class="line">	pthread_attr_init(&amp;attr); <span class="comment">// 设置默认线程属性</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 执行两个线程分别进行收发</span></span><br><span class="line">	pthread_create(&amp;tid1, &amp;attr, send, <span class="literal">NULL</span>);</span><br><span class="line">	pthread_create(&amp;tid2, &amp;attr, receive, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 等待两个线程</span></span><br><span class="line">	pthread_join(tid1, <span class="literal">NULL</span>);</span><br><span class="line">	pthread_join(tid2, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="b-c">B.c</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;pthread.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//B 给 A 发送消息</span></span><br><span class="line"><span class="type">void</span>* <span class="title function_">send</span><span class="params">()</span> &#123;	</span><br><span class="line">	<span class="type">char</span> buf[<span class="number">1024</span>];</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Waiting...\n&quot;</span>);</span><br><span class="line">	<span class="type">int</span> fd = open(<span class="string">&quot;B2A&quot;</span>, O_WRONLY);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Connected!\n===============================================\n&quot;</span>);</span><br><span class="line">	<span class="keyword">if</span> (fd == <span class="number">-1</span>)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Open fifo error!\n&quot;</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;[B]:&quot;</span>);</span><br><span class="line">	<span class="keyword">while</span> (flag == <span class="number">1</span>)&#123;</span><br><span class="line">		fgets(buf, <span class="number">1023</span>, <span class="built_in">stdin</span>);		</span><br><span class="line">		write(fd, buf, <span class="number">1023</span>);</span><br><span class="line">		<span class="keyword">if</span> (buf[<span class="number">0</span>] == <span class="string">&#x27;8&#x27;</span> &amp;&amp; buf[<span class="number">0</span>] == <span class="string">&#x27;8&#x27;</span>) &#123;</span><br><span class="line">			flag = <span class="number">0</span>;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;You have been offline.\n&quot;</span>);</span><br><span class="line">			fflush(<span class="built_in">stdout</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">1</span>) </span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;[B]:&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	close(fd);</span><br><span class="line">	pthread_exit(<span class="literal">NULL</span>);	<span class="comment">// 退出线程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// B 接收 A 发来的消息</span></span><br><span class="line"><span class="type">void</span>* <span class="title function_">receive</span><span class="params">()</span> &#123;	</span><br><span class="line">	<span class="type">char</span> buf[<span class="number">1024</span>];</span><br><span class="line">	<span class="type">int</span> fd = open(<span class="string">&quot;A2B&quot;</span>, O_RDONLY);</span><br><span class="line">	<span class="keyword">if</span> (fd == <span class="number">-1</span>)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Open fifo error!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">		read(fd, buf, <span class="number">1023</span>);</span><br><span class="line">		<span class="keyword">if</span> (buf[<span class="number">0</span>] == <span class="string">&#x27;8&#x27;</span> &amp;&amp; buf[<span class="number">0</span>] == <span class="string">&#x27;8&#x27;</span>) &#123;</span><br><span class="line">			flag = <span class="number">0</span>;</span><br><span class="line">			<span class="built_in">memset</span>(buf + <span class="number">1023</span>, <span class="string">&#x27;\0&#x27;</span>, <span class="number">1</span>);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;\b\b\b\b[A]:%s&quot;</span>, buf);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Person A have been offline.\n&quot;</span>);</span><br><span class="line">			fflush(<span class="built_in">stdout</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">			<span class="built_in">memset</span>(buf + <span class="number">1023</span>, <span class="string">&#x27;\0&#x27;</span>, <span class="number">1</span>);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;\b\b\b\b[A]:%s&quot;</span>, buf);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;[B]:&quot;</span>);</span><br><span class="line">			fflush(<span class="built_in">stdout</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	close(fd);</span><br><span class="line">	pthread_exit(<span class="literal">NULL</span>);	<span class="comment">// 退出线程</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">pthread_t</span> tid1, tid2;	<span class="comment">// 线程 ID</span></span><br><span class="line">	<span class="type">pthread_attr_t</span> attr;	<span class="comment">// 线程属性</span></span><br><span class="line">	pthread_attr_init(&amp;attr); <span class="comment">// 设置默认线程属性</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 执行两个线程</span></span><br><span class="line">	pthread_create(&amp;tid1, &amp;attr, send, <span class="literal">NULL</span>);</span><br><span class="line">	pthread_create(&amp;tid2, &amp;attr, receive, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 等待两个线程</span></span><br><span class="line">	pthread_join(tid1, <span class="literal">NULL</span>);</span><br><span class="line">	pthread_join(tid2, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>操作系统原理</category>
      </categories>
      <tags>
        <tag>Pipe管道</tag>
        <tag>单机聊天系统</tag>
        <tag>C语言</tag>
        <tag>多线程</tag>
      </tags>
  </entry>
  <entry>
    <title>算法题：LeetCode (1094) 拼车【一题搞懂差分数组】</title>
    <url>/SongXJ01/2022/%E7%AE%97%E6%B3%95%E9%A2%98%EF%BC%9ALeetCode%20(1094)%20%E6%8B%BC%E8%BD%A6%E3%80%90%E4%B8%80%E9%A2%98%E6%90%9E%E6%87%82%E5%B7%AE%E5%88%86%E6%95%B0%E7%BB%84%E3%80%91/</url>
    <content><![CDATA[<p>  车上最初有 <code>capacity</code> 个空座位，车只能向一个方向行驶，给定整数 <code>capacity</code> 和一个数组 <code>trips</code> ,  <code>trip[i] = [numPassengersi, fromi, toi]</code> 表示第 <code>i</code> 次旅行有 <code>numPassengersi</code> 乘客，接他们和放他们的位置分别是 <code>fromi</code> 和 <code>toi</code> 。这些位置是从汽车的初始位置向东的公里数。</p>
<span id="more"></span>
<p>当且仅当你可以在所有给定的行程中接送所有乘客时，返回 <code>true</code>，否则请返回 <code>false</code>。</p>
<blockquote>
<p>来源：力扣（LeetCode）<br>
链接：<a href="https://leetcode.cn/problems/car-pooling">https://leetcode.cn/problems/car-pooling</a></p>
</blockquote>
<h3 id="示例">示例</h3>
<ul>
<li>示例 1：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">输入：trips = [[2,1,5],[3,3,7]], capacity = 4</span><br><span class="line">输出：false</span><br></pre></td></tr></table></figure>
<ul>
<li>示例 2：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">输入：trips = [[2,1,5],[3,3,7]], capacity = 5</span><br><span class="line">输出：true</span><br></pre></td></tr></table></figure>
<p><br /> <br /></p>
<h2 id="解题思路">解题思路</h2>
<p><strong>差分数组</strong>：差分数组主要的适用场景是对原始数组进行频繁的区间增减操作，这个时候适用差分数组能够快速的完成，同时能够快速获得更新后的数组各个位置的值。</p>
<p>以 <code>trips = [[2,1,5],[3,3,7]], capacity = 4</code> 为例，数组变化如下：<br>
<img src="/images/%E7%AE%97%E6%B3%95%E9%A2%98_%E6%8B%BC%E8%BD%A6/%E4%B9%98%E5%AE%A2%E6%83%85%E5%86%B5.png" alt="乘客情况"></p>
<p>使用差分数组修改上图所示的数组，结果如下：<br>
<img src="/images/%E7%AE%97%E6%B3%95%E9%A2%98_%E6%8B%BC%E8%BD%A6/%E4%BF%AE%E6%94%B9%E4%B8%BA%E5%B7%AE%E5%88%86%E6%95%B0%E7%BB%84.png" alt="修改为差分数组"></p>
<p><br /> <br /></p>
<h2 id="代码 -java">代码（Java）</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LeetCode_1094_carPooling</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">carPooling</span><span class="params">(<span class="type">int</span>[][] trips, <span class="type">int</span> capacity)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] diff = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1001</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] t : trips) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">passengers</span> <span class="operator">=</span> t[<span class="number">0</span>], from = t[<span class="number">1</span>], to = t[<span class="number">2</span>];</span><br><span class="line">            diff[from] += passengers;</span><br><span class="line">            diff[to] -= passengers;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">0</span>;    <span class="comment">// 差分求和</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i : diff) &#123;</span><br><span class="line">            num += i;</span><br><span class="line">            <span class="keyword">if</span> (num &gt; capacity) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>算法题</category>
      </categories>
      <tags>
        <tag>算法题</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>算法分析与设计：动态规划（空间复杂度优化）</title>
    <url>/SongXJ01/2021/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1%EF%BC%9A%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%88%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E4%BC%98%E5%8C%96%EF%BC%89/</url>
    <content><![CDATA[<h2 id="背包问题">背包问题</h2>
<p>  由于高数巨养的喵星人太傲娇了，要天天吃新鲜猫粮而且还经常欺负高数巨，所以高数巨决定买几条哈士奇尝尝鲜。这天高数巨来到了二手狗市场买哈士奇，高数巨看完了所有的哈士奇，记下了每条哈士奇的价格，并根据对它们的好感程度给它们每只都赋予了一个萌值。高数现在手里有 <code>X</code> 元，她想通过购买若干条哈士奇来获得尽可能多的萌值。现在给定高数巨手里的钱 <code>X</code> 以及 <code>N</code> 条哈士奇的价格和萌值，求高数巨最多可获得多少萌值。</p>
<span id="more"></span>
<h4 id="input">Input</h4>
<p>  多组输入。对于每组输入，第一行有两个整数 <code>N,X(1 \leq N \leq 100，1 \leq X\leq1000)</code>，分别表示哈士奇的数量和高数巨的钱数。接下来的 <code>N</code> 行每行有两个整数 <code>P_i</code>，<code>M_i (1 \leq Pi,Mi \leq 100)</code>，分别表示第 <code>i</code> 条哈士奇的价格和萌值。</p>
<h4 id="output">Output</h4>
<p>对于每组数据，输出一个整数，表示高数巨最多可以获得的萌值，每组输出占一行。</p>
<h4 id="sample-input">Sample Input</h4>
<p>2 100 50 20 60 40 3 100 20 55 20 35 90 95 1 10 20 50</p>
<h4 id="sample-output">Sample Output</h4>
<p>40 95 0</p>
<h4 id="实例代码">实例代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, v;</span><br><span class="line">    <span class="type">int</span> w[<span class="number">1001</span>], p[<span class="number">1001</span>];</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;v)) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="comment">// w 重量  | p 价值</span></span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;w[i], &amp;p[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 重新初始化最优值结果数组</span></span><br><span class="line">        <span class="type">int</span> res[<span class="number">1001</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123; <span class="comment">// 存储的物品个数</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = v; k &gt;= w[i]; k--) &#123; <span class="comment">// 从所需要的重量到当前重量</span></span><br><span class="line">                res[k] = <span class="built_in">max</span>(res[k], res[k - w[i]] + p[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, res[v]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="最少硬币问题">最少硬币问题</h2>
<h4 id="problem-description">Problem Description</h4>
<p>  设有 <code>n</code> 种不同面值的硬币，各硬币的面值存于数组 <code>T[1:n]</code> 中。现要用这些面值的硬币来找钱。可以使用的各种面值的硬币个数存于数组 <code>Coins[1:n]</code> 中。 对任意钱数 <code>0 \leq m \leq 20001</code>，设计一个用最少硬币找钱 <code>m</code> 的方法。 对于给定的 <code>1 \leq n \leq 10</code>，硬币面值数组 <code>T</code> 和可以使用的各种面值的硬币个数数组 <code>Coins</code> ，以及钱数 <code>m</code> ，<code>0 \leq m \leq 20001</code> ，计算找钱 <code>m</code> 的最少硬币数。</p>
<h4 id="input">Input</h4>
<p>  输入数据第一行中只有 1 个整数给出 <code>n</code> 的值, 第 2 行起每行 2 个数，分别是 <code>T[j]</code> 和 <code>Coins[j]</code> 。最后 1 行是要找的钱数 <code>m</code>。</p>
<h4 id="output">Output</h4>
<p>  输出数据只有一个整数，表示计算出的最少硬币数。问题无解时输出 -1。</p>
<h4 id="sample-input">Sample Input</h4>
<p>3 1 3 2 3 5 3 18</p>
<h4 id="sample-output">Sample Output</h4>
<p>5</p>
<h4 id="实例代码">实例代码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> m, n, T[<span class="number">20001</span>], Coin[<span class="number">20001</span>];</span><br><span class="line">    <span class="type">int</span> res[<span class="number">20001</span>];</span><br><span class="line">    <span class="built_in">memset</span>(res, INF, <span class="built_in">sizeof</span>(res));</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; T[i] &gt;&gt; Coin[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cin &gt;&gt; m;</span><br><span class="line">    <span class="comment">// res[目标面额] = 最小需求个数</span></span><br><span class="line">    res[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遍历面额值</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="comment">// 遍历每种面额内有几张</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= Coin[i]; j++)</span><br><span class="line">            <span class="comment">// 遍历目标金额，选择当前这枚硬币是要还是不要</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = m; k &gt;= T[i]; k--)</span><br><span class="line">                <span class="comment">// 将所有硬币依次拆分成单个，</span></span><br><span class="line">                <span class="comment">// res[目标面额] = min(res[目标面额 - 当前面额]+1，res[目标面额])，</span></span><br><span class="line">                <span class="comment">// 前一个是将该面额放入该组合中，后一个是不采用当前面额，选取数值最小的。</span></span><br><span class="line">                res[k] = <span class="built_in">min</span>(res[k - T[i]] + <span class="number">1</span>, res[k]);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; (res[m] &lt; INF ? res[m] : <span class="number">-1</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="与 - 背包问题 - 的对比与分析">与“背包问题”的对比与分析</h4>
<ol>
<li>“背包”中给出了“损失”与“收益”，但其都是对于单个物品，求最大收益；“硬币”中给出的是“收益”、“个数”与“最终收益”，求最小组合。</li>
<li>依旧采用一维数组 <code>res[目标面额]= 最小需求个数</code> 来存储最终结果。</li>
<li>将所有硬币依次拆分成单个，<code>res[目标面额] = min(res[目标面额 - 当前面额]+1，res[目标面额])</code>，前一个是将该面额放入该组合中，后一个是不采用当前面额，选取数值最小的。</li>
</ol>
<hr>
<h2 id="空间复杂度优化 - 以背包问题为例">空间复杂度优化 （以背包问题为例）</h2>
<p>  有很多人采用二维数组 <code>res[i][j]</code> 静态地更新来解决背包问题，使用二维数组更加直观，但是空间复杂度较高。</p>
<p>  如果采用一维数组动态更新看起来比较难理解，但使用范围比较广。(比如，最少硬币问题中，三重循环，也可以采用一维数组来解决，但如果使用二维的话，对应地应该上升到三维)。</p>
<h4 id="难点：">难点：</h4>
<p><strong>“k:v-&gt;w[i]，依次递减”</strong>，这可能比较难以理解，在我们默认从小到大，而这里，必须从大到小，否则就是错误。</p>
<h4 id="难点解答：">难点解答：</h4>
<p>  产生上述问题，本质就是对 <code>res[]</code> 数组在某一时间其存储的值的不理解。</p>
<p>  对于每一次更新开始，<code>res[]</code>存储着的是“放入这个物品之前的最优解”，而我们比较的是 <code>res[k]</code> 与 <code>res[k - w[i]] + p[i]</code> (背包问题)，其中 <code>res[k-w[i]]</code>是之前的最优解。</p>
<p>  因为一定存在 <code>k &gt; k-w[i]</code>，如果从小到大，则一定会先与 <code>res[k]</code> 更新 <code>res[k-w[i]]</code>，这就会导致比较错误。此时 <code>res[k-w[i]]</code> 已经变为“将该商品放入之后的最优价值”，在这价值基础之上，在加 <code>p[i]</code> ，其价值大概率会比 <code>res[k]</code> 高，而更新，这样，越来越大，完全背离了我们实际的意思。 因此，必须从后往前，因为前面存储着的是过去的值（不放第 <code>i</code> 件物品时的值）进行比较。</p>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>算法分析与设计</category>
      </categories>
      <tags>
        <tag>背包问题</tag>
        <tag>最小硬币问题</tag>
        <tag>动态规划</tag>
      </tags>
  </entry>
  <entry>
    <title>程序人生：如何成为一名优秀的全栈工程师</title>
    <url>/SongXJ01/2021/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F%EF%BC%9A%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E4%B8%80%E5%90%8D%E4%BC%98%E7%A7%80%E7%9A%84%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>对性能影响有着深入理解的技术通才</li>
<li>掌握多种技能，并能利用多种技能独立完成产品的人</li>
<li>一位资深开发工程师、架构师，以及具有敏捷开发技能的程序员</li>
</ul>
</blockquote>
<span id="more"></span>
<hr>
<h1>1. 什么是全栈工程师</h1>
<p>  “全栈工程师” 一词，最早出现于 Facebook 工程师 Calos Bueno 的一篇文章 —— Full Stack。他把全栈工程师定义为 <strong> 对性能影响有着深入理解的技术通才</strong>。在 “拉钩”  “100Offer” 等针对互联网人才的招聘网站上，全栈工程师更是一跃成为热门招聘职位，其薪酬水平也比一般的开发工程师职位要高出一截。那么，什么是全栈工程师，我们又应该如何定义一名全栈工程师呢？</p>
<p>  百度百科对全栈工程师的定义是这样的：<strong>“掌握多种技能，并能利用多种技能独立完成产品的人。”</strong> 我觉得这个定义还不够全面，我认为全栈工程师应该同时是 <strong> 一位资深开发工程师、架构师，以及具有敏捷开发技能的程序员</strong>。全栈工程师对于软件开发的认识往往已经进化了，他们把特定的技术抛到了身后，明白技术的更新始终比计算机理论要快的道理，因此，他们注重强化自身的核心技能，关注并乐于实践其他技术。全栈工程师往往是某一方面的专家，同时通晓并善于在正确的场合运用其他语言、工具和技术。</p>
<hr>
<h1>2. 全栈工程师的价值</h1>
<p>  随着时间的推移，全栈工程师的作用和价值在越来越多的产品或项目中得到了印证。那么，我们来看看全栈工程师对于个人或公司意味着什么。</p>
<ul>
<li><strong>个人价值及自由度的极大提升</strong> —— 我曾看过一些介绍全栈工程师的文章，文中大多强调了全栈工程师对于公司与团队的价值。而当你成为一名真正的全栈工程师后，会感受到前所未有的个人价值与技术自由度的提升。试想当一个很好的创意出现时，你可以一个人或主导一个团队去实现并不断完善它，这是一件多么让人兴奋的事情啊！</li>
<li><strong>全局思维与技术前瞻性 </strong> —— 由于具备了各个开发环节与技术领域的知识，全栈工程师往往具有更好的<strong> 大局观 </strong> 和<strong>技术前瞻性</strong>，能够在项目初期就选择正确的技术，并很好地把控一个项目的整体方向。现代项目往往非常复杂，而全栈工程师往往能带来技术和质量上的保障，从而成为个项目成功的关键人物。</li>
<li><strong>降低沟通成本</strong> —— 我经常听到有设计师抱怨前端工程师无法百分之百地还原他们的设计，而前端工程师又在抱怨后端工程师从接口返回的数据根本无法直接使用，后端工程师也在抱怨产品经理所提的需求根本无法完成。随着团队人数的上升，由于各自技能栈的不同，沟通成本必然会随之上升。全栈工程师除了能够独立完成前后端的开发（甚至包括设计）外，如果能够在项目初期提前介入，便能很好地规避技术风险，过滤不合理的需求，从而显著降低因不同技术差异导致的沟通问题，显著降低项目风险。.</li>
<li><strong>初创公司</strong> —— 我们已经来到了一个大众创业，万众创新的时代。那些初创公司也如雨后春笋般不断涌现。初创公司往往都有了一个不错的创意，但经常会遇到 “就缺一名程序员” 的尴尬。我想说的是，他们其实并不是缺程序员，而是缺一名全栈工程师。初创公司往往资金有限，而一名优秀的全栈工程师能够帮助初创公司用最低的代价与最短的时间推出自己的产品。这是初创公司能够存活下来，拿到更多投资，甚至成为 “独角兽” 一员的最关键一步。</li>
</ul>
<hr>
<h1>3. 全栈工程师的技能栈</h1>
<p>  看到这里你一定会问，到底需要具备怎样的技能才能成为一名全栈工程呢？下面这张表格来自 Medium，作者将软件开发所涉及的各个方面分为层，又将每个层所包含的主要技术作为组件，制作了这张全栈技术图。</p>
<table>
<thead>
<tr>
<th style="text-align:left">LAYER（层次）</th>
<th style="text-align:left">COMPONENTS（组件）</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Hardware 硬件</td>
<td style="text-align:left">Server Hardware、RAID、Network Protocol、Block devices</td>
</tr>
<tr>
<td style="text-align:left">OS 操作系统</td>
<td style="text-align:left">Linux、Mac OS、Windows Server、CoreOS</td>
</tr>
<tr>
<td style="text-align:left">Virtualization 虚拟化</td>
<td style="text-align:left">Xen、VMware、KVM、VirtualBox</td>
</tr>
<tr>
<td style="text-align:left">Hosting 虚拟主机（云主机）</td>
<td style="text-align:left">Azure（微软）、AWS（亚马逊）、Linode、Rackspace cloud</td>
</tr>
<tr>
<td style="text-align:left">Containers / PaaS 容器</td>
<td style="text-align:left">Docker、Google APPengine、Heroku</td>
</tr>
<tr>
<td style="text-align:left">Scaling 扩展</td>
<td style="text-align:left">Load balancing 负载均衡、Partitioning 分区、CDNs 内容分发网络</td>
</tr>
<tr>
<td style="text-align:left">Package management 依赖包管理</td>
<td style="text-align:left">apt、rpm、brew</td>
</tr>
<tr>
<td style="text-align:left">Server management 服务管理</td>
<td style="text-align:left">Bash、GCC、Make</td>
</tr>
<tr>
<td style="text-align:left">Web servers 网络服务器</td>
<td style="text-align:left">Apache、Nginx</td>
</tr>
<tr>
<td style="text-align:left">Databases 数据库</td>
<td style="text-align:left">MySQL、SQL Server、MongoDB、Redis</td>
</tr>
<tr>
<td style="text-align:left">Search 搜索</td>
<td style="text-align:left">Elasticsearch 搜索引擎 、SOLR、Facets</td>
</tr>
<tr>
<td style="text-align:left">Config management 配置管理</td>
<td style="text-align:left">Puppet、Composer、Chef、Kubernetes</td>
</tr>
<tr>
<td style="text-align:left">Programming 编程</td>
<td style="text-align:left">PHP、Java、Swift、Go、Ruby、Python、JavaScript</td>
</tr>
<tr>
<td style="text-align:left">Frameworks 框架</td>
<td style="text-align:left">WordPress、Flask、Django、AngularJS、Vue</td>
</tr>
<tr>
<td style="text-align:left">Frontend Dev 前端开发</td>
<td style="text-align:left">HTML5、CSS、LASS</td>
</tr>
<tr>
<td style="text-align:left">Security  安全</td>
<td style="text-align:left">XSS、SQL Injection、SSL</td>
</tr>
<tr>
<td style="text-align:left">Frontend Design 前端设计</td>
<td style="text-align:left">UI、UX、Photoshop、Illustrator</td>
</tr>
<tr>
<td style="text-align:left">Business requirement 商业需求</td>
<td style="text-align:left">用户需求收集、项目管理</td>
</tr>
</tbody>
</table>
<p>  从上面这张表我们不难发现，现在的技术体系是多么庞大，每一年又会有新的技术加入到这些层中，而已有的技术又在不断地更新。因此，要掌握所有技术是根本不可能的，而成为全栈工程师也并不需要你真得掌握所有的技术，你应该将自己的精力聚焦在关键开发技能，以及一些必须掌握的附加技能上。</p>
<p>  有经验的技术领导者在招聘时，往往会同时考察应聘者的技术能力与上述附加技能，而对于初级程序员的招聘来说，那些附加技能往往更被优秀的技术公司所看重。开发技能是你的硬实力，而附加技能则可以看作是你的软实力，只有同时具备这两方面技能，才能成为一名优秀的全栈工程师。</p>
<hr>
<h1>4. 优秀的全栈工程师需要走出去</h1>
<p>  优秀的全栈工程师不应局限于自己的工作，他更应该走出去，接触不同的技术，分享自己的经验和心得，认识更多的朋友。</p>
<ul>
<li><strong>参加技术大会</strong> —— InfoQ、CSDN、GITC、优设、TED 等网站都会定期举办各类技术大会。在这些大会上，你不仅能够听到技术大咖们带来的各自领域最佳技术实践，而且能认识很多行业内的朋友。这对你开拓思路，扩大技术社交圈都很有帮助。因此，如果公司没有安排你去参加这些技术大会的话，那就自己买票参加，作为对自己的一种投资吧。</li>
<li><strong>做公开演讲</strong> —— 全栈工程师作为团队的核心成员，他一定需要在团队内部做技术、管理等方面的演讲。如果你是一个乐于分享的技术达人，那么也可以尝试录制个人课程（视频或音频），并在慕课、网易课堂、优酷，或荔枝、喜马拉雅等各种媒体上分享自己的技能和知识。不要因为自己并不是专家就不愿尝试，相信我，你用心制作的内容，会获得大家认可的，并收获一大批粉丝的。</li>
<li><strong>个人博客</strong> —— 每天进步一点点，一年以后你便会获得质的飞跃。优秀的全栈工程师懂得如何进行知识的积累，而技术博客就是一个很好的方式，将自己平时的实践、思考记录下来，配以 tag 标签方便日后的回顾。最有意思的是，当你在不断记录和更新你的博客同时，来自不同地方的程序员也会通过你的博客认识你。</li>
<li><strong>参加线下活动</strong> —— 与以前的程序员总是宅在家里不同，现在的年轻程序员们更愿意分享和交流。很多网站也会组织不同技术主题的线下活动，在这些活动中你可以听到一些技术牛人的分享，还可以找到很多和你一样对技术富有激情的人。</li>
</ul>
<p>  全栈工程师绝不是一夜铸成的，你需要打好技术基础，强化核心技能，并持续学习。相信有一天你也能感受到自由地运用技术，开发出优秀产品所带来的乐趣。</p>
<p><br/><br/></p>
<hr>
<blockquote>
<p>读《程序员的自我修养》（陈逸鹤）有感，感触至深之处，摘录于此，若有不当之处，联系博主即可删文。</p>
</blockquote>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>程序人生</category>
      </categories>
      <tags>
        <tag>程序人生</tag>
      </tags>
  </entry>
  <entry>
    <title>算法题：最大连续子序列和</title>
    <url>/SongXJ01/2022/%E7%AE%97%E6%B3%95%E9%A2%98%EF%BC%9A%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%BA%8F%E5%88%97%E5%92%8C/</url>
    <content><![CDATA[<p>  求取数组中最大连续子序列和，例如给定数组为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mo stretchy="false">{</mo><mn>1</mn><mtext>，</mtext><mn>3</mn><mtext>，</mtext><mo>−</mo><mn>2</mn><mtext>，</mtext><mn>4</mn><mtext>，</mtext><mo>−</mo><mn>5</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">A=\{1， 3， -2， 4， -5\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord">3</span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord cjk_fallback">，</span><span class="mord">4</span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mclose">}</span></span></span></span>， 则最大连续子序列和为 6，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>+</mo><mn>3</mn><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mn>4</mn><mo>=</mo><mn>6</mn></mrow><annotation encoding="application/x-tex">1+3+(-2)+ 4 = 6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span></span></span></span>。</p>
<span id="more"></span>
<h2 id="题解">题解</h2>
<p><strong>最大连续子序列和：当前元素前面为正数，带上前面的序列；前面为负数或 0，自己为起点。</strong></p>
<p>  因为最大连续子序列和只可能是以位置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>∼</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0 \sim n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 中某个位置结尾。当遍历到第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 个元素时，判断在它前面的连续子序列和是否大于 0，如果大于 0，则以位置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 结尾的最大连续子序列和为元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 和前面的连续子序列和相加；否则，则以位置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 结尾的最大连续子序列和为元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">maxSequence</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> len)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> maxSum, maxHere;</span><br><span class="line">    maxSum = maxHere = a[<span class="number">0</span>];   <span class="comment">// 初始化最大和为 a[0]</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; len; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (maxHere &lt;= <span class="number">0</span>)</span><br><span class="line">            maxHere = a[i];  <span class="comment">// 如果前面位置最大连续子序列和小于等于 0，则以当前位置 i 结尾的最大连续子序列和为 a[i]</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            maxHere += a[i]; <span class="comment">// 如果前面位置最大连续子序列和大于 0，则以当前位置 i 结尾的最大连续子序列和为它们两者之和</span></span><br><span class="line">        <span class="keyword">if</span> (maxHere &gt; maxSum) &#123;</span><br><span class="line">            maxSum = maxHere;  <span class="comment">// 更新最大连续子序列和</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxSum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>时间复杂度</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> 。</p>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>算法题</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>算法题</tag>
      </tags>
  </entry>
  <entry>
    <title>算法题：最长回文子串</title>
    <url>/SongXJ01/2022/%E7%AE%97%E6%B3%95%E9%A2%98%EF%BC%9A%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</url>
    <content><![CDATA[<p> 给你一个字符串 <code>s</code>，找到 <code>s</code> 中最长的回文子串。</p>
<span id="more"></span>
<h2 id="题解"> 题解 </h2>
<p> 对于一个子串而言，如果它是回文串，并且长度大于 2，那么将它首尾的两个字母去除之后，它仍然是个回文串。例如对于字符串 “ababa”，如果我们已经知道 “bab” 是回文串，那么 “ababa” 一定是回文串，这是因为它的首尾两个字母都是 “a”。</p>
<p><strong> 注意：在状态转移方程中，我们是从长度较短的字符串向长度较长的字符串进行转移的，因此一定要注意动态规划的循环顺序。</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">longestPalindrome</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> s.length();</span><br><span class="line">        <span class="keyword">if</span> (len &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">maxLen</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">begin</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// dp[i][j] 表示 s[i..j] 是否是回文串 </span></span><br><span class="line">        <span class="type">boolean</span>[][] dp = <span class="keyword">new</span> <span class="title class_">boolean</span>[len][len];</span><br><span class="line">        <span class="comment">// 初始化：所有长度为 1 的子串都是回文串 </span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            dp[i][i] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">char</span>[] charArray = s.toCharArray();</span><br><span class="line">        <span class="comment">// 递推开始 </span></span><br><span class="line">        <span class="comment">// 先枚举子串长度 </span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">L</span> <span class="operator">=</span> <span class="number">2</span>; L &lt;= len; L++) &#123;</span><br><span class="line">            <span class="comment">// 枚举左边界，左边界的上限设置可以宽松一些 </span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">                <span class="comment">// 由 L 和 i 可以确定右边界，即 j - i + 1 = L 得 </span></span><br><span class="line">                <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> L + i - <span class="number">1</span>;</span><br><span class="line">                <span class="comment">// 如果右边界越界，就可以退出当前循环 </span></span><br><span class="line">                <span class="keyword">if</span> (j &gt;= len) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (charArray[i] != charArray[j]) &#123;</span><br><span class="line">                    dp[i][j] = <span class="literal">false</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (j - i &lt; <span class="number">3</span>) &#123;</span><br><span class="line">                        dp[i][j] = <span class="literal">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        dp[i][j] = dp[i + <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 只要 dp[i][L] == true 成立，就表示子串 s[i..L] 是回文，此时记录回文长度和起始位置 </span></span><br><span class="line">                <span class="keyword">if</span> (dp[i][j] &amp;&amp; j - i + <span class="number">1</span> &gt; maxLen) &#123;</span><br><span class="line">                    maxLen = j - i + <span class="number">1</span>;</span><br><span class="line">                    begin = i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s.substring(begin, begin + maxLen);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong> 时间复杂度 </strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 。</p>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>算法题</category>
      </categories>
      <tags>
        <tag>算法题</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>算法分析与设计：7 大排序算法大汇总（C++）</title>
    <url>/SongXJ01/2021/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1%EF%BC%9A7%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%A4%A7%E6%B1%87%E6%80%BB%EF%BC%88C++%EF%BC%89/</url>
    <content><![CDATA[<ul>
<li><a href="https://baike.baidu.com/item/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/4602306?fr=aladdin"> 冒泡排序 </a>（Bubble Sort）</li>
<li><a href="https://baike.baidu.com/item/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F"> 选择排序 </a>（Selection Sort）</li>
<li><a href="https://baike.baidu.com/item/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F"> 插入排序 </a>（Insertion Sort）</li>
<li><a href="https://baike.baidu.com/item/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95?fromtitle=%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F&amp;fromid=2084344"> 快速排序 </a>（Quick Sort）</li>
<li><a href="https://baike.baidu.com/item/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F"> 归并排序 </a>（Merge Sort）</li>
<li><a href="https://baike.baidu.com/item/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F"> 希尔排序 </a>（Shell Sort）</li>
<li><a href="https://baike.baidu.com/item/%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F"> 计数排序 </a>（Counting Sort）</li>
</ul>
<span id="more"></span>
<p>【上述超链接均为相应的百度百科】</p>
<hr>
<h3 id="c- 实现代码">C++  实现代码 </h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印数组 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printArr</span><span class="params">(<span class="type">int</span> *arr, <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; *(arr + i) &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n&quot;</span></span><br><span class="line">         &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment"> * 冒泡排序（Bubble Sort）</span></span><br><span class="line"><span class="comment">        它重复地走访过要排序的元素，依次比较相邻两个元素，如果它们的顺序错误就把他们 </span></span><br><span class="line"><span class="comment">    调换过来，直到没有元素再需要交换，排序完成。</span></span><br><span class="line"><span class="comment">********************************************************************************/</span></span><br><span class="line"><span class="function"><span class="type">int</span> *<span class="title">BubbleSort</span><span class="params">(<span class="type">int</span> array[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (array[j + <span class="number">1</span>] &lt; array[j])</span><br><span class="line">            &#123;</span><br><span class="line">                temp = array[j + <span class="number">1</span>];</span><br><span class="line">                array[j + <span class="number">1</span>] = array[j];</span><br><span class="line">                array[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> array;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment"> * 选择排序（Selection Sort）</span></span><br><span class="line"><span class="comment">       第一次从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，</span></span><br><span class="line"><span class="comment">    然后再从剩余的未排序元素中寻找到最小（大）元素，然后放到已排序的序列的末尾。</span></span><br><span class="line"><span class="comment">********************************************************************************/</span></span><br><span class="line"><span class="function"><span class="type">int</span> *<span class="title">SelectionSort</span><span class="params">(<span class="type">int</span> array[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> minIndex = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; len; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (array[j] &lt; array[minIndex]) <span class="comment">// 找到最小的数 </span></span><br><span class="line">                minIndex = j;               <span class="comment">// 将最小数的索引保存 </span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> temp = array[minIndex];</span><br><span class="line">        array[minIndex] = array[i];</span><br><span class="line">        array[i] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> array;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment"> * 插入排序（Insertion Sort）</span></span><br><span class="line"><span class="comment">       将一个记录插入到已经排好序的有序表中。</span></span><br><span class="line"><span class="comment">********************************************************************************/</span></span><br><span class="line"><span class="function"><span class="type">int</span> *<span class="title">InsertionSort</span><span class="params">(<span class="type">int</span> array[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> current = array[i + <span class="number">1</span>]; <span class="comment">// 待归位的数 </span></span><br><span class="line">        <span class="type">int</span> preIndex = i;           <span class="comment">// 待归位的前面的一个数 </span></span><br><span class="line">        <span class="comment">// 利用逐个比较的方式将待归位的数归位。</span></span><br><span class="line">        <span class="keyword">while</span> (preIndex &gt;= <span class="number">0</span> &amp;&amp; current &lt; array[preIndex])</span><br><span class="line">        &#123;</span><br><span class="line">            array[preIndex + <span class="number">1</span>] = array[preIndex];</span><br><span class="line">            preIndex--;</span><br><span class="line">        &#125;</span><br><span class="line">        array[preIndex + <span class="number">1</span>] = current; <span class="comment">// 找到了正确的位置，进行归位 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> array;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment"> * 快速排序（Quick Sort）</span></span><br><span class="line"><span class="comment">       将待排数组分隔成独立的两部分，其中一部分记录的关键字均比另一部分的关键字小，则 </span></span><br><span class="line"><span class="comment">    可分别对这两部分记录继续进行排序，以达到整个序列有序。</span></span><br><span class="line"><span class="comment">********************************************************************************/</span></span><br><span class="line"><span class="comment">// 快速排序核心算法——Partition：</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Partition</span><span class="params">(<span class="type">int</span> array[], <span class="type">int</span> start, <span class="type">int</span> end)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i = start, j = end + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 将 start 暂存在 x 里面，顺便作为基准元素 </span></span><br><span class="line">    <span class="type">int</span> x = array[start];</span><br><span class="line">    <span class="comment">// 将小于 x 的元素交换到左边区域，将大于 x 的元素交换到右边区域 </span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (array[++i] &lt; x &amp;&amp; i &lt; end)</span><br><span class="line">            ; <span class="comment">// 找到小于基准元素的第一个数 </span></span><br><span class="line">        <span class="keyword">while</span> (array[--j] &gt; x)</span><br><span class="line">            ; <span class="comment">// 找到大于基准元素的第一个数 </span></span><br><span class="line">        <span class="keyword">if</span> (i &gt;= j)</span><br><span class="line">            <span class="keyword">break</span>; <span class="comment">// 小于基准元素的第一个数在大于基准元素的第一个数的右边，说明划分完毕 </span></span><br><span class="line">        <span class="built_in">swap</span>(array[i], array[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    array[start] = array[j]; <span class="comment">// 将中间位置的元素放在第一个 </span></span><br><span class="line">    array[j] = x;            <span class="comment">// 将刚才暂存在 x 中的 start（基准元素放在中间）</span></span><br><span class="line">    <span class="keyword">return</span> j;                <span class="comment">// 返回中间位置索引 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> *<span class="title">QuickSort</span><span class="params">(<span class="type">int</span> array[], <span class="type">int</span> start, <span class="type">int</span> end)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> q = <span class="built_in">Partition</span>(array, start, end);</span><br><span class="line">    <span class="keyword">if</span> (q &gt; start)</span><br><span class="line">        <span class="built_in">QuickSort</span>(array, start, q - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (q &lt; end)</span><br><span class="line">        <span class="built_in">QuickSort</span>(array, q + <span class="number">1</span>, end);</span><br><span class="line">    <span class="keyword">return</span> array;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment"> * 归并排序（Merge Sort）</span></span><br><span class="line"><span class="comment">       就是把数组分成更小的数组, 合并的时候再排序 </span></span><br><span class="line"><span class="comment">********************************************************************************/</span></span><br><span class="line"><span class="function"><span class="type">int</span> *<span class="title">MergeSort</span><span class="params">(<span class="type">int</span> array[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> *a = array;</span><br><span class="line">    <span class="type">int</span> *b = <span class="keyword">new</span> <span class="type">int</span>[len];</span><br><span class="line">    <span class="comment">// 每次循环的规模（seg）翻倍 </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> seg = <span class="number">1</span>; seg &lt; len; seg += seg)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> start = <span class="number">0</span>; start &lt; len; start += seg + seg)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> low = start, mid = <span class="built_in">min</span>(start + seg, len), high = <span class="built_in">min</span>(start + seg + seg, len);</span><br><span class="line">            <span class="type">int</span> k = low;</span><br><span class="line">            <span class="type">int</span> start1 = low, end1 = mid;</span><br><span class="line">            <span class="type">int</span> start2 = mid, end2 = high;</span><br><span class="line">            <span class="keyword">while</span> (start1 &lt; end1 &amp;&amp; start2 &lt; end2) <span class="comment">// 合并两个数组 </span></span><br><span class="line">                b[k++] = a[start1] &lt; a[start2] ? a[start1++] : a[start2++];</span><br><span class="line">            <span class="keyword">while</span> (start1 &lt; end1) <span class="comment">// 数组 2 已经合并完了，开始合并剩余的数组 1</span></span><br><span class="line">                b[k++] = a[start1++];</span><br><span class="line">            <span class="keyword">while</span> (start2 &lt; end2) <span class="comment">// 数组 1 已经合并完了，开始合并剩余的数组 2</span></span><br><span class="line">                b[k++] = a[start2++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> *temp = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a != array)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">            b[i] = a[i];</span><br><span class="line">        b = a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// // 递归框架 </span></span><br><span class="line"><span class="comment">// int tmpArray[];</span></span><br><span class="line"><span class="comment">// void MergeSort(int array[], int left, int right)</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     if (left &lt; right) // 至少两个元素 </span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         int i = (left + right) / 2; // 取中点 </span></span><br><span class="line"><span class="comment">//         MergeSort(array, left, i);</span></span><br><span class="line"><span class="comment">//         MergeSort(array, i + 1, right);</span></span><br><span class="line"><span class="comment">//         Merge(array, tmpArray, left, i, right); // 合并到数组 tmpArray</span></span><br><span class="line"><span class="comment">//         Copy(array, tmpArray, left, right);     // 将 tmpArray 中的数据复制回 array</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment"> * 希尔排序（Shell Sort）</span></span><br><span class="line"><span class="comment">       是插入排序的一种又称“缩小增量排序”。比较相隔较远距离（称为增量）的数，使得数 </span></span><br><span class="line"><span class="comment">    移动时能跨过多个元素，则进行一次比较就可能消除多个元素交换。</span></span><br><span class="line"><span class="comment">********************************************************************************/</span></span><br><span class="line"><span class="function"><span class="type">int</span> *<span class="title">ShellSort</span><span class="params">(<span class="type">int</span> array[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> h = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (h &lt; len / <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        h = <span class="number">3</span> * h + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (h &gt;= <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = h; i &lt; len; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i; j &gt;= h &amp;&amp; array[j] &lt; array[j - h]; j -= h)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">swap</span>(array[j], array[j - h]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        h = h / <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> array;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment"> * 计数排序（Counting Sort）</span></span><br><span class="line"><span class="comment">       是对于给定的输入序列中的每一个元素 x，确定该序列中值小于 x 的元素的个数。</span></span><br><span class="line"><span class="comment">********************************************************************************/</span></span><br><span class="line"><span class="function"><span class="type">int</span> *<span class="title">CountingSort</span><span class="params">(<span class="type">int</span> array[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i, j, k;</span><br><span class="line">    <span class="type">int</span> max = <span class="number">-10000</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (array[i] &gt; max)</span><br><span class="line">            max = array[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> *count_arr = <span class="keyword">new</span> <span class="type">int</span>[max];</span><br><span class="line">    <span class="type">int</span> *sorted_arr = <span class="keyword">new</span> <span class="type">int</span>[len];</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">100</span>; k++)</span><br><span class="line">        count_arr[k] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">        count_arr[array[i]]++;</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">1</span>; k &lt; <span class="number">100</span>; k++)</span><br><span class="line">        count_arr[k] += count_arr[k - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (j = len; j &gt; <span class="number">0</span>; j--)</span><br><span class="line">        sorted_arr[--count_arr[array[j - <span class="number">1</span>]]] = array[j - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> sorted_arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// C++ 的数组是地址传递，所以要复制多组原始乱序数组 </span></span><br><span class="line">    <span class="type">int</span> arr1[<span class="number">13</span>] = &#123;<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</span><br><span class="line">    <span class="type">int</span> arr2[<span class="number">13</span>] = &#123;<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</span><br><span class="line">    <span class="type">int</span> arr3[<span class="number">13</span>] = &#123;<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</span><br><span class="line">    <span class="type">int</span> arr4[<span class="number">13</span>] = &#123;<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</span><br><span class="line">    <span class="type">int</span> arr5[<span class="number">13</span>] = &#123;<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</span><br><span class="line">    <span class="type">int</span> arr6[<span class="number">13</span>] = &#123;<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</span><br><span class="line">    <span class="type">int</span> arr7[<span class="number">13</span>] = &#123;<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">sizeof</span>(arr1) / <span class="built_in">sizeof</span>(<span class="type">int</span>);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Bubble Sort:&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">BubbleSort</span>(arr1, len);</span><br><span class="line">    <span class="built_in">printArr</span>(arr1, len);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Select Sort:&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">SelectionSort</span>(arr2, len);</span><br><span class="line">    <span class="built_in">printArr</span>(arr2, len);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Insertion Sort:&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">InsertionSort</span>(arr3, len);</span><br><span class="line">    <span class="built_in">printArr</span>(arr3, len);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Quick Sort:&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">QuickSort</span>(arr4, <span class="number">0</span>, <span class="number">12</span>);</span><br><span class="line">    <span class="built_in">printArr</span>(arr4, len);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Merge Sort:&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">MergeSort</span>(arr5, len);</span><br><span class="line">    <span class="built_in">printArr</span>(arr5, len);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Shell Sort:&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">ShellSort</span>(arr6, len);</span><br><span class="line">    <span class="built_in">printArr</span>(arr6, len);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Counting Sort:&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="type">int</span> *sortArr;</span><br><span class="line">    sortArr = <span class="built_in">CountingSort</span>(arr7, len);</span><br><span class="line">    <span class="built_in">printArr</span>(sortArr, len);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>算法分析与设计</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>排序算法</tag>
      </tags>
  </entry>
  <entry>
    <title>YOLO 目标检测算法汇总</title>
    <url>/SongXJ01/2023/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<p>  YOLO（You Only Look Once）是一系列目标检测算法，其核心思想是将目标检测视为回归问题，从而实现了端到端的训练。从最初的 YOLOv1 开始，该系列算法在速度和准确性方面不断取得突破。YOLOv1 引入了单网络结构，实现了端到端的训练，虽然定位精度有待提高，但其高速性能为后续版本奠定了基础。YOLOv2（YOLO9000）通过引入批归一化、高分辨率分类器、锚点框等改进，显著提升了检测性能。YOLOv3 则在保持高速的同时，通过多尺度预测、更好的基础分类网络和对象分类损失函数等优化，进一步提高了检测精度。而最新的 YOLOv4 和 YOLOv5 则在保持 YOLO 系列一贯的高速特性的同时，通过引入各种新的技巧和模块，如 CSPNet、PANet、SiLU 激活函数等，进一步提升了检测精度和速度。总体而言，YOLO 系列算法以其高效、准确的特点，在目标检测领域持续引领创新，成为实际应用中的热门选择。</p>
<span id="more"></span>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="基本知识">基本知识</h2>
<h4 id="目标检测经典算法">目标检测经典算法</h4>
<ul>
<li>两阶段：Faster-RCNN，Mask-RCNN 系列</li>
<li>单阶段：YOLO 系列
<ul>
<li>优势：速度快，实时监测</li>
</ul>
</li>
</ul>
<h4 id="衡量指标">衡量指标</h4>
<ul>
<li>
<p>mAP：越大，效果越好。（面积之和）</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_oVjRjsHkrR.png" alt=""></p>
</li>
<li>
<p>IoU：预测框与 ground truth 的交集和并集的比值。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_tUSzCO6bWA.png" alt=""></p>
</li>
<li>
<p>FPS：帧率，越大，速度越快，网络结构越简单</p>
</li>
<li>
<p>P 和 R：</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_4aqpOax2km.png" alt=""></p>
</li>
</ul>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="发展历程">发展历程</h2>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_-ZryUIZcpe.png" alt="发展历程"></p>
<p><br/><br/></p>
<h2 id="yolov1">YOLOv1</h2>
<h3 id="概述">概述</h3>
<p>  以往的二阶段检测算法，例如 Faster-RCNN，在检测时需要经过两步：边框回归和 softmax 分类。由于大量预选框的生成，该方法检测精度较高，但实时性较差。鉴于此，YOLO 之父 Joseph Redmon 创新性的提出了通过直接回归的方式获取目标检测的具体位置信息和类别分类信息，极大的降低了计算量，显著提升了检测的速度，达到了 45FPS。</p>
<h3 id="核心思想"><strong>核心思想</strong></h3>
<p>  将整张图作为网络的输入，直接在输出层对 BBox 的位置和类别进行回归。</p>
<ol>
<li>给个一个输入图像，首先将图像划分成 7 × 7 的网格</li>
<li>对于每个网格，我们都预测 2 个边框（包括每个边框是目标的置信度以及每个边框区域在多个类别上的概率）</li>
<li>根据上一步可以预测出 7 × 7 × 2 个目标窗口，然后根据阈值去除可能性比较低的目标窗口，最后 NMS 去除冗余窗口即可</li>
</ol>
<h3 id="优缺点">优缺点</h3>
<p><strong>优点：</strong></p>
<ul>
<li>快速，pipline 简单；</li>
<li>背景误检率低；</li>
<li>通用性强。</li>
</ul>
<p><strong>缺点：</strong></p>
<ul>
<li><strong>对于小而密集的物体检测效率低：</strong> 由于输出层为全连接层，因此在检测时，YOLO v1 训练模型只支持与训练图像相同的输入分辨率。虽然每个格子可以预测 几个 bounding box，但是最终只选择只选择 IOU 最高的 bounding box 作为物体检测输出，即每个格子最多只预测出一个物体。当物体占画面比例较小，如图像中包含畜群或鸟群时，每个格子包含多个物体，但却只能检测出其中一个。</li>
</ul>
<p><br/><br/></p>
<h2 id="yolov2">YOLOv2</h2>
<h3 id="概述">概述</h3>
<p>  针对 YOLOv1 的问题，YOLO 之父 Joseph Redmon 不甘屈服，对 v1 版本进行了大刀阔斧的改革，继而提出了 YOLOv2 网络，重要改革举措包括：</p>
<ol>
<li>更换骨干网络；</li>
<li>引入 PassThrough;</li>
<li>借鉴二阶段检测的思想，添加了预选框。</li>
</ol>
<p>  YOLOv2 检测算法是将图片输入到 darknet19 网络中提取特征图，然后输出目标框类别信息和位置信息。</p>
<h3 id="passthrough 操作">PassThrough 操作</h3>
<p>  该方法将 28x28x512 调整为 14x14x2048，后续 v5 版本中的 <strong>Focus</strong> 操作类似该操作。将生成的 14x14x2048 与原始的 14x14x1024 进行 concat 操作。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_36lEwKsrgk.png" alt=""></p>
<h3 id="引入 anchor">引入 anchor</h3>
<p>  <strong>引入 anchor，调整位置预测为偏移量预测</strong> 借鉴了 Faster-RCNN 的思想，引入了 anchor，将目标框的位置预测由直接预测坐标调整为偏移量预测，大大降低了预测难度，提升了预测准确性。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_O18zvUQ-HJ.png" alt=""></p>
<h3 id="优缺点">优缺点</h3>
<p>（1）优势：利用 passthrough 操作对高低层语义信息进行融合，在一定程度上增强了小目标的检测能力。采用小卷积核替代 7x7 大卷积核，降低了计算量。同时改进的位置偏移的策略降低了检测目标框的难度。</p>
<p>（2）不足：尚未采用残差网络结构。且当存在多物体密集挨着的时候或者小目标的时候，检测效果有待提升。</p>
<p><br/><br/></p>
<h2 id="yolov3">YOLOv3</h2>
<p>  针对 YOLOv2 的问题，YOLO 之父 Joseph Redmon 决定深化改革，于是乎吸收当下较好的网络设计思想，引入了 <strong> 残差网络模块</strong>。基本解决了小目标检测的问题，在速度和精度上实现了较好的平衡。</p>
<ol>
<li>在 Darknet19 的基础上推陈出新，引入残差，并加深网络深度，提出了 Darkent53（类似于 ResNet 引入残差结构）。</li>
<li>借鉴了 <strong> 特征金字塔 </strong> 的思想，在三个不同的尺寸上分别进行预测（多尺度预测 ，引入 FPN）。</li>
<li>分类器不再使用 Softmax，分类损失采用 binary cross-entropy loss（二分类交叉损失熵）</li>
</ol>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_OFLllUQUbS.png" alt="YOLOv3 网络结构图"></p>
<h3 id="特征金字塔">特征金字塔</h3>
<p>  YOLOv3 检测算法是将图片输入到 darknet53 网络中提取特征图，然后借鉴特征金字塔网络思想，将高级和低级语义信息进行融合，在低、中、高三个层次上分别预测目标框，最后输出三个尺度的特征图信息（52×52×75、26×26×75、13×13×75）。</p>
<p><br/><br/></p>
<h2 id="yolov4">YOLOv4</h2>
<p>YOLOv4 就是 <strong>筛选 </strong> 了一些从 YOLOv3 发布至今，能够<strong> 提高检测精度 </strong> 的<strong>tricks</strong>，并以 YOLOv3 为 <strong> 基础 </strong> 进行改进。</p>
<ul>
<li>相较于 YOLOv3 的 DarkNet53，YOLOv4 用了 CSPDarkNet53</li>
<li>相较于 YOLOv3 的 FPN，YOLOv4 用了<strong>SPP</strong>+PAN</li>
<li>CutMix 数据增强和马赛克（Mosaic）数据增强</li>
<li>DropBlock 正则化</li>
</ul>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_eDki8sf-KG.png" alt="YOLOv4 网络结构图"></p>
<h3 id="输入数据采用 mosaic 数据增强">输入数据采用 Mosaic 数据增强</h3>
<p>  借鉴了 2019 年 CutMix 的思路，并在此基础上进行了拓展，Mosaic 数据增强方式采用了 4 张图片，随机缩放、随机裁剪、随机排布的方式进行拼接。从而对小目标的检测起到进一步的提升的作用。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_261WFN5zom.png" alt="YOLOv4 的效果"></p>
<h3 id="修改骨干网络为 -cspdarknet53">修改骨干网络为 CSPDarknet53</h3>
<p>  借鉴了 2019CSPNet 的经验，并结合先前的 Darkent53，获得了新的骨干网络 CSPDarknet53。在 CSPNet 中，存在如下操作，即：进入每个 stage 先将数据划分为两部分，如下图中的 part1、part2，区别在于 CSPNet 中直接对通道维度进行划分，而 YOLOv4 应用时是利用两个 1x1 卷积层来实现的。两个分支的信息在交汇处进行 Concat 拼接。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_y1XwtlmUpj.png" alt="CSPDarknet53"></p>
<h3 id="引入 spp 空间金字塔池化模块">引入 spp 空间金字塔池化模块</h3>
<p>  引入 SPP 结构来增加感受野，采用 1x1、5x5、9x9、13x13 的最大池化的方式，进行多尺度融合，输出按照通道进行 concat 融合。</p>
<p>  由于 CNN 网络后面接的全连接层需要固定的输入大小，故往往通过将输入图像 resize 到固定大小的方式输入卷积网络，这会造成几何失真影响精度。SPP 模块就解决了这一问题，他通过三种尺度的池化，将任意大小的特征图固定为相同长度的特征向量，传输给全连接层。因为卷积层后面的全连接层的结构是固定的。但在现实中，我们的输入的图像尺寸总是不能满足输入时要求的大小，然而通常的手法就是裁剪 (crop) 和拉伸(warp)，但这样做总归是不好的，其扭曲了原始的特征。而 SPP 层通过将候选区的特征图划分为多个不同尺寸的网格，然后对每个网格内都做最大池化，这样依旧可以让后面的全连接层得到固定的输入。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_HZM9ceelJG.png" alt=""></p>
<h3 id="在 neck 部分采用 fpn-pan 的结构"><strong>在 Neck 部分采用 FPN+PAN 的结构</strong></h3>
<p>  借鉴 2018 年图像分割领域 PANet, 相比于原始的 PAN 结构，YOLOV4 实际采用的 PAN 结构将 addition 的方式改为了 concatenation。如下图：</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_O9U0izUx4Y.png" alt=""></p>
<p>  由于 FPN 结构是自顶向下的，将高级特征信息以上采样的方式向下传递，但是融合的信息依旧存在不足，因此 YOLOv4 在 FPN 之后又添加了 PAN 结构，再次将信息从底部传递到顶部，如此一来，FPN 自顶向下传递强语义信息，而 PAN 则自底向上传递强定位信息，达到更强的特征聚合效果。</p>
<p>  整个 NECK 结构如下图所示：</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_FsjBe7If49.png" alt=""></p>
<p><br/><br/></p>
<h2 id="yolov5">YOLOv5</h2>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/d2f4aa5f2f69400b8e680c55760ad5f2_4SKImTYBPa.png" alt="YOLOv5 网络结构图"></p>
<p>  2020 年 2 月 YOLO 之父 Joseph Redmon 宣布退出计算机视觉研究领域，2020 年 4 月 23 日 YOLOv4 发布，2020 年 6 月 10 日 YOLOv5 发布。</p>
<ul>
<li>使用 Pytorch 框架，对用户非常友好，能够方便地训练自己的数据集，相对于 YOLO v4 采用的 Darknet 框架，Pytorch 框架更容易投入生产。</li>
<li>代码易读，整合了大量的计算机视觉技术，非常有利于学习和借鉴。</li>
<li>能够轻松的将 Pytorch 权重文件转化为安卓使用的 ONXX 格式，然后可以转换为 OpenCV 的使用格式，或者通过 CoreML 转化为 IOS 格式，直接部署到手机应用端。</li>
<li>有非常轻量级的模型大小， YOLOv5 的大小仅有 27MB ， 使用 Darknet 架构的 YOLOv4 有  244MB。</li>
</ul>
<h3 id="使用 sppf 结构代替了 spp">使用 SPPF 结构代替了 SPP</h3>
<p>  主要区别就是 MaxPool 由原来的并行调整为了串行，值得注意的是：串行两个 5 x 5 大小的 MaxPool 和一个 9 x 9 大小的 MaxPool 是等价的，串行三个 5 x 5 大小的 MaxPool 层和一个 13 x 13 大小的 MaxPool 是等价的。虽然并行和串行的效果一样，但是串行的效率更高，降低了耗时。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_mZbM7N3E_B.png" alt=""></p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image__NkT1SV9e7.png" alt=""></p>
<h3 id="focus 操作">Focus 操作</h3>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_1bR38WssFU.png" alt="Focus 操作"></p>
<p><br/><br/></p>
<h2 id="yolox">YOLOX</h2>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/3fd25ff946474c6b8a51b47cd2c240bd_IWu_YJdvCV.png" alt="YOLOX 网络结构图 -1"></p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_W9BH6ePYx9.png" alt="YOLOX 网络结构图 -2"></p>
<ul>
<li>一般情况下，可以选择<strong>Yolox-Nano、Yolox-Tiny、Yolox-s 用于移动端部署</strong>。</li>
<li><strong>Yolox-m、Yolox-l、Yolox-x 用于 GPU 服务器部署</strong></li>
</ul>
<p>  YOLO 检测器调整为了 Anchor-Free 形式并集成了其他先进检测技术（比如 decoupled head、label assignment SimOTA）取得了 SOTA 性能，比如：</p>
<p>  具有与 YOLOv4-CSP、YOLOv5-L 相当的参数量，YOLOX-L 取得了 50.0%AP 指标同时具有 68.9fps 推理速度，指标超过 YOLOv5-L 1.8%;</p>
<p>  值得一提的是，作者使用的 baseline 是 YOLOv3 + DarkNet53（所谓的 YOLOv3-SSP）</p>
<h3 id="1-decoupled-head- 解耦头">1. Decoupled Head 解耦头</h3>
<p>  检测头耦合会影响模型性能。采用解耦头替换 YOLO 的检测头可以显著改善模型收敛速度。解耦头结构考虑到 <strong>分类 </strong> 和 <strong> 定位</strong> 所关注的内容的不同。<br>
同时为了避免计算量的大量增加，YOLOX 的 Decoupled Head 结构（轻量解耦头），会先进行 1x1 的降维操作，然后再接上分类和定位两个并行分支（均为 3 × 3 卷积）。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_Liqa3kRe4J.png" alt=""></p>
<h3 id="2-mosaic-mixup- 数据增强">2. Mosaic + Mixup 数据增强</h3>
<ul>
<li>
<p><strong>Mosaic 数据增强</strong>：基本原理就是在训练集中随机选择若干个（一般是 4 个）图像，经过裁剪拼接形成新的训练集元素，可以缓解训练集元素少或者增强识别能力。</p>
</li>
<li>
<p>Mixup 数据增强： 对图像进行混类增强的算法，它将不同类之间的图像进行混合，从而扩充训练数据集</p>
</li>
</ul>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_xmL0MKtaB8.png" alt=""></p>
<h3 id="3-anchor-free">3. Anchor-free</h3>
<p>  YOLOv4、YOLOv5 均采用了 YOLOv3 原始的 anchor 设置。然而 anchor 机制存在诸多问题：</p>
<p>(1) 为获得最优检测性能，需要在训练之前进行聚类分析以确定最佳 anchor 集合，这些 anchor 集合存在数据相关性，泛化性能较差；<br>
(2) anchor 机制提升了检测头的复杂度。</p>
<p>  将 YOLO 转换为 anchor-free 形式非常简单，我们将每个位置的预测从 3 下降为 1 并直接预测四个值：即两个 offset 以及高宽。</p>
<p><a href="https://blog.csdn.net/SMF0504/article/details/109214527">AnchorFree 系列算法详解</a></p>
<h3 id="4-multi-positives">4. Multi positives</h3>
<p>  为确保与 YOLOv3 的一致性，前述 anchor-free 版本仅仅对每个目标赋予一个正样本，而忽视了其他高质量预测。参考 FCOS，我们简单的赋予中心 3×3 区域为正样本。</p>
<h3 id="5-simota">5. SimOTA</h3>
<p>  SimOTA 的作用是为不同目标设定不同的正样本数量，例如蚂蚁和西瓜，传统的正样本分配方案常常为同一场景下的西瓜和蚂蚁分配同样的正样本数，那要么蚂蚁有很多低质量的正样本，要么西瓜仅仅只有一两个正样本。对于哪个分配方式都是不合适的。</p>
<h3 id="6- 主干网络 -cspdarknet- 加入 fcous 结构">6. 主干网络（CSPDarknet）加入 Fcous 结构</h3>
<p>  主干网络加入 Fcous 结构，将图片宽高信息缩小，减小参数量，提升网络计算速度</p>
<p>  Fcous 结构：将输入的图片先经过 Fcos 结构对图片进行每隔一个像素取出一个值，得到四个特征层，然后再进行 concat。从而图片宽高的信息缩小，通道数增加。在原始信息丢失较少的情况下，减小了参数量。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_C5q9dlW-Bg.png" alt=""></p>
<h3 id="7-silu 激活函数">7. <strong>SiLU 激活函数</strong></h3>
<p>  <strong>SiLU 函数 </strong> 相比于 <strong>ReLU</strong> 非线性能力更强，同时继承了 <strong>ReLU</strong> 收敛更快的优点。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_g1bv8gGFv9.png" alt=""></p>
<p><br/><br/></p>
<h2 id="yolov6">YOLOv6</h2>
<p><a href="https://blog.csdn.net/qq_34795071/article/details/125442065">YOLOv6 网络结构图</a></p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/a0510238a9404914a6d341c0575973ad_yNpGFYrQkO.png" alt=""></p>
<p>  YOLOv6 是由美团推出的，所做的主要工作是为了更加适应 GPU 设备，将 2021 年的 RepVGG 结构引入到了 YOLO。YOLOv6 主要在 Backbone、Neck、Head 以及训练策略等方面进行了诸多的改进：</p>
<ul>
<li>统一设计了更高效的 Backbone 和 Neck：受到硬件感知神经网络设计思想的启发，基于 RepVGG style 设计了可重参数化、更高效的骨干网络 <strong>EfficientRep Backbone</strong> 和 <strong>Rep-PAN Neck</strong>。</li>
<li>检测头部分模仿 YOLOX，进行了解耦操作，优化设计了更简洁有效的 Efficient Decoupled Head，进一步降低了一般解耦头带来的额外延时开销。</li>
<li>在训练策略上，采用 Anchor-free 无锚范式，同时辅以 SimOTA 标签分配策略以及 SIoU 边界框回归损失来进一步提高检测精度。</li>
</ul>
<h3 id="1- 更适应 gpu 的骨干网络设计">1. 更适应 GPU 的骨干网络设计</h3>
<p>  YOLOv5/YOLOX 使用的 Backbone 和 Neck 都基于 CSPNet 搭建，采用了多分支的方式和残差结构。对于 GPU 等硬件来说，这种结构会一定程度上增加延时，同时减小内存带宽利用率。按照 RepVGG 的思路，为每一个 3x3 的卷积添加平行了一个 1x1 的卷积分支和恒等映射分支，然后在推理时融合为 3x3 的结构，这种方式对计算密集型的硬件设备会比较友好。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_vc92ntzriY.png" alt=""></p>
<h3 id="2- 简洁高效的 -decoupled-head">2. 简洁高效的 Decoupled Head</h3>
<p>  在 YOLOv6 中，采用了解耦检测头（Decoupled Head）结构，并对其进行了精简设计。原始 YOLOv5 的检测头是通过分类和回归分支融合共享的方式来实现的，而 YOLOX 的检测头则是将分类和回归分支进行解耦，同时新增了两个额外的 3x3 的卷积层，虽然提升了检测精度，但一定程度上增加了网络延时。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_zoR2HNFoDr.png" alt=""></p>
<h3 id="3-anchor-free- 无锚范式">3. <strong>Anchor-free 无锚范式</strong></h3>
<p>  YOLOv6 采用了更简洁的 Anchor-free 检测方法。由于 Anchor-based 检测器需要在训练之前进行聚类分析以确定最佳 Anchor 集合，这会一定程度提高检测器的复杂度；同时，在一些边缘端的应用中，需要在硬件之间搬运大量检测结果的步骤，也会带来额外的延时。而 Anchor-free 无锚范式因其泛化能力强，解码逻辑更简单，在近几年中应用比较广泛。经过对 Anchor-free 的实验调研，我们发现，相较于 Anchor-based 检测器的复杂度而带来的额外延时，Anchor-free 检测器在速度上有 51% 的提升。</p>
<h3 id="4-simota- 标签分配策略">4. <strong>SimOTA 标签分配策略</strong></h3>
<p>  为了获得更多高质量的正样本，YOLOv6 引入了 SimOTA 算法动态分配正样本，进一步提高检测精度。YOLOv5 的标签分配策略是基于 Shape 匹配，并通过跨网格匹配策略增加正样本数量，从而使得网络快速收敛，但是该方法属于静态分配方法，并不会随着网络训练的过程而调整。</p>
<h3 id="5-siou- 边界框回归损失">5. <strong>SIoU 边界框回归损失</strong></h3>
<p>  为了进一步提升回归精度，YOLOv6 采用了 SIoU 边界框回归损失函数来监督网络的学习。</p>
<p>  SIoU 损失函数由 4 个 Cost 函数组成：</p>
<ul>
<li>Angle cost 角度</li>
<li>Distance cost 距离</li>
<li>Shape cost 形状</li>
<li>IoU cost 重合度</li>
</ul>
<p><br/><br/></p>
<h2 id="yolov7">YOLOv7</h2>
<p>  官方版的 YOLOv7 相同体量下比 YOLOv5 精度更高，速度快 120%（FPS），比 YOLOX 快 180%（FPS）。YOLOv7 依旧基于 anchor based 的方法，同时在网络架构上增加 E-ELAN 层，并将 REP 层也加入进来，方便后续部署，同时在训练时，在 head 时，新增 Aux_detect 用于辅助检测，对预测结果的一种初筛，有种 two-stage 的感觉。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/f8a6ccbd93094b548804bc64b46468df_ZsJIM3i-zZ.png" alt=""></p>
<p>  根据上图的架构图走一遍网络流程：先对输入的图片预处理，对齐成 640*640 大小的 RGB 图片，输入到 backbone 网络中，根据 backbone 网络中的三层输出，在 head 层通过 backbone 网络继续输出三层不同 size 大小的<strong>feature map</strong>，经过 RepVGG block 和 conv，对图像检测的三类任务（分类、前后背景分类、边框）预测，输出最后的结果。</p>
<p>  YOLOv7 因为基于 anchor based 的目标检测，与 YOLOv5 相同，YOLOv6 的正负样本的匹配策略则与 YOLOX 相同，YOLOv7 则基本集成两家之所长。</p>
<p>  YOLOv7 大部分继承自 YOLOv5，包括整体网络架构、配置文件的设置和训练、推理、验证过程等等；此外，YOLOv7 也有不少继承自 YOLOR，毕竟是同一个作者前后年的工作，包括不同网络的设计、超参数设置以及隐性知识学习的加入；还有就是在正样本匹配时仿照了 YOLOX 的 SimOTA 策略。</p>
<p><strong>优势：参数量和计算量大幅度减少</strong>。</p>
<h3 id="1- 正样本分配策略">1. 正样本分配策略</h3>
<ul>
<li>中心点增加了一个 0.5 个单位的偏移扩散，提升召回。</li>
<li>为了让正样本更多</li>
<li>正样本分配，IoU 计算，通过累加和动态筛选正样本</li>
</ul>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_uITEYuxEGh.png" alt=""></p>
<p>  YOLOv7 的标签分配策略（正样本筛选），集成了 YOLOv5 和 YOLOX 两者的精华：</p>
<ul>
<li>
<p><strong>YOLOv5</strong>  </p>
<p>Step1：Autoanchor 策略，获得数据集最佳匹配的 9 个 anchor（可选）  </p>
<p>Step2：根据 GT 框与 anchor 的宽高比，过滤掉不合适的 anchor  </p>
<p>Step3：选择 GT 框的中心网格以及最邻近的 2 个邻域网格作为正样本筛选区域（辅助头则选择周围 4 个邻域网格）</p>
</li>
</ul>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_ZtqkIEEhGJ.png" alt=""></p>
<ul>
<li>
<p><strong>YOLOX</strong>  </p>
<p>Step4：计算 GT 框与正样本 IOU 并从大到小排序，选取前 10 个值进行求和（P6 前 20 个），并取整作为当前 GT 框的 K 值  </p>
<p>Step5：根据损失函数计算每个 GT 框和候选 anchor 的损失，保留损失最小的前 K 个  </p>
<p>Step6：去掉同一个 anchor 被分配到多个 GT 框的情况</p>
</li>
</ul>
<h3 id="2-sppcspc 模块">2. SPPCSPC 模块</h3>
<p><a href="https://yolov5.blog.csdn.net/article/details/126354660?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-126354660-blog-126531046.pc_relevant_recovery_v2&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-126354660-blog-126531046.pc_relevant_recovery_v2&amp;utm_relevant_index=1">https://yolov5.blog.csdn.net/article/details/126354660</a></p>
<p>  总的输入会被分成三段进入不同的分支，最中间的分支其实就是金字塔池化操作，左侧分支类似于 depthwise conv，但是请注意，中间的 3×3 卷积并未进行分组，依旧是标准卷积，右侧则为一个 point conv，最后将所有分支输出的信息流进行 concat。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_6RGn2lC09Q.png" alt=""></p>
<h3 id="3-e-elan 模块">3. E-ELAN 模块</h3>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_jFVY-Qwc0g.png" alt=""></p>
<p>  E-ELAN 只改变了计算模块中的结构，而过渡层的结构则完全不变。作者的策略是利用分组卷积来扩展计算模块的通道和基数，将相同的 group parameter 和 channel multiplier 用于计算每一层中的所有模块。然后，将每个模块计算出的特征图根据设置的分组数打乱成 G 组，最后将它们连接在一起。此时，每一组特征图中的通道数将与原始体系结构中的通道数相同。最后，作者添加了 G 组特征来 merge cardinality。除了维护原始的 ELAN 设计架构外，E-ELAN 还可以指导不同的分组模块来学习更多样化的特性。</p>
<h3 id="4- 辅助头检测">4. 辅助头检测</h3>
<p>  常用的方式是图（c）所示，即辅助头和引导头各自独立，分别利用 ground truth 和它们（辅助头、引导头）各自的预测结果实现标签分配。YOLOV7 算法中提出了利用引导头的预测结果作为指导，生成从粗到细的层次标签，将这些层次标签分别用于辅助头和引导头的学习，如下图（d）和（e）所示。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_dkzANMbGMQ.png" alt=""></p>
<h3 id="5- 复合模型缩放">5. 复合模型缩放</h3>
<p>  类似于 YOLOv5、Scale YOLOv4、YOLOX，一般是对 depth、width 或者 module scale 进行缩放，实现扩大或缩小 baseline 的目的。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_hGrBsf_uYx.png" alt=""></p>
<h3 id="6- 卷积重参化">6.  <strong>卷积重参化</strong></h3>
<p>  <strong>引入了卷积重参化并进行了改进 </strong> 采用梯度传播路径来分析不同的重参化模块应该和哪些网络搭配使用。同时分析出 RepConv 中的 identity 破坏了 ResNet 中的残差结构和 DenseNet 中的跨层连接，因此作者做了改进，采用没有 Identity 连接的 RepConv 结构进行卷积重参数化。下图是设计的用于 PlainNet 和 ResNet 的计划重参数卷积。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_P-a1KGH305.png" alt=""></p>
<h3 id="yolov7 基础版本的区别">YOLOv7 基础版本的区别</h3>
<p>  YOLOv7 基础版本有三种，分别是 YOLOv7、YOLOv7-tiny 和 YOLOv7-W6：</p>
<ul>
<li><strong>YOLOv7</strong>是针对普通 GPU 计算优化的基础模型。</li>
<li><strong>YOLOv7-tiny</strong>是针对边缘 GPU 优化的基础模型。计算机视觉模型的后缀“小”意味着它们针对边缘 AI 和深度学习工作负载进行了优化，并且更轻量级，可以在移动计算设备或分布式边缘服务器和设备上运行 ML。该模型对于分布式现实世界的计算机视觉应用程序很重要。与其他版本相比，边缘优化的 YOLOv7-tiny 使用 leaky ReLU 作为激活函数，而其他模型使用 SiLU 作为激活函数。</li>
<li><strong>YOLOv7-W6</strong>是针对云 GPU 计算优化的基础模型。此类云图形单元 (GPU) 是用于运行应用程序以在云中处理大量 AI 和深度学习工作负载的计算机实例，而无需在本地用户设备上部署 GPU。</li>
</ul>
<p><br/><br/></p>
<hr>
<br/>
<p> </p>
<p><br/><br/></p>
<h2 id="正负样本匹配策略对比">正负样本匹配策略对比</h2>
<h3 id="yolov5 的正负样本匹配策略">YOLOv5 的正负样本匹配策略</h3>
<p>  YOLOv5 基于 anchor based，在开始训练前，会基于训练集中 gt 框，通过 k-means 聚类算法，先验获得 9 个从小到大排列的 anchor 框。先将每个 gt 与 9 个 anchor 匹配（以前是 IOU 匹配，yolov5 中变成 shape 匹配，计算 gt 与 9 个 anchor 的长宽比，如果长宽比小于设定阈值，说明该 gt 和对应的 anchor 匹配）</p>
<p>  YOLOv5 有三层网络，9 个 anchor, 从小到大，每 3 个 anchor 对应一层 prediction 网络，gt 与之对应 anchor 所在的层，用于对该 gt 做训练预测，一个 gt 可能与几个 anchor 均能匹配上。<br>
所以一个 gt 可能在不同的网络层上做预测训练，大大增加了正样本的数量，当然也会出现 gt 与所有 anchor 都匹配不上的情况，这样 gt 就会被当成背景，不参与训练，说明 anchor 框尺寸设计的不好。</p>
<p>  在训练过程中怎么定义正负样本呢，因为 yolov5 中负样本不参与训练，所以要增加正样本的数量。gt 框与 anchor 框匹配后，得到 anchor 框对应的网络层的 grid，看 gt 中心点落在哪个 grid 上，不仅取该 grid 中和 gt 匹配的 anchor 作为正样本，还取相邻的的两个 grid 中的 anchor 为正样本。</p>
<p>  如下图所示， <strong>绿色的 gt 框中心点落在红色 grid 的第三象限里，那不仅取该 grid, 还要取左边的 grid 和下面的 grid，</strong> 这样基于三个 grid 和匹配的 anchor 就有三个中心点位于三个 grid 中心点，长宽为 anchor 长宽的正样本，同时 gt 不仅与一个 anchor 框匹配，如果跟几个 anchor 框都匹配上，所以可能有 3-27 个正样本，增大正样本数量。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_o0omt9JvWT.png" alt=""></p>
<h3 id="yolov6 的正负样本匹配策略">YOLOv6 的正负样本匹配策略</h3>
<p>  YOLOv6 的正负样本匹配策略同 YOLOX，YOLOX 因为是 anchor free，anchor free 因为缺少先验框这个先验知识，理论上应该是对场景的泛化性更好，同时参见旷视的官方解读：Anchor 增加了检测头的复杂度以及生成结果的数量，将大量检测结果从 NPU 搬运到 CPU 上对于某些边缘设备是无法容忍的。</p>
<p>  OLOv6 中的正样本筛选，主要分成以下几个部分：<br>
①：基于两个维度来粗略筛选；<br>
②：基于 simOTA 进一步筛选。<br>
具体步骤如下：</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_Y3TQa7VFVz.png" alt=""></p>
<p>  tie 标签的 gt 如图所示，找到 gt 的中心点（Cx,Cy）, 计算中心点到左上角的距离（l_l,l_t）, 右下角坐标（l_r,l_b）, 然后从两步筛选正样本：</p>
<p>  第一步粗略筛选第一个维度是如果 grid 的中心点落在 gt 中，则认为该 grid 所预测的框为正样本，如图所示的红色和橙色部分 <strong>，第二个维度是 </strong> 以 gt 的中心点所在 grid 的中心点为中心点，上下左右扩充 2.5 个 grid 步长范围内的 grid，则默认该 grid 所预测的框为正样本，如图紫色和橙色部分。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_XY1F6R5rc3.png" alt=""></p>
<p>第二步：通过 SimOTA 进一步筛选：</p>
<p>  SimOTA 流程如下：<br>
①计算初筛正样本与 gt 的 IOU，并对 IOU 从大到小排序，取前十之和并取整, 记为 b。<br>
②计算初筛正样本的 cos 代价函数，将 cos 代价函数从小到大排列，取 cos 前 b 的样本为正样本。<br>
同时考虑同一个 grid 预测框被两个 gt 关联的情况，取 cos 较小的值，该预测框为对应的 gt 的正样本。</p>
<h3 id="yolov7 的正负样本匹配策略">YOLOv7 的正负样本匹配策略</h3>
<p>  YOLOv7 因为基于 anchor based , 集成 v5 和 v6 两者的精华，即 YOLOv6 中的第一步的初筛换成了 YOLOv5 中的筛选正样本的策略，保留第二步的 simOTA 进一步筛选策略。</p>
<p>  同时 YOLOv7 中有 aux_head 和 lead_head 两个 head ,aux_head 做为辅助，其筛选正样本的策略和 lead_head 相同，但更宽松。如在第一步筛选时，lead_head 取中心点所在 grid 和与之接近的两个 grid 对应的预测框做为正样本，如图绿色的 grid，aux_head 则取中心点以及周围的 4 个预测框为正样本。如下图绿色＋蓝色区域的 grid。</p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_5XPTEswQNp.png" alt=""></p>
<p>  同时在第二步 SimOTA 部分，lead_head 是计算初筛正样本与 gt 的 IOU，并对 IOU 从大到小排序，取前十之和并取整，记为 b。aux_head 则取前二十之和并取整。其他步骤相同，aux_head 主要是为了增加召回率，防止漏检，lead_head 再基于 aux_head 做进一步筛选。</p>
<p><br/><br/></p>
<h2 id="yolov5- 和 -yolox 的对比">YOLOv5 和 YOLOX 的对比</h2>
<p><a href="https://zhuanlan.zhihu.com/p/397993315">深入浅出 Yolo 系列之 Yolox 核心基础完整讲解</a></p>
<p><strong>YOLOv5：</strong></p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_97fBqdMwff.png" alt=""></p>
<p><strong>YOLOX：</strong></p>
<p><img src="/images/YOLO%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/image_JR25nDFTWY.png" alt=""></p>
<p>由上面两张图的对比，及前面的内容可以看出，<strong>Yolov5s 和 Yolox-s 主要区别 </strong> 在于：</p>
<p><strong>（1）输入端：</strong> 在 Mosa 数据增强的基础上，增加了 Mixup 数据增强效果；</p>
<p><strong>（2）Backbone：</strong> 激活函数采用 SiLU 函数；</p>
<p><strong>（3）Neck：</strong> 激活函数采用 SiLU 函数；</p>
<p><strong>（4）输出端：</strong> 检测头改为 Decoupled Head、采用 anchor free、multi positives、SimOTA 的方式。</p>
<p>在前面 Yolov3 baseline 的基础上，以上的 tricks，取得了很不错的涨点。</p>
<p><br/><br/></p>
<h2 id="参考">参考</h2>
<ul>
<li><a href="https://rockyding.blog.csdn.net/article/details/107199675?spm=1001.2101.3001.6650.4&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-4-107199675-blog-126392748.pc_relevant_3mothn_strategy_and_data_recovery&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-4-107199675-blog-126392748.pc_relevant_3mothn_strategy_and_data_recovery&amp;utm_relevant_index=9">https://rockyding.blog.csdn.net/article/details/107199675</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/539932517"> YOLO 家族进化史（v1-v7）</a></li>
</ul>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>计算机视觉</category>
      </categories>
      <tags>
        <tag>计算机视觉</tag>
        <tag>YOLO</tag>
        <tag>目标检测</tag>
      </tags>
  </entry>
  <entry>
    <title>稀疏矩阵汇总</title>
    <url>/SongXJ01/2024/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<p>  稀疏矩阵的数据结构有很多种，每种数据结构都有它的优点，本文中列举了目前主流的稀疏结构并分析了其特点。稀疏矩阵的存储涉及到多种数据结构的设计与选择，目前流行的稀疏数据结构包括 COO（Coordinate）、CSR（Compressed Sparse Row）、CSC（Compressed Sparse Column）、LIL（Row-based List of Lists）、DIA（DIAgonal storage）、BSR（Block Sparse Row）、ELL（ELLPACK）等。COO 格式通过使用三个数组来分别表示非零元素的坐标和值，适用于具有 <strong> 任意分布 </strong> 的非零元素的稀疏矩阵；CSR 和 CSC 格式则分别以行和列为主导，使用压缩行和压缩列的方式存储非零元素，适合于 <strong> 以行或列为基础 </strong> 的操作，如矩阵向量乘法和 LU 分解；LIL 格式通过链表的方式按行存储非零元素，提供了灵活的 <strong> 插入 </strong> 和<strong>修改 </strong> 操作；DIA 格式则仅存储对角线元素和每个对角线的偏移量，实现了压缩存储；BSR 提供了良好的 <strong> 分块 </strong> 特性；ELL 格式则将非零元素对齐存储在二维数组中，具有高效的空间和访问效率。</p>
<span id="more"></span>
<p>  在选择稀疏矩阵的数据结构时，应综合考虑应用场景和需求。不同的数据结构在不同矩阵规模下可能呈现不同的特性和效率。因此，深入了解各种数据结构的优势和限制，根据实际情况选择合适的数据结构至关重要。这样可以确保在稀疏矩阵的存储、操作和计算过程中获得最佳的性能和效率。</p>
<p><br/><br/></p>
<blockquote>
<p><strong>相关知识补充</strong>：</p>
<p>下文中会多次提到稀疏矩阵的 <strong> 向量内积</strong>（SpMV，Sparse Matrix-vector Product）操作，在此强调定义并复习一下其具体的过程。假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>m</mi><mo>×</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">A \in \mathbb{R}^{m \times n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>，以及 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">x \in \mathbb{R}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>A</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">y=Ax</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">x</span></span></span></span> 即为 <strong>SpMV</strong> 运算，其计算结果是一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> 的向量，按照正常的稠密矩阵的算法需要进行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">mn^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 次乘法，且需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 中的每个元素都需要被重复检索 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> 次。</p>
<ul>
<li>若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 是一个 CSR 格式的稀疏矩阵，我们只需要计算矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 中非零元所在行即可；</li>
<li>若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 是一个 CSC 格式的稀疏矩阵，我们只需要检索矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 中非零元所在列索引对应的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">x[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span></span></span></span> 即可；</li>
<li>若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 是一个 ELL 格式的稀疏矩阵，其使用两个矩阵分别存储非零元素的列索引和对应的数值。在进行 SpMV 运算时，ELL 格式可以通过并行计算同时访问每一行的非零元素和对应的向量元素，减少了数据依赖性，提高了计算效率。</li>
</ul>
</blockquote>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="coo-coordinate">COO，Coordinate</h2>
<p>  COO（Coordinate）通过使用三个数组来表示矩阵的非零元素的坐标和对应的值，从而实现高效的存储和操作。其中，数组 <code>row</code> 存储行坐标，数组 <code>col</code> 存储列坐标，数组 <code>data</code> 存储对应的值。COO 格式适用于具有 <strong> 任意分布 </strong> 的非零元素的稀疏矩阵，<strong>但在稀疏性较高且需要频繁访问的情况下可能效率较低，因为元素的访问需要通过遍历数组来找到特定位置的元素</strong>。</p>
<ul>
<li><code>row</code>：行索引数组</li>
<li><code>col</code>：列索引数组</li>
<li><code>data</code>：数据数组</li>
</ul>
<h3 id="示例">示例</h3>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">
A = \left[\begin{array}{llll}
\mathbf{1} &amp; \color{lightgray}0 &amp; \mathbf{2} &amp; \mathbf{3}\\
\color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0\\
\mathbf{4} &amp; \color{lightgray}0 &amp; \mathbf{5} &amp; \mathbf{6}\\
\end{array}\right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">2</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">3</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>将上述矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 转换成 COO 格式，结果如下所示：</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><code>row</code></td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>2</td>
<td>2</td>
<td>2</td>
</tr>
<tr>
<td><code>col</code></td>
<td>0</td>
<td>2</td>
<td>3</td>
<td>0</td>
<td>2</td>
<td>3</td>
</tr>
<tr>
<td><code>data</code></td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>6</td>
</tr>
</tbody>
</table>
<h3 id="性质">性质</h3>
<p><strong>优点</strong></p>
<ul>
<li>可以高效转换成其他稀疏矩阵的结构。</li>
</ul>
<p><strong>缺点</strong></p>
<ul>
<li>不能直接进行算数运算和行列切片。</li>
</ul>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="csr-compress-sparse-row">CSR，Compress Sparse Row</h2>
<p>  CSR 是在 COO 的基础上将行进行压缩，它通过将矩阵的行存储为一组压缩行，并使用两个数组来表示非零元素的 <strong> 值</strong>和对应的 <strong> 列索引 </strong>，从而实现高效的存储和操作。该格式在处理稀疏矩阵时具有较高的空间效率和访问效率，特别<strong> 适用于以行为主导的操作</strong>，如矩阵向量乘法和稀疏矩阵的求解。</p>
<ul>
<li><code>indptr</code>：行指针偏移数组</li>
<li><code>indices</code>：列索引数组</li>
<li><code>data</code>：数据数组</li>
</ul>
<p><strong>属性的特征：</strong></p>
<ul>
<li>矩阵行数 = <code>indptr</code> 数组的长度 - 1</li>
<li>矩阵列数 = <code>indices</code> 数组中最大的元素数值 + 1</li>
<li><code>indices</code> 和 <code>data</code> 的数组长度相同，且其长度即为 <code>nnz</code></li>
</ul>
<h3 id="示例">示例</h3>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">
A = \left[\begin{array}{llll}
\mathbf{1} &amp; \color{lightgray}0 &amp; \mathbf{2} &amp; \mathbf{3}\\
\color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0\\
\mathbf{4} &amp; \color{lightgray}0 &amp; \mathbf{5} &amp; \mathbf{6}\\
\end{array}\right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">2</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">3</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>  将上述矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 转换成 CSR 格式，结果如下所示。CSR 的数值数组 <code>data</code> 和列索引数组 <code>indices</code> 与 COO 格式的表示一致，行指针偏移数组表示每一行的第一个元素在 <code>data</code> 数组中的起始偏移位置，即前面每行包含的非零元素个数的总和。如下所示的 <code>indptr</code>：</p>
<ul>
<li><strong>row[0]：</strong> 因为第一行的非零元素是矩阵中的第一个非零元素，所以是 0 偏移，即<code>indptr[0]=0</code>；</li>
<li><strong>row[1]：</strong> 第二行元素的前面已经有了第一行的 3 个非零元素，所以是 3 偏移，即<code>indptr[1]=3</code>；</li>
<li><strong>row[2]：</strong> 因为第二行没有非零元素，所以第三行的偏移量没有增加，依然是 3 偏移，即<code>indptr[2]=3</code>；</li>
<li>最后，在行指针偏移数组 <code>indptr</code> 的末尾补上矩阵的总非零元素个数作为总偏移量，本例中是 6。</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><code>indptr</code></td>
<td>0</td>
<td>3</td>
<td>3</td>
<td>6</td>
<td></td>
<td></td>
</tr>
<tr>
<td><code>indices</code></td>
<td>0</td>
<td>2</td>
<td>3</td>
<td>0</td>
<td>2</td>
<td>3</td>
</tr>
<tr>
<td><code>data</code></td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>6</td>
</tr>
</tbody>
</table>
<h3 id="性质">性质</h3>
<p><strong>优点</strong></p>
<ul>
<li>可以高效计算 CSR 之间的加法和乘法；</li>
<li>可以高效进行 SpMV 运算；</li>
<li>可以高效进行的行切片。</li>
</ul>
<p><strong>缺点</strong></p>
<ul>
<li>列切片操作较慢（列切片考虑 CSC）；</li>
<li>转换成其他稀疏矩阵的结构时效率较低（可以考虑 LIL 或 DOK）。</li>
</ul>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="csc-compressed-sparse-column">CSC，Compressed Sparse Column</h2>
<p>  CSC（Compressed Sparse Column）和 CSR 的原理相同，只是矩阵按列压缩存储。它通过将矩阵的列存储为一组压缩列，并使用两个数组来表示非零元素的 <strong> 值</strong>和对应的 <strong> 行索引</strong>，从而实现高效的存储和操作。该格式在处理稀疏矩阵时具有较高的空间效率和访问效率，特别适用于以列为主导的操作，如矩阵向量乘法和 LU 分解。</p>
<ul>
<li><code>indptr</code>：列指针偏移数组</li>
<li><code>indices</code>：行索引数组</li>
<li><code>data</code>：数据数组</li>
</ul>
<p><strong>属性的特征：</strong></p>
<ul>
<li>CSC 和 CSR 的表示互为转置，即矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 的 CSC 表示就是矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">A^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span> 的 CSR 表示；</li>
<li>矩阵列数 = <code>indptr</code> 数组的长度 - 1 ；</li>
<li>矩阵行数 = <code>indices</code> 数组中最大的元素数值 + 1 ；</li>
<li><code>indices</code> 和 <code>data</code> 的数组长度相同，且其长度即为 <code>nnz</code> 。</li>
</ul>
<h3 id="示例">示例</h3>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">
A = \left[\begin{array}{llll}
\mathbf{1} &amp; \color{lightgray}0 &amp; \mathbf{2} &amp; \mathbf{3}\\
\color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0\\
\mathbf{4} &amp; \color{lightgray}0 &amp; \mathbf{5} &amp; \mathbf{6}\\
\end{array}\right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">2</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">3</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>  将上述矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 转换成 CSC 格式，结果如下所示。CSC 的转换和 CSR 的原理相同，只是从按行压缩转换成了按列压缩存储。如下所示：</p>
<ul>
<li><strong>col[0]：</strong> 第一列的第一个非零元素 <code>A[0,0]=1</code> 是 0 偏移，且行索引为 0，即 <code>indptr[0]=0</code>，<code>indices[0]=0</code>；第一列的第二个非零元素 <code>A[2,0]=4</code>，行索引为 2，即 <code>indices[1]=2</code>；</li>
<li><strong>col[1]：</strong> 第二列元素的前面已经有了第一列的 2 个非零元素，所以是 2 偏移，即<code>indptr[1]=2</code>；</li>
<li><strong>col[2]：</strong> 因为第二列没有非零元素，所以第三列的偏移量没有增加，依然是 2 偏移，即 <code>indptr[2]=2</code>，而第三列的第一个非零元素 <code>A[0,2]=2</code> 行索引为 0，即 <code>indices[2]=0</code>，以此类推得到非零元素 <code>A[2,2]=5</code> 的行索引为 <code>indices[3]=2</code>；</li>
<li><strong>col[3]：</strong> 第四列的前面已经有了 4 个非零元素，所以偏移量为 4，即 <code>indptr[3]=4</code>，类似得到非零元素 <code>A[0,3]=3</code> 的行索引为 <code>indices[4]=0</code>，非零元素 <code>A[2,3]=6</code>的行索引为 <code>indices[5]=2</code>；</li>
<li>最后，在列指针偏移数组 <code>indptr</code> 的末尾补上矩阵的总非零元素个数作为总偏移量，本例中是 6。</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><code>indptr</code></td>
<td>0</td>
<td>2</td>
<td>2</td>
<td>4</td>
<td>6</td>
<td></td>
</tr>
<tr>
<td><code>indices</code></td>
<td>0</td>
<td>2</td>
<td>0</td>
<td>2</td>
<td>0</td>
<td>2</td>
</tr>
<tr>
<td><code>data</code></td>
<td>1</td>
<td>4</td>
<td>2</td>
<td>5</td>
<td>3</td>
<td>6</td>
</tr>
</tbody>
</table>
<h3 id="性质">性质</h3>
<p><strong>优点</strong></p>
<ul>
<li>可以高效计算 CSC 之间的加法和乘法；</li>
<li>可以高效进行 SpMV 运算，但是会略差于 CSR 和 BSR；</li>
<li>可以高效进行的列切片。</li>
</ul>
<p><strong>缺点</strong></p>
<ul>
<li>行切片操作较慢（行切片考虑 CSR）；</li>
<li>转换成其他稀疏矩阵的结构时效率较低（可以考虑 LIL 或 DOK）。</li>
</ul>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="lil-row-based-list-of-lists-sparse">LIL，Row-based List of Lists sparse</h2>
<p>  LIL（Row-based List of Lists sparse）使用 <strong> 链表 </strong> 的方式按行存储矩阵的非零元素。每一行都由一个链表表示，链表中的节点存储了非零元素的 <strong> 值</strong>和对应的 <strong> 列索引</strong>。</p>
<ul>
<li><code>rows</code>：行索引数组</li>
<li><code>data</code>：数据数组</li>
</ul>
<h3 id="示例">示例</h3>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">
A = \left[\begin{array}{llll}
\mathbf{1} &amp; \color{lightgray}0 &amp; \mathbf{2} &amp; \mathbf{3}\\
\color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0\\
\mathbf{4} &amp; \color{lightgray}0 &amp; \mathbf{5} &amp; \mathbf{6}\\
\end{array}\right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">2</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">3</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>将上述矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 转换成 LIL 格式，结果如下所示：</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><code>rows</code></td>
<td>list([0, 2, 3])</td>
<td>list([])</td>
<td>list([0, 2, 3])</td>
</tr>
<tr>
<td><code>data</code></td>
<td>list([1, 2, 3])</td>
<td>list([])</td>
<td>list([4, 5, 6])</td>
</tr>
</tbody>
</table>
<h3 id="性质">性质</h3>
<p><strong>优点</strong></p>
<ul>
<li>可以高效转换成其他稀疏矩阵的结构；</li>
<li>支持灵活切片；</li>
<li>可以灵活使用列表赋值来添加元素。</li>
</ul>
<p><strong>缺点</strong></p>
<ul>
<li>运算 LIL + LIL 的时候比较慢（可以考虑 CSR 或 CSC）；</li>
<li>列切片操作较慢（列切片考虑 CSC）；</li>
<li>进行 SpMV 运算操作较慢（可以考虑 CSR/CSC ）；</li>
<li>当矩阵很大时，考虑使用 COO。</li>
</ul>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="dia-diagonal-storage">DIA，DIAgonal storage</h2>
<p>  DIA（DIAgonal storage）通过仅存储 <strong> 对角线元素 </strong> 和每个对角线的 <strong> 偏移量 </strong> 来实现压缩存储。</p>
<ul>
<li><code>data</code>：数据数组，每一行代表对角线，列代表元素所在列；</li>
<li><code>offsets</code>：对角线偏移量数组，其存储了每条非零对角线基于主对角线的偏移量，在主对角线下方则为负值，在主对角线上方则为正值。</li>
</ul>
<h3 id="示例">示例</h3>
<p><img src="/images/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5%E6%B1%87%E6%80%BB/DIA_%E7%9F%A9%E9%98%B5A.png" alt="示例矩阵（为了更加方便看出对角线，这里用 0 填充将矩阵 A 补充成方阵）"></p>
<p>  将上述矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 转换成 DIA 格式，结果如下所示，首先将矩阵填充为方阵，从左下向右上遍历对角线。</p>
<ul>
<li>第一条对角线为 0，忽略；</li>
<li>第二条对角线为 [4, 0]，记录到 <code>data</code> 数组中，列索引为原所在列，并记录其相对于主对角线的偏移量为 -2；</li>
<li>第三条对角线为 [0, 0, 0]，忽略；</li>
<li>第四条对角线为 [1, 0, 5, 0]，记录到 <code>data</code> 数组中，因为这是主对角线，所以偏移量为 0；</li>
<li>第五条对角线为 [0, 0, 6]，记录到 <code>data</code> 数组中，并记录其相对于主对角线的偏移量为 1；</li>
<li>第六条对角线为 [2, 0]，记录到 <code>data</code> 数组中，并记录其相对于主对角线的偏移量为 2；</li>
<li>第七条对角线为 [3]，记录到 <code>data</code> 数组中，并记录其相对于主对角线的偏移量为 3。</li>
</ul>
<p>  DIA 格式的 <code>data</code> 矩阵和 <code>offsets</code> 数组：</p>
<p><img src="/images/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5%E6%B1%87%E6%80%BB/DIA_offset_%E6%95%B0%E7%BB%84.png" alt="DIA 格式的 data 矩阵和 offsets 数组"></p>
<p>  由此例可见 DIA 并不适合存储不具有强对角性质的矩阵，会因为一些散落在非对角线上的非零元素而浪费过多的空间内存。而下面这个例子同样为 6 个非零元素，使用 DIA 格式存储就十分适合。</p>
<p><img src="/images/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5%E6%B1%87%E6%80%BB/DIA_%E7%9F%A9%E9%98%B5B.png" alt="适合 DIA 存储格式的矩阵"></p>
<p>  DIA 格式的 <code>data</code> 矩阵和 <code>offsets</code> 数组：</p>
<p><img src="/images/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5%E6%B1%87%E6%80%BB/DIA_offset_%E6%95%B0%E7%BB%84B.png" alt="DIA 格式的 data 矩阵和 offsets 数组"></p>
<h3 id="性质">性质</h3>
<p><strong>优点</strong></p>
<ul>
<li>适用于存储具有多个对角线的稀疏矩阵。相比于其他稀疏矩阵格式（如 COO、CSR 和 CSC），DIA 格式通常需要更少的存储空间。</li>
</ul>
<p><strong>缺点</strong></p>
<ul>
<li>对于非对角线上的元素需要较大的多余存储空间，和较高的访问代价；</li>
<li>因为对角线的长度固定，所以修改比较困难。</li>
</ul>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="msr-modified-sparse-row">MSR，Modified Sparse Row</h2>
<p>MSR 是对 CSR 方式的一种改进，其 <strong> 引入了对角元素的优化机制</strong>，对于非对角元素存储的基本想法依然是 CSR。</p>
<h3 id="属性">属性</h3>
<ul>
<li><code>diagonal</code>：存储主对角线上的数据数组</li>
<li><code>indptr</code>：行指针偏移数组</li>
<li><code>indices</code>：列索引数组</li>
<li><code>data</code>：数据数组</li>
</ul>
<h3 id="示例">示例</h3>
<p><img src="/images/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5%E6%B1%87%E6%80%BB/DIA_%E7%9F%A9%E9%98%B5A.png" alt="示例矩阵（为了更加方便看出对角线，这里用 0 填充将矩阵 A 补充成方阵）"></p>
<p>  首先将矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 中的主对角线提取出来，并存储在 <code>diagonal</code> 数组中。然后将剩下的部分使用 CSR 的格式进行存储，如下所示：</p>
<table>
<thead>
<tr>
<th><code>diagonal</code></th>
<th>1</th>
<th>0</th>
<th>5</th>
<th>0</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>indptr</code></td>
<td>0</td>
<td>2</td>
<td>2</td>
<td>4</td>
</tr>
<tr>
<td><code>indices</code></td>
<td>2</td>
<td>3</td>
<td>0</td>
<td>3</td>
</tr>
<tr>
<td><code>data</code></td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>6</td>
</tr>
</tbody>
</table>
<h3 id="性质">性质</h3>
<p>  MSR 相比 CSR 在存储上更加紧凑，可以节省存储空间。</p>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="bsr-block-sparse-row">BSR，Block Sparse Row</h2>
<p>  BSR（Block Sparse Row）是一种用于特殊稀疏矩阵的存储方式。这类矩阵的特点是矩阵可以均匀分块，并且非零矩阵元素恰好位于某些块上。BSR 格式可以通过类似于 CSR 格式的方式对矩阵进行压缩存储，不同之处在于存储的不再是单个矩阵元素，而是矩阵的一个子块。</p>
<ul>
<li><code>indptr</code>：行指针偏移数组</li>
<li><code>indices</code>：列索引数组</li>
<li><code>data</code>：数据数组</li>
<li><code>blocksize (R, C)</code>：其中的 <code>R</code> 和 <code>C</code> 分别代表分块矩阵的行和列，其需要满足被原矩阵的行和列整除。</li>
</ul>
<h3 id="示例">示例</h3>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">
A = \left[\begin{array}{llll}
\mathbf{1} &amp; \color{lightgray}0 &amp; \mathbf{2} &amp; \mathbf{3}\\
\color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0\\
\mathbf{4} &amp; \color{lightgray}0 &amp; \mathbf{5} &amp; \mathbf{6}\\
\end{array}\right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">2</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">3</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>  将上述矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 转换成 BSR 格式，结果如下所示。BSR 的转化方式和 CSR 一样，又因为矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 不具有局部块，所以 <code>blocksize=(1, 1)</code>，<code>indptr</code>、<code>indices</code> 和 <code>data</code> 均与 CSR 格式的结果完全一样。</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><code>indptr</code></td>
<td>0</td>
<td>3</td>
<td>3</td>
<td>6</td>
<td></td>
<td></td>
</tr>
<tr>
<td><code>indices</code></td>
<td>0</td>
<td>2</td>
<td>3</td>
<td>0</td>
<td>2</td>
<td>3</td>
</tr>
<tr>
<td><code>data</code></td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>6</td>
</tr>
</tbody>
</table>
<p>  如果把 <code>blocksize</code> 改成 <strong>(2, 2)</strong> 其他的均不变，则表示的是一个扩大后的 A 矩阵，如下所示：</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left left left left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">6</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">6</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">6</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">
A = \left[\begin{array}{llllllll}
\mathbf{1} &amp; \mathbf{1} &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \mathbf{2} &amp; \mathbf{2} &amp; \mathbf{3} &amp; \mathbf{3}\\
\mathbf{1} &amp; \mathbf{1} &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \mathbf{2} &amp; \mathbf{2} &amp; \mathbf{3} &amp; \mathbf{3}\\
\color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0\\
\color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0\\
\mathbf{4} &amp; \mathbf{4} &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp;  \mathbf{5} &amp; \mathbf{5} &amp; \mathbf{6} &amp; \mathbf{6}\\
\mathbf{4} &amp; \mathbf{4} &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp;  \mathbf{5} &amp; \mathbf{5} &amp; \mathbf{6} &amp; \mathbf{6}\\
\end{array}\right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:7.20703em;vertical-align:-3.3500499999999995em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8569800000000005em;"><span style="top:-0.44997000000000076em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-1.5999700000000008em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-2.195970000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-2.791970000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3879700000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.9839700000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.579970000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.615960000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-5.856980000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500499999999995em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.850000000000001em;"><span style="top:-6.010000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span></span></span><span style="top:-4.810000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span></span></span><span style="top:-3.6100000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.2100000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">4</span></span></span></span><span style="top:-0.009999999999999953em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.850000000000001em;"><span style="top:-6.010000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span></span></span><span style="top:-4.810000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span></span></span><span style="top:-3.6100000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.2100000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">4</span></span></span></span><span style="top:-0.009999999999999953em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.850000000000001em;"><span style="top:-6.010000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-4.810000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-3.6100000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.2100000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-0.009999999999999953em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.850000000000001em;"><span style="top:-6.010000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-4.810000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-3.6100000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.2100000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-0.009999999999999953em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.850000000000001em;"><span style="top:-6.010000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">2</span></span></span></span><span style="top:-4.810000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">2</span></span></span></span><span style="top:-3.6100000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.2100000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">5</span></span></span></span><span style="top:-0.009999999999999953em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.850000000000001em;"><span style="top:-6.010000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">2</span></span></span></span><span style="top:-4.810000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">2</span></span></span></span><span style="top:-3.6100000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.2100000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">5</span></span></span></span><span style="top:-0.009999999999999953em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.850000000000001em;"><span style="top:-6.010000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">3</span></span></span></span><span style="top:-4.810000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">3</span></span></span></span><span style="top:-3.6100000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.2100000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">6</span></span></span></span><span style="top:-0.009999999999999953em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.850000000000001em;"><span style="top:-6.010000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">3</span></span></span></span><span style="top:-4.810000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">3</span></span></span></span><span style="top:-3.6100000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.2100000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">6</span></span></span></span><span style="top:-0.009999999999999953em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8569800000000005em;"><span style="top:-0.44997000000000076em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-1.5999700000000008em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-2.195970000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-2.791970000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3879700000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.9839700000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.579970000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.615960000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-5.856980000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500499999999995em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="性质">性质</h3>
<p><strong>优点</strong></p>
<ul>
<li>具有良好的数据局部性。</li>
</ul>
<p><strong>缺点</strong></p>
<ul>
<li>适用范围有限。</li>
</ul>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="ell-ellpack">ELL，ELLPACK</h2>
<p>  ELL（ELLPACK）是一种用于稀疏矩阵存储和操作的格式，它通过将非零元素按行对齐存储在一个二维数组中，同时在每行中保留对应的列索引，实现高效的空间和访问效率。</p>
<ul>
<li><code>indices</code>：列索引矩阵</li>
<li><code>data</code>：数据矩阵</li>
</ul>
<h3 id="示例">示例</h3>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">
A = \left[\begin{array}{llll}
\mathbf{1} &amp; \color{lightgray}0 &amp; \mathbf{2} &amp; \mathbf{3}\\
\color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0\\
\mathbf{4} &amp; \color{lightgray}0 &amp; \mathbf{5} &amp; \mathbf{6}\\
\end{array}\right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">2</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">3</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>  ELL 使用两个与原始矩阵具有相同行数的矩阵来存储稀疏矩阵，其中第一个矩阵（列索引矩阵<code>indices</code> ）存储列号，第二个矩阵（数值矩阵 <code>data</code> ）存储数值。行号则通过矩阵的行号来表示。这两个矩阵的每一行都按照从头开始的顺序存放元素，如果没有元素，则使用特定的标志（例如 *）来表示结束。</p>
<p><code>indices</code>：</p>
<table>
<thead>
<tr>
<th>row</th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>0</td>
<td>2</td>
<td>3</td>
<td>*</td>
</tr>
<tr>
<td>1</td>
<td>*</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>0</td>
<td>2</td>
<td>3</td>
<td>*</td>
</tr>
</tbody>
</table>
<p><code>data</code>：</p>
<table>
<thead>
<tr>
<th>row</th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>*</td>
</tr>
<tr>
<td>1</td>
<td>*</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>4</td>
<td>5</td>
<td>6</td>
<td>*</td>
</tr>
</tbody>
</table>
<h3 id="性质">性质</h3>
<p><strong>优点</strong></p>
<ul>
<li>适用于存储具有相对较小非零元素数量的稀疏矩阵。相比于传统的稀疏矩阵存储格式（如 COO、CSR 和 CSC），ELL 格式通常需要更少的存储空间；</li>
<li>可以高效进行 SpMV 运算；</li>
<li>具有高效的行访问性能。</li>
</ul>
<p><strong>缺点</strong></p>
<ul>
<li>因为行数是固定的，所以修改较为困难。</li>
</ul>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="hybrid-ell-coo- 混合存储">Hybrid（ELL + COO）混合存储</h2>
<p>  为了解决 ELL 中某一行特别多，造成其他行的浪费，那么把这些多出来的元素用 COO 单独存储。</p>
<p><strong>ELL 部分：</strong></p>
<ul>
<li><code>indices</code>：列索引矩阵</li>
<li><code>data_ell</code>：数据矩阵</li>
</ul>
<p><strong>COO 部分：</strong></p>
<ul>
<li><code>row</code>：行索引数组</li>
<li><code>col</code>：列索引数组</li>
<li><code>data_coo</code>：数据数组</li>
</ul>
<h3 id="示例">示例</h3>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="lightgray"><mn>0</mn></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn mathvariant="bold">6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">
A = \left[\begin{array}{llll}
\mathbf{1} &amp; \color{lightgray}0 &amp; \mathbf{2} &amp; \mathbf{3}\\
\color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0 &amp; \color{lightgray}0\\
\mathbf{4} &amp; \color{lightgray}0 &amp; \mathbf{5} &amp; \mathbf{6}\\
\end{array}\right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">2</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">3</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="color:lightgray;">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>  因为第三行的非零元素比其它行多一个，若使用纯 ELL 格式会造成其他行的空间浪费，因此对于多出来的非零元素使用 COO 格式进行单独存储。</p>
<p><strong>ELL 部分：</strong><br>
<code>indices</code>：</p>
<table>
<thead>
<tr>
<th>row</th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>0</td>
<td>2</td>
<td>*</td>
</tr>
<tr>
<td>1</td>
<td>1</td>
<td>2</td>
<td>*</td>
</tr>
<tr>
<td>2</td>
<td>0</td>
<td>2</td>
<td>*</td>
</tr>
</tbody>
</table>
<p><code>data_ell</code>：</p>
<table>
<thead>
<tr>
<th>row</th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>1</td>
<td>2</td>
<td>*</td>
</tr>
<tr>
<td>1</td>
<td>3</td>
<td>4</td>
<td>*</td>
</tr>
<tr>
<td>2</td>
<td>5</td>
<td>6</td>
<td>*</td>
</tr>
</tbody>
</table>
<p><strong>COO 部分：</strong></p>
<table>
<thead>
<tr>
<th><code>row</code></th>
<th><code>col</code></th>
<th><code>data_coo</code></th>
</tr>
</thead>
<tbody>
<tr>
<td><code>[2]</code></td>
<td><code>[3]</code></td>
<td><code>[7]</code></td>
</tr>
</tbody>
</table>
<h3 id="性质">性质</h3>
<p>  Hybrid 混合存储提供了灵活性，可以根据矩阵的特性和需求来选择适合的子格式。</p>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="总结与比较">总结与比较</h2>
<ul>
<li>DIA 和 ELL 格式在进行 SpMV 运算时效率最高，所以它们是应用迭代法（如共轭梯度法）解稀疏线性系统最快的格式；</li>
<li>COO 和 CSR 格式比起 DIA 和 ELL 来，更加灵活，易于操作；</li>
<li>ELL 的优点是快速，而 COO 优点是灵活，二者结合后的 Hybrid 格式是一种不错的稀疏矩阵表示格式；</li>
<li>CSR 格式的压缩率最为稳定，而 DIA 格式与矩阵类型有较大关系（对角矩阵与随机矩阵之间相差数十倍）。</li>
</ul>
<h3 id="一些特殊类型矩阵的存储效率">一些特殊类型矩阵的存储效率</h3>
<p>（数值越小说明压缩率越高，即存储效率越高）</p>
<ul>
<li><strong>Structured Mesh 结构网格</strong></li>
</ul>
<p><img src="/images/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5%E6%B1%87%E6%80%BB/%E7%BB%93%E6%9E%84%E7%BD%91%E6%A0%BC.png" alt="结构网格"></p>
<ul>
<li><strong>Unstructured Mesh 非结构网格</strong></li>
</ul>
<p><img src="/images/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5%E6%B1%87%E6%80%BB/%E9%9D%9E%E7%BB%93%E6%9E%84%E7%BD%91%E6%A0%BC.png" alt="非结构网格"></p>
<ul>
<li><strong>Random matrix 随机矩阵</strong></li>
</ul>
<p><img src="/images/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5%E6%B1%87%E6%80%BB/%E9%9A%8F%E6%9C%BA%E7%9F%A9%E9%98%B5.png" alt="随机矩阵"></p>
<ul>
<li><strong>Power-Law Graph 幂律图</strong></li>
</ul>
<p><img src="/images/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5%E6%B1%87%E6%80%BB/%E5%B9%82%E5%BE%8B%E5%9B%BE.png" alt="幂律图"></p>
<p><strong>格式适用性：</strong><br>
<img src="/images/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5%E6%B1%87%E6%80%BB/%E6%A0%BC%E5%BC%8F%E9%80%82%E7%94%A8%E6%80%A7.png" alt="格式适用性"></p>
<p><br/><br/></p>
<hr>
<br/>
<h2 id="参考来源">参考来源</h2>
<ul>
<li><a href="https://www.bu.edu/pasi/files/2011/01/NathanBell1-10-1000.pdf">NathanBell1-10-1000.pdf (bu.edu)</a></li>
<li><a href="https://www-users.cse.umn.edu/~saad/IterMethBook_2ndEd.pdf">IterMethBook_2ndEd.pdf (umn.edu)</a></li>
<li><a href="https://ece.uwaterloo.ca/~dwharder/aads/Algorithms/Sparse_systems/">稀疏系统 | 算法和数据结构 | 滑铁卢大学 (uwaterloo.ca)</a></li>
<li><a href="https://blog.csdn.net/stark_summer/article/details/49050079">稀疏矩阵存储格式总结 + 存储效率对比:COO,CSR,DIA,ELL,HYB_stark_summer 的博客 -CSDN 博客</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/188700729">Sparse 稀疏矩阵主要存储格式总结 - 知乎 (zhihu.com)</a></li>
</ul>
<p><br/><br/><br/><br/></p>
]]></content>
      <categories>
        <category>技术笔记</category>
        <category>矩阵计算</category>
      </categories>
      <tags>
        <tag>矩阵计算</tag>
        <tag>稀疏矩阵</tag>
      </tags>
  </entry>
</search>
